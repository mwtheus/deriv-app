/*! For license information please see reports.vendors-hooks_node_modules_js-cookie_src_js_cookie_js-node_modules_deriv-com_utils_dist_deriv-29d976.fb5d453791a411008c8f.js.LICENSE.txt */
(self.webpackChunk_deriv_reports=self.webpackChunk_deriv_reports||[]).push([["vendors-hooks_node_modules_js-cookie_src_js_cookie_js-node_modules_deriv-com_utils_dist_deriv-29d976"],{"../hooks/node_modules/js-cookie/src/js.cookie.js":(module,exports,__webpack_require__)=>{eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_RESULT__;/*!\n * JavaScript Cookie v2.2.1\n * https://github.com/js-cookie/js-cookie\n *\n * Copyright 2006, 2015 Klaus Hartl & Fagner Brack\n * Released under the MIT license\n */\n;(function (factory) {\n\tvar registeredInModuleLoader;\n\tif (true) {\n\t\t!(__WEBPACK_AMD_DEFINE_FACTORY__ = (factory),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.call(exports, __webpack_require__, exports, module)) :\n\t\t__WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));\n\t\tregisteredInModuleLoader = true;\n\t}\n\tif (true) {\n\t\tmodule.exports = factory();\n\t\tregisteredInModuleLoader = true;\n\t}\n\tif (!registeredInModuleLoader) {\n\t\tvar OldCookies = window.Cookies;\n\t\tvar api = window.Cookies = factory();\n\t\tapi.noConflict = function () {\n\t\t\twindow.Cookies = OldCookies;\n\t\t\treturn api;\n\t\t};\n\t}\n}(function () {\n\tfunction extend () {\n\t\tvar i = 0;\n\t\tvar result = {};\n\t\tfor (; i < arguments.length; i++) {\n\t\t\tvar attributes = arguments[ i ];\n\t\t\tfor (var key in attributes) {\n\t\t\t\tresult[key] = attributes[key];\n\t\t\t}\n\t\t}\n\t\treturn result;\n\t}\n\n\tfunction decode (s) {\n\t\treturn s.replace(/(%[0-9A-Z]{2})+/g, decodeURIComponent);\n\t}\n\n\tfunction init (converter) {\n\t\tfunction api() {}\n\n\t\tfunction set (key, value, attributes) {\n\t\t\tif (typeof document === 'undefined') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tattributes = extend({\n\t\t\t\tpath: '/'\n\t\t\t}, api.defaults, attributes);\n\n\t\t\tif (typeof attributes.expires === 'number') {\n\t\t\t\tattributes.expires = new Date(new Date() * 1 + attributes.expires * 864e+5);\n\t\t\t}\n\n\t\t\t// We're using \"expires\" because \"max-age\" is not supported by IE\n\t\t\tattributes.expires = attributes.expires ? attributes.expires.toUTCString() : '';\n\n\t\t\ttry {\n\t\t\t\tvar result = JSON.stringify(value);\n\t\t\t\tif (/^[\\{\\[]/.test(result)) {\n\t\t\t\t\tvalue = result;\n\t\t\t\t}\n\t\t\t} catch (e) {}\n\n\t\t\tvalue = converter.write ?\n\t\t\t\tconverter.write(value, key) :\n\t\t\t\tencodeURIComponent(String(value))\n\t\t\t\t\t.replace(/%(23|24|26|2B|3A|3C|3E|3D|2F|3F|40|5B|5D|5E|60|7B|7D|7C)/g, decodeURIComponent);\n\n\t\t\tkey = encodeURIComponent(String(key))\n\t\t\t\t.replace(/%(23|24|26|2B|5E|60|7C)/g, decodeURIComponent)\n\t\t\t\t.replace(/[\\(\\)]/g, escape);\n\n\t\t\tvar stringifiedAttributes = '';\n\t\t\tfor (var attributeName in attributes) {\n\t\t\t\tif (!attributes[attributeName]) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\t\t\t\tstringifiedAttributes += '; ' + attributeName;\n\t\t\t\tif (attributes[attributeName] === true) {\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\t// Considers RFC 6265 section 5.2:\n\t\t\t\t// ...\n\t\t\t\t// 3.  If the remaining unparsed-attributes contains a %x3B (\";\")\n\t\t\t\t//     character:\n\t\t\t\t// Consume the characters of the unparsed-attributes up to,\n\t\t\t\t// not including, the first %x3B (\";\") character.\n\t\t\t\t// ...\n\t\t\t\tstringifiedAttributes += '=' + attributes[attributeName].split(';')[0];\n\t\t\t}\n\n\t\t\treturn (document.cookie = key + '=' + value + stringifiedAttributes);\n\t\t}\n\n\t\tfunction get (key, json) {\n\t\t\tif (typeof document === 'undefined') {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tvar jar = {};\n\t\t\t// To prevent the for loop in the first place assign an empty array\n\t\t\t// in case there are no cookies at all.\n\t\t\tvar cookies = document.cookie ? document.cookie.split('; ') : [];\n\t\t\tvar i = 0;\n\n\t\t\tfor (; i < cookies.length; i++) {\n\t\t\t\tvar parts = cookies[i].split('=');\n\t\t\t\tvar cookie = parts.slice(1).join('=');\n\n\t\t\t\tif (!json && cookie.charAt(0) === '\"') {\n\t\t\t\t\tcookie = cookie.slice(1, -1);\n\t\t\t\t}\n\n\t\t\t\ttry {\n\t\t\t\t\tvar name = decode(parts[0]);\n\t\t\t\t\tcookie = (converter.read || converter)(cookie, name) ||\n\t\t\t\t\t\tdecode(cookie);\n\n\t\t\t\t\tif (json) {\n\t\t\t\t\t\ttry {\n\t\t\t\t\t\t\tcookie = JSON.parse(cookie);\n\t\t\t\t\t\t} catch (e) {}\n\t\t\t\t\t}\n\n\t\t\t\t\tjar[name] = cookie;\n\n\t\t\t\t\tif (key === name) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {}\n\t\t\t}\n\n\t\t\treturn key ? jar[key] : jar;\n\t\t}\n\n\t\tapi.set = set;\n\t\tapi.get = function (key) {\n\t\t\treturn get(key, false /* read as raw */);\n\t\t};\n\t\tapi.getJSON = function (key) {\n\t\t\treturn get(key, true /* read as json */);\n\t\t};\n\t\tapi.remove = function (key, attributes) {\n\t\t\tset(key, '', extend(attributes, {\n\t\t\t\texpires: -1\n\t\t\t}));\n\t\t};\n\n\t\tapi.defaults = {};\n\n\t\tapi.withConverter = init;\n\n\t\treturn api;\n\t}\n\n\treturn init(function () {});\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiLi4vaG9va3Mvbm9kZV9tb2R1bGVzL2pzLWNvb2tpZS9zcmMvanMuY29va2llLmpzIiwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFBQTtBQUFBO0FBQUE7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9AZGVyaXYvcmVwb3J0cy8uLi9ob29rcy9ub2RlX21vZHVsZXMvanMtY29va2llL3NyYy9qcy5jb29raWUuanM/YWU3MSJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiFcbiAqIEphdmFTY3JpcHQgQ29va2llIHYyLjIuMVxuICogaHR0cHM6Ly9naXRodWIuY29tL2pzLWNvb2tpZS9qcy1jb29raWVcbiAqXG4gKiBDb3B5cmlnaHQgMjAwNiwgMjAxNSBLbGF1cyBIYXJ0bCAmIEZhZ25lciBCcmFja1xuICogUmVsZWFzZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlXG4gKi9cbjsoZnVuY3Rpb24gKGZhY3RvcnkpIHtcblx0dmFyIHJlZ2lzdGVyZWRJbk1vZHVsZUxvYWRlcjtcblx0aWYgKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCkge1xuXHRcdGRlZmluZShmYWN0b3J5KTtcblx0XHRyZWdpc3RlcmVkSW5Nb2R1bGVMb2FkZXIgPSB0cnVlO1xuXHR9XG5cdGlmICh0eXBlb2YgZXhwb3J0cyA9PT0gJ29iamVjdCcpIHtcblx0XHRtb2R1bGUuZXhwb3J0cyA9IGZhY3RvcnkoKTtcblx0XHRyZWdpc3RlcmVkSW5Nb2R1bGVMb2FkZXIgPSB0cnVlO1xuXHR9XG5cdGlmICghcmVnaXN0ZXJlZEluTW9kdWxlTG9hZGVyKSB7XG5cdFx0dmFyIE9sZENvb2tpZXMgPSB3aW5kb3cuQ29va2llcztcblx0XHR2YXIgYXBpID0gd2luZG93LkNvb2tpZXMgPSBmYWN0b3J5KCk7XG5cdFx0YXBpLm5vQ29uZmxpY3QgPSBmdW5jdGlvbiAoKSB7XG5cdFx0XHR3aW5kb3cuQ29va2llcyA9IE9sZENvb2tpZXM7XG5cdFx0XHRyZXR1cm4gYXBpO1xuXHRcdH07XG5cdH1cbn0oZnVuY3Rpb24gKCkge1xuXHRmdW5jdGlvbiBleHRlbmQgKCkge1xuXHRcdHZhciBpID0gMDtcblx0XHR2YXIgcmVzdWx0ID0ge307XG5cdFx0Zm9yICg7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcblx0XHRcdHZhciBhdHRyaWJ1dGVzID0gYXJndW1lbnRzWyBpIF07XG5cdFx0XHRmb3IgKHZhciBrZXkgaW4gYXR0cmlidXRlcykge1xuXHRcdFx0XHRyZXN1bHRba2V5XSA9IGF0dHJpYnV0ZXNba2V5XTtcblx0XHRcdH1cblx0XHR9XG5cdFx0cmV0dXJuIHJlc3VsdDtcblx0fVxuXG5cdGZ1bmN0aW9uIGRlY29kZSAocykge1xuXHRcdHJldHVybiBzLnJlcGxhY2UoLyglWzAtOUEtWl17Mn0pKy9nLCBkZWNvZGVVUklDb21wb25lbnQpO1xuXHR9XG5cblx0ZnVuY3Rpb24gaW5pdCAoY29udmVydGVyKSB7XG5cdFx0ZnVuY3Rpb24gYXBpKCkge31cblxuXHRcdGZ1bmN0aW9uIHNldCAoa2V5LCB2YWx1ZSwgYXR0cmlidXRlcykge1xuXHRcdFx0aWYgKHR5cGVvZiBkb2N1bWVudCA9PT0gJ3VuZGVmaW5lZCcpIHtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXG5cdFx0XHRhdHRyaWJ1dGVzID0gZXh0ZW5kKHtcblx0XHRcdFx0cGF0aDogJy8nXG5cdFx0XHR9LCBhcGkuZGVmYXVsdHMsIGF0dHJpYnV0ZXMpO1xuXG5cdFx0XHRpZiAodHlwZW9mIGF0dHJpYnV0ZXMuZXhwaXJlcyA9PT0gJ251bWJlcicpIHtcblx0XHRcdFx0YXR0cmlidXRlcy5leHBpcmVzID0gbmV3IERhdGUobmV3IERhdGUoKSAqIDEgKyBhdHRyaWJ1dGVzLmV4cGlyZXMgKiA4NjRlKzUpO1xuXHRcdFx0fVxuXG5cdFx0XHQvLyBXZSdyZSB1c2luZyBcImV4cGlyZXNcIiBiZWNhdXNlIFwibWF4LWFnZVwiIGlzIG5vdCBzdXBwb3J0ZWQgYnkgSUVcblx0XHRcdGF0dHJpYnV0ZXMuZXhwaXJlcyA9IGF0dHJpYnV0ZXMuZXhwaXJlcyA/IGF0dHJpYnV0ZXMuZXhwaXJlcy50b1VUQ1N0cmluZygpIDogJyc7XG5cblx0XHRcdHRyeSB7XG5cdFx0XHRcdHZhciByZXN1bHQgPSBKU09OLnN0cmluZ2lmeSh2YWx1ZSk7XG5cdFx0XHRcdGlmICgvXltcXHtcXFtdLy50ZXN0KHJlc3VsdCkpIHtcblx0XHRcdFx0XHR2YWx1ZSA9IHJlc3VsdDtcblx0XHRcdFx0fVxuXHRcdFx0fSBjYXRjaCAoZSkge31cblxuXHRcdFx0dmFsdWUgPSBjb252ZXJ0ZXIud3JpdGUgP1xuXHRcdFx0XHRjb252ZXJ0ZXIud3JpdGUodmFsdWUsIGtleSkgOlxuXHRcdFx0XHRlbmNvZGVVUklDb21wb25lbnQoU3RyaW5nKHZhbHVlKSlcblx0XHRcdFx0XHQucmVwbGFjZSgvJSgyM3wyNHwyNnwyQnwzQXwzQ3wzRXwzRHwyRnwzRnw0MHw1Qnw1RHw1RXw2MHw3Qnw3RHw3QykvZywgZGVjb2RlVVJJQ29tcG9uZW50KTtcblxuXHRcdFx0a2V5ID0gZW5jb2RlVVJJQ29tcG9uZW50KFN0cmluZyhrZXkpKVxuXHRcdFx0XHQucmVwbGFjZSgvJSgyM3wyNHwyNnwyQnw1RXw2MHw3QykvZywgZGVjb2RlVVJJQ29tcG9uZW50KVxuXHRcdFx0XHQucmVwbGFjZSgvW1xcKFxcKV0vZywgZXNjYXBlKTtcblxuXHRcdFx0dmFyIHN0cmluZ2lmaWVkQXR0cmlidXRlcyA9ICcnO1xuXHRcdFx0Zm9yICh2YXIgYXR0cmlidXRlTmFtZSBpbiBhdHRyaWJ1dGVzKSB7XG5cdFx0XHRcdGlmICghYXR0cmlidXRlc1thdHRyaWJ1dGVOYW1lXSkge1xuXHRcdFx0XHRcdGNvbnRpbnVlO1xuXHRcdFx0XHR9XG5cdFx0XHRcdHN0cmluZ2lmaWVkQXR0cmlidXRlcyArPSAnOyAnICsgYXR0cmlidXRlTmFtZTtcblx0XHRcdFx0aWYgKGF0dHJpYnV0ZXNbYXR0cmlidXRlTmFtZV0gPT09IHRydWUpIHtcblx0XHRcdFx0XHRjb250aW51ZTtcblx0XHRcdFx0fVxuXG5cdFx0XHRcdC8vIENvbnNpZGVycyBSRkMgNjI2NSBzZWN0aW9uIDUuMjpcblx0XHRcdFx0Ly8gLi4uXG5cdFx0XHRcdC8vIDMuICBJZiB0aGUgcmVtYWluaW5nIHVucGFyc2VkLWF0dHJpYnV0ZXMgY29udGFpbnMgYSAleDNCIChcIjtcIilcblx0XHRcdFx0Ly8gICAgIGNoYXJhY3Rlcjpcblx0XHRcdFx0Ly8gQ29uc3VtZSB0aGUgY2hhcmFjdGVycyBvZiB0aGUgdW5wYXJzZWQtYXR0cmlidXRlcyB1cCB0byxcblx0XHRcdFx0Ly8gbm90IGluY2x1ZGluZywgdGhlIGZpcnN0ICV4M0IgKFwiO1wiKSBjaGFyYWN0ZXIuXG5cdFx0XHRcdC8vIC4uLlxuXHRcdFx0XHRzdHJpbmdpZmllZEF0dHJpYnV0ZXMgKz0gJz0nICsgYXR0cmlidXRlc1thdHRyaWJ1dGVOYW1lXS5zcGxpdCgnOycpWzBdO1xuXHRcdFx0fVxuXG5cdFx0XHRyZXR1cm4gKGRvY3VtZW50LmNvb2tpZSA9IGtleSArICc9JyArIHZhbHVlICsgc3RyaW5naWZpZWRBdHRyaWJ1dGVzKTtcblx0XHR9XG5cblx0XHRmdW5jdGlvbiBnZXQgKGtleSwganNvbikge1xuXHRcdFx0aWYgKHR5cGVvZiBkb2N1bWVudCA9PT0gJ3VuZGVmaW5lZCcpIHtcblx0XHRcdFx0cmV0dXJuO1xuXHRcdFx0fVxuXG5cdFx0XHR2YXIgamFyID0ge307XG5cdFx0XHQvLyBUbyBwcmV2ZW50IHRoZSBmb3IgbG9vcCBpbiB0aGUgZmlyc3QgcGxhY2UgYXNzaWduIGFuIGVtcHR5IGFycmF5XG5cdFx0XHQvLyBpbiBjYXNlIHRoZXJlIGFyZSBubyBjb29raWVzIGF0IGFsbC5cblx0XHRcdHZhciBjb29raWVzID0gZG9jdW1lbnQuY29va2llID8gZG9jdW1lbnQuY29va2llLnNwbGl0KCc7ICcpIDogW107XG5cdFx0XHR2YXIgaSA9IDA7XG5cblx0XHRcdGZvciAoOyBpIDwgY29va2llcy5sZW5ndGg7IGkrKykge1xuXHRcdFx0XHR2YXIgcGFydHMgPSBjb29raWVzW2ldLnNwbGl0KCc9Jyk7XG5cdFx0XHRcdHZhciBjb29raWUgPSBwYXJ0cy5zbGljZSgxKS5qb2luKCc9Jyk7XG5cblx0XHRcdFx0aWYgKCFqc29uICYmIGNvb2tpZS5jaGFyQXQoMCkgPT09ICdcIicpIHtcblx0XHRcdFx0XHRjb29raWUgPSBjb29raWUuc2xpY2UoMSwgLTEpO1xuXHRcdFx0XHR9XG5cblx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHR2YXIgbmFtZSA9IGRlY29kZShwYXJ0c1swXSk7XG5cdFx0XHRcdFx0Y29va2llID0gKGNvbnZlcnRlci5yZWFkIHx8IGNvbnZlcnRlcikoY29va2llLCBuYW1lKSB8fFxuXHRcdFx0XHRcdFx0ZGVjb2RlKGNvb2tpZSk7XG5cblx0XHRcdFx0XHRpZiAoanNvbikge1xuXHRcdFx0XHRcdFx0dHJ5IHtcblx0XHRcdFx0XHRcdFx0Y29va2llID0gSlNPTi5wYXJzZShjb29raWUpO1xuXHRcdFx0XHRcdFx0fSBjYXRjaCAoZSkge31cblx0XHRcdFx0XHR9XG5cblx0XHRcdFx0XHRqYXJbbmFtZV0gPSBjb29raWU7XG5cblx0XHRcdFx0XHRpZiAoa2V5ID09PSBuYW1lKSB7XG5cdFx0XHRcdFx0XHRicmVhaztcblx0XHRcdFx0XHR9XG5cdFx0XHRcdH0gY2F0Y2ggKGUpIHt9XG5cdFx0XHR9XG5cblx0XHRcdHJldHVybiBrZXkgPyBqYXJba2V5XSA6IGphcjtcblx0XHR9XG5cblx0XHRhcGkuc2V0ID0gc2V0O1xuXHRcdGFwaS5nZXQgPSBmdW5jdGlvbiAoa2V5KSB7XG5cdFx0XHRyZXR1cm4gZ2V0KGtleSwgZmFsc2UgLyogcmVhZCBhcyByYXcgKi8pO1xuXHRcdH07XG5cdFx0YXBpLmdldEpTT04gPSBmdW5jdGlvbiAoa2V5KSB7XG5cdFx0XHRyZXR1cm4gZ2V0KGtleSwgdHJ1ZSAvKiByZWFkIGFzIGpzb24gKi8pO1xuXHRcdH07XG5cdFx0YXBpLnJlbW92ZSA9IGZ1bmN0aW9uIChrZXksIGF0dHJpYnV0ZXMpIHtcblx0XHRcdHNldChrZXksICcnLCBleHRlbmQoYXR0cmlidXRlcywge1xuXHRcdFx0XHRleHBpcmVzOiAtMVxuXHRcdFx0fSkpO1xuXHRcdH07XG5cblx0XHRhcGkuZGVmYXVsdHMgPSB7fTtcblxuXHRcdGFwaS53aXRoQ29udmVydGVyID0gaW5pdDtcblxuXHRcdHJldHVybiBhcGk7XG5cdH1cblxuXHRyZXR1cm4gaW5pdChmdW5jdGlvbiAoKSB7fSk7XG59KSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///../hooks/node_modules/js-cookie/src/js.cookie.js\n")},"../../node_modules/@deriv-com/utils/dist/deriv-utils.js":(__unused_webpack___webpack_module__,__webpack_exports__,__webpack_require__)=>{"use strict";eval('__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   AppIDConstants: () => (/* binding */ Xe),\n/* harmony export */   BrandConstants: () => (/* binding */ nt),\n/* harmony export */   BrandUtils: () => (/* binding */ gt),\n/* harmony export */   CountryUtils: () => (/* binding */ mt),\n/* harmony export */   CurrencyConstants: () => (/* binding */ Qe),\n/* harmony export */   DocumentConstants: () => (/* binding */ qe),\n/* harmony export */   FormatUtils: () => (/* binding */ at),\n/* harmony export */   ImageUtils: () => (/* binding */ st),\n/* harmony export */   LocalStorageConstants: () => (/* binding */ et),\n/* harmony export */   LocalStorageUtils: () => (/* binding */ it),\n/* harmony export */   MobileDevicesConstants: () => (/* binding */ ot),\n/* harmony export */   OSDetectionUtils: () => (/* binding */ pt),\n/* harmony export */   ObjectUtils: () => (/* binding */ ct),\n/* harmony export */   PromiseUtils: () => (/* binding */ dt),\n/* harmony export */   URLConstants: () => (/* binding */ tt),\n/* harmony export */   URLUtils: () => (/* binding */ ut),\n/* harmony export */   ValidationConstants: () => (/* binding */ rt),\n/* harmony export */   WebSocketUtils: () => (/* binding */ lt)\n/* harmony export */ });\nconst P = {\n  real: "green.derivws.com",\n  demo: "blue.derivws.com"\n}, C = {\n  "deriv.app": "16929",\n  "app.deriv.com": "16929",\n  "staging-app.deriv.com": "16303",\n  "app.deriv.me": "1411",\n  "staging-app.deriv.me": "1411",\n  "app.deriv.be": "30767",\n  "staging-app.deriv.be": "31186",\n  "binary.com": "1",\n  "test-app.deriv.com": "51072",\n  "p2p.deriv.com": "61859",\n  "staging-p2p.deriv.com": "62019",\n  "api.deriv.com": "36544",\n  "staging-api.deriv.com": "36545",\n  "smarttrader.deriv.com": "22168",\n  "staging-smarttrader.deriv.com": "22169",\n  "staging-dbot.deriv.com": "29934",\n  "staging-dbot.deriv.me": "29934",\n  "staging-dbot.deriv.be": "29934",\n  "dbot.deriv.com": "65555",\n  "dbot.deriv.be": "65556",\n  "dbot.deriv.me": "65557"\n}, _ = "deriv", Xe = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  appBrand: _,\n  domainAppId: C,\n  environments: P\n}, Symbol.toStringTag, { value: "Module" })), O = {\n  AAD: 2,\n  AED: 2,\n  AFN: 2,\n  ALL: 2,\n  AMD: 2,\n  ANG: 2,\n  AOA: 2,\n  ARS: 2,\n  AUD: 2,\n  AWG: 2,\n  AZN: 2,\n  BAM: 2,\n  BBD: 2,\n  BCH: 8,\n  BDT: 2,\n  BGN: 2,\n  BHD: 3,\n  BIF: 0,\n  BMD: 2,\n  BND: 2,\n  BOB: 2,\n  BOV: 2,\n  BRL: 2,\n  BSD: 2,\n  BTC: 8,\n  BTN: 2,\n  BUSD: 2,\n  BWP: 2,\n  BYN: 2,\n  BZD: 2,\n  CAD: 2,\n  CDF: 2,\n  CHE: 2,\n  CHF: 2,\n  CHW: 2,\n  CLF: 4,\n  CLP: 0,\n  CNY: 2,\n  COP: 2,\n  COU: 2,\n  CRC: 2,\n  CUC: 2,\n  CUP: 2,\n  CVE: 2,\n  CZK: 2,\n  DAI: 2,\n  DJF: 0,\n  DKK: 2,\n  DOP: 2,\n  DZD: 2,\n  EGP: 2,\n  ERN: 2,\n  ETB: 2,\n  ETC: 8,\n  ETH: 8,\n  EUR: 2,\n  EURS: 2,\n  eUSDT: 2,\n  FJD: 2,\n  FKP: 2,\n  GBP: 2,\n  GEL: 2,\n  GHS: 2,\n  GIP: 2,\n  GMD: 2,\n  GNF: 0,\n  GTQ: 2,\n  GYD: 2,\n  HKD: 2,\n  HNL: 2,\n  HRK: 2,\n  HTG: 2,\n  HUF: 2,\n  IDK: 0,\n  IDR: 2,\n  ILS: 2,\n  INR: 2,\n  IQD: 3,\n  IRR: 2,\n  ISK: 0,\n  JMD: 2,\n  JOD: 3,\n  JPY: 0,\n  KES: 2,\n  KGS: 2,\n  KHR: 2,\n  KMF: 0,\n  KPW: 2,\n  KRW: 0,\n  KWD: 3,\n  KYD: 2,\n  KZT: 2,\n  LAK: 2,\n  LBP: 2,\n  LKR: 2,\n  LRD: 2,\n  LSL: 2,\n  LTC: 8,\n  LYD: 3,\n  MAD: 2,\n  MDL: 2,\n  MGA: 2,\n  MKD: 2,\n  MMK: 2,\n  MNT: 2,\n  MOP: 2,\n  MRU: 2,\n  MUR: 2,\n  MVR: 2,\n  MWK: 2,\n  MXN: 2,\n  MXV: 2,\n  MYR: 2,\n  MZN: 2,\n  NAD: 2,\n  NGN: 2,\n  NIO: 2,\n  NOK: 2,\n  NPR: 2,\n  NZD: 2,\n  OMR: 3,\n  PAB: 2,\n  PAX: 2,\n  PEN: 2,\n  PGK: 2,\n  PHP: 2,\n  PKR: 2,\n  PLN: 2,\n  PYG: 0,\n  QAR: 2,\n  RON: 2,\n  RSD: 2,\n  RUB: 2,\n  RWF: 0,\n  SAR: 2,\n  SBD: 2,\n  SCR: 2,\n  SDG: 2,\n  SEK: 2,\n  SGD: 2,\n  SHP: 2,\n  SLL: 2,\n  SOS: 2,\n  SRD: 2,\n  SSP: 2,\n  STN: 2,\n  SVC: 2,\n  SYP: 2,\n  SZL: 2,\n  THB: 2,\n  TJS: 2,\n  TMT: 2,\n  TND: 3,\n  TOP: 2,\n  TRY: 2,\n  TTD: 2,\n  TUSD: 2,\n  tUSDT: 2,\n  TWD: 2,\n  TZS: 2,\n  UAH: 2,\n  UGX: 0,\n  USB: 2,\n  USD: 2,\n  USDC: 2,\n  USDK: 2,\n  UST: 2,\n  USN: 2,\n  UYI: 0,\n  UYU: 2,\n  UYW: 4,\n  UZS: 2,\n  VES: 2,\n  VND: 0,\n  VUV: 0,\n  WST: 2,\n  XAF: 0,\n  XCD: 2,\n  XOF: 0,\n  XPF: 0,\n  YER: 2,\n  ZAR: 2,\n  ZMW: 2,\n  ZWL: 2\n}, Qe = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  precision: O\n}, Symbol.toStringTag, { value: "Module" })), T = ["PNG", "JPG", "JPEG", "GIF", "PDF"], qe = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  supportedDocumentFormats: T\n}, Symbol.toStringTag, { value: "Module" })), R = "client.active_loginid", Q = "client.account_list", q = "client.verify_email", U = "config.app_id", M = "config.server_url", S = "i18n_language", ee = "ui.theme", te = "ui.show_report_drawer", re = "ui.expand_account_switcher", ne = "trader.layout", oe = "should_not_show_auto_archive_message_again", ae = "order_ids", se = "should_show_p2p_guide", ie = "should_show_p2p_follow_user_guide", et = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  accountList: Q,\n  activeLoginid: R,\n  configAppId: U,\n  configServerURL: M,\n  i18nLanguage: S,\n  lastVerifyEmail: q,\n  p2pArchiveMessage: oe,\n  p2pOrderIds: ae,\n  p2pShowFollowUserGuide: ie,\n  p2pShowGuide: se,\n  traderLayout: ne,\n  uiExpandAccountSwitcher: re,\n  uiShowReportsDrawer: te,\n  uiTheme: ee\n}, Symbol.toStringTag, { value: "Module" })), y = "deriv.com", N = "deriv.me", $ = "deriv.be", E = [y, $, N], h = typeof window < "u" && window.location.hostname.split("app.")[1], d = E.includes(h) ? h : y, ce = `https://bot.${d}`, de = `https://staging-bot.${d}`, le = `https://app.${d}`, ue = `https://staging-app.${d}`, B = `https://${d}`, j = `https://eu.${d}`, ge = `https://staging.${d}`, pe = d, me = `https://smarttrader.${d}`, fe = `https://staging-smarttrader.${d}`, Se = `https://p2p.${d}`, Ae = `https://staging-p2p.${d}`, he = "https://wa.me/35699578341", De = {\n  lang: "lang",\n  action: "action"\n}, F = "https://www.cloudflare.com/cdn-cgi/trace", tt = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  baseDomain: h,\n  binaryBotProduction: ce,\n  binaryBotStaging: de,\n  cloudflareTrace: F,\n  deriv: y,\n  derivAppProduction: le,\n  derivAppStaging: ue,\n  derivBe: $,\n  derivComProduction: B,\n  derivComProductionEU: j,\n  derivComStaging: ge,\n  derivHost: pe,\n  derivMe: N,\n  derivP2pProduction: Se,\n  derivP2pStaging: Ae,\n  domain: d,\n  queryParameters: De,\n  smartTraderProduction: me,\n  smartTraderStaging: fe,\n  supportedDomains: E,\n  whatsApp: he\n}, Symbol.toStringTag, { value: "Module" })), ve = {\n  /**\n   * Represents the special characters permitted in an address.\n   * @remarks This is to be used in the message of the validation error, to let the user know which characters are permitted.\n   * @example `Special characters permitted: ${ValidationConstants.messagesHints.addressPermittedSpecialCharacters}`\n   */\n  addressPermittedSpecialCharacters: ". , \' : ; ( ) ° @ # / -"\n}, _e = {\n  /**\n   * @regex /^[\\p{L}\\p{Nd}\\s\'’.,:;()\\\\x{b0}@#/-]{0,70}$/u\n   * @description\n   * This pattern matches any string with no more than 70 characters, can contain letters, numbers, spaces, and any of the following special characters: \'’.,:;()@#/-.\n   * @example ValidationConstants.patterns.address.test("123 Main St.")\n   * @example ValidationConstants.patterns.address.test("Apt. 123")\n   * @example ValidationConstants.patterns.address.test("123 Main St. Apt. 123")\n   **/\n  address: /^[\\p{L}\\p{Nd}\\s\'’.,:;()\\\\x{b0}@#/-]{0,70}$/u,\n  /**\n   * @regex /^\\p{L}[\\p{L}\\s\'.-]{0,49}$/u\n   * @description This pattern matches any string with no more than 50 characters.\n   * @example ValidationConstants.patterns.addressCity.test("Main St.")\n   * @example ValidationConstants.patterns.addressCity.test("Apt.")\n   * @example ValidationConstants.patterns.addressCity.test("Main St. Apt.")\n   **/\n  addressCity: new RegExp("^\\\\p{L}[\\\\p{L}\\\\s\'.-]{0,49}$", "u"),\n  /**\n   * @regex /^[\\p{L}\\p{Nd}\\s\'.,-;]{0,100}$/u\n   * @description This pattern matches any string that contains up to 100 characters composed of Unicode letters, Unicode digits, whitespace characters, apostrophes, periods, commas, hyphens, and semicolons ( \'.,-;).\n   * @example ValidationConstants.patterns.addressState.test("New York")\n   * @example ValidationConstants.patterns.addressState.test("Québec")\n   **/\n  addressState: /^[\\p{L}\\p{Nd}\\s\'.,(),-;]{0,100}$/u,\n  /**\n   * @regex /^(?=.{1,20}$)[+-]?[0-9]+\\.?[0-9]*$/\n   * @description This pattern matches any string with 0-9 characters (numeric values. i.e. both integers and floats), and may contain a \'+\' or \'-\' sign.\n   * @example ValidationConstants.patterns.barrier.test("123")\n   * @example ValidationConstants.patterns.barrier.test("123.45")\n   * @example ValidationConstants.patterns.barrier.test("-123")\n   * @example ValidationConstants.patterns.barrier.test("-123.45")\n   * @example ValidationConstants.patterns.barrier.test("+123")\n   * @example ValidationConstants.patterns.barrier.test("+123.45")\n   */\n  barrier: /^(?=.{1,20}$)[+-]?[0-9]+\\.?[0-9]*$/,\n  /**\n   * @regex /^\\d*(\\.\\d+)?$/\n   * @description This pattern matches any string that contains only numeric values, and may contain a decimal point.\n   * @example ValidationConstants.patterns.decimal.test("123")\n   * @example ValidationConstants.patterns.decimal.test("123.45")\n   */\n  decimal: /^\\d*(\\.\\d+)?$/,\n  /**\n   * @regex /^\\d+$/\n   * @description This pattern matches any string that contains only numeric values.\n   * @example ValidationConstants.patterns.integer.test("123")\n   * @example ValidationConstants.patterns.integer.test("12345")\n   */\n  integer: /^\\d+$/,\n  /**\n   * @regex /p[.\\s]+o[.\\s]+box/i\n   * @description This pattern matches any string that contains the characters \'p.o.box\' or \'p o box\'.\n   * @example ValidationConstants.patterns.postalOfficeBoxNumber.test("P.O. Box 1234")\n   * @example ValidationConstants.patterns.postalOfficeBoxNumber.test("p.o. box 1234")\n   * @example ValidationConstants.patterns.postalOfficeBoxNumber.test("P O Box 1234")\n   * @example ValidationConstants.patterns.postalOfficeBoxNumber.test("p o box 1234")\n   */\n  postalOfficeBoxNumber: /p[.\\s]+o[.\\s]+box/i,\n  /**\n   * @regex /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,63}$/\n   * @description This pattern matches any string with 2-63 characters, and contains aplhanumeric characters, an \'@\' sign, and may also contain any of these characters \'+,-._\'.\n   * @example ValidationConstants.patterns.email.test("doe@meme.me")\n   * **/\n  email: /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,63}$/,\n  /**\n   * @regex /^(?=.*[a-z])(?=.*\\d)(?=.*[A-Z])[!-~]{8,25}$/\n   * @description This pattern matches any string that contains 8-25 characters that include; at least one lowercase letter, at least one digit, at least one uppercase letter, and only printable ASCII characters (from \'!\' to \'~\')\n   * @example ValidationConstants.patterns.password.test("Password1!")\n   **/\n  password: /^(?=.*[a-z])(?=.*\\d)(?=.*[A-Z])[!-~]{8,25}$/,\n  /**\n   * @regex /^(?=.*[a-z])(?=.*[0-9])(?=.*[A-Z])[ -~]{6,50}$/\n   * @description This pattern matches any string that contains 6-50 characters that include; at least one lowercase letter, at least one digit, at least one uppercase letter, and only printable ASCII characters (from \'!\' to \'~\')\n   * @example ValidationConstants.patterns.affilliatePassword.test("Password1")\n   **/\n  affilliatePassword: /^(?=.*[a-z])(?=.*[0-9])(?=.*[A-Z])[ -~]{6,50}$/,\n  /**\n   * @regex /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{1,255}$/\n   * @description This pattern matches any string with 1-255 characters, and contains aplhanumeric characters, an \'@\' sign, and may also contain any of these characters \'+,-._\'.\n   * @example ValidationConstants.patterns.paymentAgentEmail.test("doe@meme.us")\n   **/\n  paymentAgentEmail: /^[a-zA-Z0-9_.+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{1,255}$/,\n  /**\n   * @regex /^([A-Za-z0-9][A-Za-z0-9\\s-]{0,20})?$/\n   * @description This pattern matches any string with no more than 20 characters and may not contain \'+\'.\n   * @example ValidationConstants.patterns.postalCode.test("123")\n   * @example ValidationConstants.patterns.postalCode.test("123-456")\n   **/\n  postalCode: /^([A-Za-z0-9][A-Za-z0-9\\s-]{0,20})?$/,\n  /**\n   * @regex /^(?!^$|\\s+)[A-Za-z0-9.\\/\\s-]{0,25}$/\n   * @description This pattern matches any string with 0-25 characters, and may contain alphanumeric characters (both uppercase and lowercase), and any of these characters\'./-\', and or sapce characters\n   * @example ValidationConstants.patterns.taxIdentificationNumber.test("123")\n   **/\n  taxIdentificationNumber: /^(?!^$|\\s+)[A-Za-z0-9.\\/\\s-]{0,25}$/,\n  /**\n   * @regex /^\\+((-|\\s)*[0-9]){9,20}$/\n   * @description This pattern matches any string that starts with a \'+\' character, followed by 9-20 digits, allowing hyphens or spaces.\n   * @example ValidationConstants.patterns.phoneNumber.test("+1234567890")\n   **/\n  phoneNumber: /^\\+((-|\\s)*[0-9]){9,20}$/,\n  /**\n   * @regex /(image|application)\\/(jpe?g|pdf|png)$/\n   * @description This pattern matches any of the file types jpeg, jpg, pdf, or png.\n   * @example ValidationConstants.patterns.fileType.test("image/jpeg")\n   * @example ValidationConstants.patterns.fileType.test("application/pdf")\n   * @example ValidationConstants.patterns.fileType.test("image/png")\n   * @example ValidationConstants.patterns.fileType.test("image/jpg")\n   **/\n  fileType: /(image|application)\\/(jpe?g|pdf|png)$/,\n  /**\n   * @regex /(^\\d{4})\\s(\\d{2}X{2})\\s(X{4})\\s(\\d{4}$)/\n   * @description This pattern matches any string that\'s formatted in the following format: 1234 56XX XXXX 1121.\n   * @example ValidationConstants.patterns.formattedCardNumber.test("1234 56XX XXXX 1121")\n   **/\n  formattedCardNumber: /(^\\d{4})\\s(\\d{2}X{2})\\s(X{4})\\s(\\d{4}$)/,\n  /**\n   * @regex /[^\\dX\\s]/\n   * @description The is pattern matches any string that contains characters that aren\'t digits, the uppercase letter \'X\' and spaces.\n   * @example ValidationConstants.patterns.invalidFormattedCardNumberCharacters.test("9876-5432-1098")\n   * @example ValidationConstants.patterns.invalidFormattedCardNumberCharacters.test("9876 5432 1098")\n   **/\n  invalidFormattedCardNumberCharacters: /[^\\dX\\s]/,\n  /**\n   * @regex /^(?=.*[a-z])(?=.*[0-9])(?=.*[A-Z])(?=.*[!@#$%^&*()+\\-=\\[\\]{};\':\\"|,\\.<>\\?_~])[ -~]{8,16}$/\n   * @description This pattern matches any string that contains 8-16 characters that include; at least one lowercase letter, at least one digit, at least one uppercase letter, and only printable ASCII characters (from \'!\' to \'~\')\n   * @example ValidationConstants.patterns.tradingPlatformInvestorPassword.test("Password1!$")\n   **/\n  tradingPlatformInvestorPassword: /^(?=.*[a-z])(?=.*[0-9])(?=.*[A-Z])(?=.*[!@#$%^&*()+\\-=\\[\\]{};\':\\"|,\\.<>\\?_~])[ -~]{8,16}$/,\n  /**\n   * @regex /^[A-Za-z]+([a-zA-Z.\' -])*[a-zA-Z.\' -]+$/\n   * @description This pattern matches any string that starts with one or more letters (uppercase or lowercase), followed by zero or more occurrences of letters, and any of these characters (.\' -) and ends with one or more occurrences of letters, and any of these characters (.\' -).\n   * @example ValidationConstants.patterns.letterSymbols.test("John Doe")\n   * @example ValidationConstants.patterns.letterSymbols.test("John-Doe")\n   * @example ValidationConstants.patterns.letterSymbols.test("John O\'Doe")\n   */\n  letterSymbols: /^[A-Za-z]+([a-zA-Z.\' -])*[a-zA-Z.\' -]+$/,\n  /**\n   * @regex /^(?!.*\\s{2,})(?!\\s)[\\p{L}\\s\'.-]{1,50}$/u\n   * @description This pattern matches any string that contains 1 to 50 characters, starts and ends with valid characters (letters, whitespace, period, single quote, or hyphen).\n   * @example ValidationConstants.patterns.name.test("John Doe")\n   * @example ValidationConstants.patterns.name.test("John-Doe")\n   * @example ValidationConstants.patterns.name.test("John O\'Doe")\n   * @example ValidationConstants.patterns.name.test("John O. Doe")\n   */\n  name: /^(?!.*\\s{2,})(?!\\s)[\\p{L}\\s\'.-]{1,50}$/u,\n  /**\n   * @regex /[`~!@#$%^&*)(_=+[}{\\]\\\\/";:?><|]+/\n   * @description This pattern matches any string that contains any of these characters: `~!@#$%^&*)(_=+[}{\\]\\\\/";:?><|\n   * @example ValidationConstants.patterns.general.test("Password1!")\n   */\n  general: /[`~!@#$%^&*)(_=+[}{\\]\\\\/";:?><|]+/,\n  /**\n   * @regex /[a-z]/\n   * @description This pattern matches any string that contains lowercase letters.\n   * @example ValidationConstants.patterns.lowercase.test("abc")\n   */\n  lowercase: /[a-z]/,\n  /**\n   * @regex /\\d/\n   * @description This pattern matches any string that contains digits.\n   * @example ValidationConstants.patterns.number.test("pets123")\n   */\n  number: /\\d/,\n  /**\n   * @regex /\\W/\n   * @description This pattern matches any string that contains special characters.\n   * @example ValidationConstants.patterns.specialCharacter.test("Password1!")\n   */\n  specialCharacter: /\\W/,\n  /**\n   * @regex /[A-Z]/\n   * @description This pattern matches any string that contains uppercase letters.\n   * @example ValidationConstants.patterns.uppercase.test("ABC")\n   */\n  uppercase: /[A-Z]/,\n  /**\n   * @regex /^.{8,16}$/\n   * @description This pattern matches any string that contains 8-16 characters.\n   * @example ValidationConstants.patterns.between8and16Characters.test("Password1!")\n   */\n  between8and16Characters: /^.{8,16}$/,\n  /**\n   * @regex /^.{8,25}$/\n   * @description This pattern matches any string that contains 8-25 characters.\n   * @example ValidationConstants.patterns.between8and25Characters.test("Password1!")\n   */\n  between8and25Characters: /^.{8,25}$/\n}, rt = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  messagesHints: ve,\n  patterns: _e\n}, Symbol.toStringTag, { value: "Module" })), G = {\n  brandName: "Deriv",\n  domainName: "Deriv.com"\n}, I = {\n  fx: "Deriv (FX) Ltd",\n  maltainvest: "Deriv Investments (Europe) Limited",\n  svg: "Deriv (SVG) LLC",\n  v: "Deriv (V) Ltd"\n}, Y = {\n  trader: "Deriv Trader",\n  dBot: "Deriv Bot",\n  mt5: "Deriv MT5",\n  cTrader: "Deriv cTrader",\n  derivX: "Deriv X",\n  smartTrader: "SmartTrader",\n  bBot: "Binary Bot",\n  go: "Deriv GO"\n}, nt = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  brandConfig: G,\n  landingCompanies: I,\n  platforms: Y\n}, Symbol.toStringTag, { value: "Module" })), z = /(ALP-|AMN-|ANA-|ANE-|ANG-|AQM-|ARS-|ART-|ATU-|BAC-|BLA-|BRQ-|CAG-|CAM-|CAN-|CAZ-|CDL-|CDY-|CLT-|CRO-|CUN-|DIG-|DRA-|DUA-|DUB-|DVC-|ELE-|ELS-|EML-|EVA-|EVR-|FIG-|FLA-|FRL-|GLK-|HMA-|HW-|HWI-|INE-|JAT-|JEF-|JER-|JKM-|JNY-|JSC-|LDN-|LIO-|LON-|LUA-|LYA-|LYO-|MAR-|MED-|MHA-|MLA-|MRD-|MYA-|NCE-|NEO-|NOH-|NOP-|OCE-|PAR-|PIC-|POT-|PPA-|PRA-|RNE-|SEA-|SLA-|SNE-|SPN-|STK-|TAH-|TAS-|TET-|TRT-|VCE-|VIE-|VKY-|VNS-|VOG-|VTR-|WAS-|WKG-|WLZ-|JAD-|MLD-|RTE-|NAM-|NEN-|BAL-|JLN-|YAL-|MGA-|FGD-|XYAO-|BON-|ALN-|ALT-|BRA-|DBY2-|STG-|MAO-|LEM-|GOA-|FOA-|MNA-|LNA-)/, ot = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  huaweiDevicesRegex: z\n}, Symbol.toStringTag, { value: "Module" })), ye = (e, t) => {\n  try {\n    const { locale: r = "en-US", currency: n, decimalPlaces: o } = t || {}, i = O[n ?? "USD"], a = o || i;\n    return new Intl.NumberFormat(r, {\n      minimumFractionDigits: a,\n      maximumFractionDigits: a\n    }).format(e);\n  } catch {\n    return e.toString();\n  }\n}, be = (e, t) => {\n  let r;\n  const {\n    dateOptions: n = { day: "2-digit", month: "2-digit", year: "numeric" },\n    format: o = "YYYY-MM-DD",\n    unix: i = !1\n  } = t || {}, a = { ...n };\n  if (typeof e == "number" && i)\n    r = new Date(e * 1e3);\n  else if (typeof e == "string" || e instanceof Date) {\n    if (r = new Date(e), isNaN(r.getTime()))\n      throw new Error("Invalid date input");\n  } else\n    throw new Error("Invalid date input");\n  switch (o) {\n    case "DD MMM YYYY":\n      a.day = "2-digit", a.month = "short", a.year = "numeric";\n      break;\n    case "MMM DD YYYY":\n      return a.day = "2-digit", a.month = "short", a.year = "numeric", r.toLocaleDateString("en-GB", a).replace(/(\\d{2}) (\\w{3}) (\\d{4})/, "$2 $1 $3");\n    case "DD-MM-YYYY":\n      return a.day = "2-digit", a.month = "2-digit", a.year = "numeric", r.toLocaleDateString("en-GB", a).replace(/(\\d{2})\\/(\\d{2})\\/(\\d{4})/, "$1-$2-$3");\n    default:\n      a.year = "numeric", a.month = "2-digit", a.day = "2-digit";\n      break;\n  }\n  const s = r.toLocaleDateString("en-GB", a).replace(/(\\d{2}) (\\w{3,4}) (\\d{4})/, (c, u, l, p) => `${u} ${l.slice(0, 3)} ${p}`);\n  return o === "YYYY-MM-DD" ? s.replace(/(\\d{2})\\/(\\d{2})\\/(\\d{4})/, "$3-$2-$1") : s;\n}, we = (e, t = !1) => {\n  let r;\n  if (typeof e == "number" && t)\n    r = new Date(e * 1e3);\n  else if (typeof e == "string" || e instanceof Date) {\n    if (r = new Date(e), isNaN(r.getTime()))\n      throw new Error("Invalid date input");\n  } else\n    throw new Error("Invalid date input");\n  return `${r.getUTCHours().toString().padStart(2, "0")}:${r.getUTCMinutes().toString().padStart(2, "0")}:${r.getUTCSeconds().toString().padStart(2, "0")} GMT`;\n}, Le = (e, t = "days", r = "add") => {\n  if (e < 0)\n    throw new Error("Amount must be a positive number.");\n  const n = /* @__PURE__ */ new Date(), o = r === "add" ? e : -e;\n  return t === "years" ? n.setFullYear(n.getFullYear() + o) : t === "days" && n.setDate(n.getDate() + o), n;\n}, Pe = (e) => {\n  const t = e.split(/,\\s/), r = /:\\s([0-9a-zA-Z]+.{25,28})/gm.exec(t[0]), n = r == null ? void 0 : r[1], o = /:\\s([0-9a-zA-Z]+.{25,34})/gm.exec(t[1]), i = o == null ? void 0 : o[1];\n  return { addressHash: n, blockchainHash: i, splitLongcode: t };\n}, at = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  formatMoney: ye,\n  getAdjustedDate: Le,\n  getFormattedDateString: be,\n  getFormattedTimeString: we,\n  parseCryptoLongcode: Pe\n}, Symbol.toStringTag, { value: "Module" })), w = 2560, Ce = 0.9, Oe = 4, Z = ({ src: e, filename: t, options: r }) => {\n  const { maxWidth: n = w, quality: o = Ce } = r || {};\n  return new Promise((i, a) => {\n    const s = new Image();\n    s.src = e, s.onload = () => {\n      const c = document.createElement("canvas"), u = c.getContext("2d");\n      if (!u || !(u instanceof CanvasRenderingContext2D))\n        return a(new Error("Failed to get 2D context"));\n      if (s.naturalWidth > n) {\n        const l = w, p = l / s.naturalWidth;\n        c.width = l, c.height = s.naturalHeight * p;\n      } else\n        c.width = s.naturalWidth, c.height = s.naturalHeight;\n      u.fillStyle = "transparent", u.fillRect(0, 0, c.width, c.height), u.save(), u.drawImage(s, 0, 0, c.width, c.height), c.toBlob(\n        (l) => {\n          if (!l)\n            return;\n          const p = t.replace(/\\.[^/.]+$/, ".jpg"), A = new Blob([l], { type: "image/jpeg" });\n          A.lastModifiedDate = Date.now(), A.name = p, i(A);\n        },\n        "image/jpeg",\n        o\n      );\n    };\n  });\n}, x = (e) => new Promise((t) => {\n  const r = new FileReader();\n  r.readAsDataURL(e), r.onloadend = () => {\n    var n;\n    t({\n      src: ((n = r.result) == null ? void 0 : n.toString()) || "",\n      filename: e.name\n    });\n  };\n}), K = (e) => e ? T.some(\n  (t) => e.toUpperCase().endsWith(t)\n) : !1, Te = (e) => new Promise((t) => {\n  K(e.name) ? x(e).then((r) => {\n    Z(r).then(t);\n  }) : t(e);\n});\nfunction Re(e, t = Oe) {\n  const r = new Uint8Array(t);\n  return new DataView(r.buffer).setUint32(0, e), r;\n}\nconst Ue = (e, {\n  chunkSize: t = 16384\n  /* 16KB */\n}) => {\n  const r = [];\n  for (let n = 0; n < e.length; n++) {\n    const o = e[n];\n    n % t === 0 ? r.push([o]) : r[r.length - 1].push(o);\n  }\n  return r.map((n) => new Uint8Array(n)).concat(new Uint8Array([]));\n}, Me = (e) => {\n  const t = new FileReader();\n  return new Promise((r) => {\n    t.onload = () => {\n      const n = {\n        filename: e.name,\n        buffer: t.result,\n        fileSize: e.size\n      };\n      r(n);\n    }, t.onerror = () => {\n      r({\n        message: `Unable to read file ${e.name}`\n      });\n    }, t.readAsArrayBuffer(e);\n  });\n}, st = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  compressImage: Z,\n  compressImageFile: Te,\n  convertToBase64: x,\n  generateChunks: Ue,\n  isSupportedImageFormat: K,\n  numToUint8Array: Re,\n  readFile: Me\n}, Symbol.toStringTag, { value: "Module" })), g = (e) => {\n  const t = localStorage.getItem(e);\n  if (t !== "undefined") {\n    if (t === null || t === "null")\n      return null;\n    try {\n      return JSON.parse(t);\n    } catch {\n      return null;\n    }\n  }\n}, Ne = (e, t) => {\n  localStorage.setItem(e, JSON.stringify(t));\n}, it = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  getValue: g,\n  setValue: Ne\n}, Symbol.toStringTag, { value: "Module" })), H = (e) => Object.keys(e).sort().reduce((t, r) => (t[r] = e[r], t), {}), $e = async (e) => {\n  const t = new TextEncoder().encode(JSON.stringify(H(e))), r = await crypto.subtle.digest("SHA-256", t);\n  return Array.from(new Uint8Array(r)).map((i) => ("00" + i.toString(16)).slice(-2)).join("");\n}, W = (e, t) => Array.isArray(e) && Array.isArray(t) ? t.map((r, n) => W(e[n], r)) : typeof e == "object" && e !== null && typeof t == "object" && t !== null ? V(e, t) : t, V = (e, ...t) => {\n  for (const r of t)\n    for (const n in r)\n      r[n] === null || r[n] === void 0 || (e[n] = W(e[n], r[n]));\n  return e;\n}, ct = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  hashObject: $e,\n  merge: V,\n  sortObjectByKeys: H\n}, Symbol.toStringTag, { value: "Module" }));\nfunction Ee() {\n  let e, t;\n  return {\n    promise: new Promise((n, o) => {\n      e = n, t = o;\n    }),\n    resolve: e,\n    reject: t\n  };\n}\nconst dt = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  createPromise: Ee\n}, Symbol.toStringTag, { value: "Module" })), k = () => {\n  const t = new URLSearchParams(window.location.search).get("acct1");\n  return g(R) || t;\n}, J = (e) => e && !/^VR/.test(e) ? "real" : "demo", b = () => {\n  const e = g(U);\n  if (e)\n    return e;\n  const t = window.location.hostname, r = C[t];\n  return r || "36300";\n}, lt = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  getActiveLoginid: k,\n  getAppId: b,\n  getEnvironmentFromLoginid: J\n}, Symbol.toStringTag, { value: "Module" })), Be = () => {\n  const e = [], t = [], r = new URLSearchParams(window.location.search);\n  for (const [o, i] of r.entries()) {\n    const a = o.match(/^acct(\\d+)/), s = o.match(/^token(\\d+)/), c = o.match(/^cur(\\d+)/);\n    a && (e[+a[1] - 1] = {\n      ...e[+a[1] - 1] || {},\n      loginid: i\n    }), s && (e[+s[1] - 1] = {\n      ...e[+s[1] - 1] || {},\n      token: i\n    }), c && (e[+c[1] - 1] = {\n      ...e[+c[1] - 1] || {},\n      currency: i\n    }), (/acct/.test(o) || /token/.test(o) || /cur/.test(o)) && t.push(o);\n  }\n  return { loginInfo: e.filter(\n    (o) => ["loginid", "token", "currency"].every((i) => Object.keys(o).includes(i))\n  ), paramsToDelete: t };\n}, je = (e) => {\n  if (e != null && e.length)\n    return e.find((t) => /^VR/.test(t.loginid)) || e[0];\n}, Fe = (e) => {\n  const t = new URLSearchParams(window.location.search);\n  e.forEach((n) => t.delete(n));\n  const r = `${window.location.pathname}${t.toString() ? `?${t.toString()}` : ""}`;\n  window.history.pushState(null, "", r);\n}, Ge = () => {\n  const e = g(S) ?? "EN";\n  return `https://oauth.deriv.com/oauth2/authorize?app_id=${b()}&l=${e}&brand=${_}`;\n}, X = () => {\n  const e = g(M);\n  if (e)\n    return e;\n  const t = k();\n  return P[J(t)];\n}, Ie = () => {\n  const e = X(), t = g(S) ?? "EN";\n  return `wss://${e}/websockets/v3?app_id=${b()}&l=${t}&brand=${_}`;\n}, Ye = (e) => new URLSearchParams(window.location.search).get(e), D = (e) => e.replace(/(^\\/|\\/$|[^a-zA-Z0-9-_./()#])/g, ""), ze = (e, t) => {\n  var o;\n  const r = t != null && t.isEU ? j : B;\n  let n = ((o = g(S)) == null ? void 0 : o.toLowerCase()) ?? "en";\n  return n = n === "en" ? "" : `/${n.replace("_", "-")}`, t != null && t.isDocument ? `${r}/${D(e)}` : `${r}${n}/${D(e)}`;\n}, Ze = (e) => /^(((.*)\\.)?(localhost:8443|pages.dev|binary\\.(sx|com)|deriv.(com|me|be|dev)))$/.test(e), ut = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  filterSearchParams: Fe,\n  getDefaultActiveAccount: je,\n  getDerivStaticURL: ze,\n  getLoginInfoFromURL: Be,\n  getOauthURL: Ge,\n  getQueryParameter: Ye,\n  getServerURL: X,\n  getWebsocketURL: Ie,\n  isDomainAllowed: Ze,\n  normalizePath: D\n}, Symbol.toStringTag, { value: "Module" })), xe = (e) => I[e], Ke = () => G.domainName, He = (e) => Y[e], gt = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  getBrandWebsiteName: Ke,\n  getLegalLandingCompany: xe,\n  getPlatformName: He\n}, Symbol.toStringTag, { value: "Module" })), L = (e) => z.test(e), We = async () => {\n  const e = window, t = navigator, r = t.userAgent ?? e.opera ?? "";\n  if (/windows phone/i.test(r))\n    return "Windows Phone";\n  if (/android/i.test(r)) {\n    if (t.userAgentData) {\n      const n = await t.userAgentData.getHighEntropyValues(["model"]);\n      if (L((n == null ? void 0 : n.model) || ""))\n        return "huawei";\n    } else if (L(r) || /huawei/i.test(r))\n      return "huawei";\n    return "Android";\n  }\n  return /iPad|iPhone|iPod/.test(r) && !e.MSStream ? "iOS" : "unknown";\n}, pt = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  mobileOSDetectAsync: We\n}, Symbol.toStringTag, { value: "Module" }));\n/*! js-cookie v3.0.5 | MIT */\nfunction m(e) {\n  for (var t = 1; t < arguments.length; t++) {\n    var r = arguments[t];\n    for (var n in r)\n      e[n] = r[n];\n  }\n  return e;\n}\nvar Ve = {\n  read: function(e) {\n    return e[0] === \'"\' && (e = e.slice(1, -1)), e.replace(/(%[\\dA-F]{2})+/gi, decodeURIComponent);\n  },\n  write: function(e) {\n    return encodeURIComponent(e).replace(\n      /%(2[346BF]|3[AC-F]|40|5[BDE]|60|7[BCD])/g,\n      decodeURIComponent\n    );\n  }\n};\nfunction v(e, t) {\n  function r(o, i, a) {\n    if (!(typeof document > "u")) {\n      a = m({}, t, a), typeof a.expires == "number" && (a.expires = new Date(Date.now() + a.expires * 864e5)), a.expires && (a.expires = a.expires.toUTCString()), o = encodeURIComponent(o).replace(/%(2[346B]|5E|60|7C)/g, decodeURIComponent).replace(/[()]/g, escape);\n      var s = "";\n      for (var c in a)\n        a[c] && (s += "; " + c, a[c] !== !0 && (s += "=" + a[c].split(";")[0]));\n      return document.cookie = o + "=" + e.write(i, o) + s;\n    }\n  }\n  function n(o) {\n    if (!(typeof document > "u" || arguments.length && !o)) {\n      for (var i = document.cookie ? document.cookie.split("; ") : [], a = {}, s = 0; s < i.length; s++) {\n        var c = i[s].split("="), u = c.slice(1).join("=");\n        try {\n          var l = decodeURIComponent(c[0]);\n          if (a[l] = e.read(u, l), o === l)\n            break;\n        } catch {\n        }\n      }\n      return o ? a[o] : a;\n    }\n  }\n  return Object.create(\n    {\n      set: r,\n      get: n,\n      remove: function(o, i) {\n        r(\n          o,\n          "",\n          m({}, i, {\n            expires: -1\n          })\n        );\n      },\n      withAttributes: function(o) {\n        return v(this.converter, m({}, this.attributes, o));\n      },\n      withConverter: function(o) {\n        return v(m({}, this.converter, o), this.attributes);\n      }\n    },\n    {\n      attributes: { value: Object.freeze(t) },\n      converter: { value: Object.freeze(e) }\n    }\n  );\n}\nvar ke = v(Ve, { path: "/" });\nlet f = null;\nconst Je = async () => {\n  var t;\n  if (f)\n    return f;\n  const e = (t = JSON.parse(ke.get("website_status") || "{}")) == null ? void 0 : t.clients_country;\n  return f = (async () => {\n    var r;\n    try {\n      const n = await fetch(F).catch(() => null);\n      if (!n)\n        return e || "";\n      const o = await n.text().catch(() => "");\n      return o ? ((r = Object.fromEntries(o.split(`\n`).map((a) => a.split("=", 2))).loc) == null ? void 0 : r.toLowerCase()) || e || "" : e || "";\n    } catch {\n      return e || "";\n    }\n  })(), f;\n}, mt = /* @__PURE__ */ Object.freeze(/* @__PURE__ */ Object.defineProperty({\n  __proto__: null,\n  getCountry: Je\n}, Symbol.toStringTag, { value: "Module" }));\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///../../node_modules/@deriv-com/utils/dist/deriv-utils.js\n')}}]);