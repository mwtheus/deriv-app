{"version":3,"file":"account/js/account.Sections_Security_SelfExclusion_index_ts.bc1c729edc2acb03e044.js","mappings":"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","sources":["webpack://@deriv/account/./Components/article/article.tsx","webpack://@deriv/account/./Components/article/index.ts","webpack://@deriv/account/./Components/self-exclusion/self-exclusion-context.tsx","webpack://@deriv/account/./Components/self-exclusion/self-exclusion-article-content.tsx","webpack://@deriv/account/./Components/self-exclusion/self-exclusion-modal.tsx","webpack://@deriv/account/./Components/self-exclusion/self-exclusion-article.tsx","webpack://@deriv/account/./Components/self-exclusion/self-exclusion-wrapper.tsx","webpack://@deriv/account/./Components/self-exclusion/self-exclusion-confirm-limits.tsx","webpack://@deriv/account/./Components/self-exclusion/self-exclusion-confirm-page.tsx","webpack://@deriv/account/./Components/self-exclusion/self-exclusion-footer.tsx","webpack://@deriv/account/./Components/self-exclusion/self-exclusion-inputs.tsx","webpack://@deriv/account/./Components/self-exclusion/self-exclusion-form.tsx","webpack://@deriv/account/./Sections/Security/SelfExclusion/index.ts","webpack://@deriv/account/./Sections/Security/SelfExclusion/self-exclusion.tsx"],"sourcesContent":["import { ReactNode, Fragment } from 'react';\nimport { Icon, Text } from '@deriv/components';\nimport { Localize } from '@deriv-com/translations';\nimport './article.scss';\nimport clsx from 'clsx';\n\nexport type TArticle = {\n    title: JSX.Element | string;\n    descriptions: Array<ReactNode>;\n    onClickLearnMore?: () => void;\n    className?: string;\n};\n\nconst Article = ({ title, descriptions, onClickLearnMore, className }: TArticle) => {\n    const has_descriptions: boolean = descriptions?.length > 0;\n    const has_single_description: boolean = descriptions?.length === 1;\n\n    return (\n        <article className={clsx('da-article', className)}>\n            <Text as='h4' color='prominent' line_height='m' size='xs' weight='bold' className='da-article__header'>\n                {title}\n            </Text>\n            {has_descriptions && (\n                <Fragment>\n                    {has_single_description ? (\n                        <Text as='p' size='xxs' line_height='m'>\n                            {descriptions[0]}\n                        </Text>\n                    ) : (\n                        <ul className='da-article__list'>\n                            {descriptions.map((description, idx) => (\n                                <li key={idx}>\n                                    <Text size='xxs' line_height='xs'>\n                                        {description}\n                                    </Text>\n                                </li>\n                            ))}\n                        </ul>\n                    )}\n                </Fragment>\n            )}\n            {onClickLearnMore && (\n                <div className='da-article__learn-more' onClick={onClickLearnMore}>\n                    <Text size='xxs' color='loss-danger' line_height='s'>\n                        <Localize i18n_default_text='Learn more' />\n                    </Text>\n                    <Icon icon='IcChevronRight' className='da-article__learn-more-icon' color='red' />\n                </div>\n            )}\n        </article>\n    );\n};\n\nexport default Article;\n","import AccountArticle from './article';\nimport './article.scss';\n\nexport default AccountArticle;\n","import { createContext } from 'react';\nimport { FormikHelpers, FormikValues } from 'formik';\n\nexport type TSelfExclusionContext = {\n    backFromConfirmLimits?: () => void;\n    currency: string;\n    currency_display?: string;\n    exclusion_texts?: Record<string, string>;\n    footer_ref?: HTMLElement | DocumentFragment;\n    getMaxLength?: (value: string) => void;\n    goToConfirm?: (value: FormikValues) => void;\n    handleSubmit: (values: FormikValues, setSubmitting: FormikHelpers<FormikValues>) => void;\n    is_app_settings?: boolean;\n    is_eu?: boolean;\n    is_mf?: boolean;\n    is_tablet?: boolean;\n    is_wrapper_bypassed?: boolean;\n    overlay_ref: HTMLDivElement;\n    session_duration_digits?: number | boolean;\n    state?: FormikValues;\n    toggleArticle?: () => void;\n    validateFields?: (values: FormikValues) => Record<string, string | null | undefined>;\n    backToReview?: () => void;\n};\n\nconst SelfExclusionContext = createContext<TSelfExclusionContext>({\n    overlay_ref: document.createElement('div'),\n    currency: '',\n    handleSubmit: () => null,\n});\n\nexport default SelfExclusionContext;\n","import { useContext } from 'react';\nimport clsx from 'clsx';\n\nimport { Button, Icon, Popup, Text } from '@deriv/components';\nimport { Chat } from '@deriv/utils';\nimport { Localize, useTranslations } from '@deriv-com/translations';\nimport { URLUtils } from '@deriv-com/utils';\n\nimport SelfExclusionContext from './self-exclusion-context';\n\ntype TSelfExclusionArticleItems = Record<'is_eu' | 'is_app_settings', boolean | undefined>;\n\ntype TSelfExclusionArticleContent = {\n    is_in_overlay: boolean;\n};\n\nexport const selfExclusionArticleItems = ({ is_eu, is_app_settings }: TSelfExclusionArticleItems) => {\n    const getEuItems = () => {\n        const eu_items = [\n            {\n                component: (\n                    <Localize\n                        i18n_default_text='We’ve introduced these limits to encourage <0>responsible trading</0>. They are optional, and you can adjust them anytime.'\n                        components={[\n                            <a\n                                key={0}\n                                className='link'\n                                rel='noopener noreferrer'\n                                target='_blank'\n                                href={URLUtils.getDerivStaticURL('/responsible')}\n                            />,\n                        ]}\n                    />\n                ),\n            },\n            {\n                component: (\n                    <Localize i18n_default_text='You decide how much and how long to trade. You can take a break from trading whenever you want. This break can be from 6 weeks to 5 years. When it’s over, you can extend it or resume trading after a 24-hour cooling-off period. If you don’t want to set a specific limit, leave the field empty.' />\n                ),\n            },\n            {\n                component: (\n                    <Localize\n                        i18n_default_text='These limits apply to your multipliers trades only. For example, <0>maximum total loss</0> refers to the losses on your multipliers trades.'\n                        components={[<strong key={0} />]}\n                    />\n                ),\n            },\n        ];\n\n        if (!is_app_settings) {\n            eu_items.push({\n                component: (\n                    <Localize\n                        i18n_default_text='If you want to adjust your limits, <0>contact us via live chat</0>. We’ll make the adjustments within 24 hours.'\n                        components={[<span className='link link--orange' key={0} onClick={Chat.open} />]}\n                    />\n                ),\n            });\n        }\n\n        return eu_items;\n    };\n\n    const getNonEuItems = () => [\n        {\n            component: (\n                <Localize\n                    i18n_default_text='We’ve introduced these limits to encourage <0>responsible trading</0>. They are optional, and you can adjust them anytime.'\n                    components={[\n                        <a\n                            key={0}\n                            className='link'\n                            rel='noopener noreferrer'\n                            target='_blank'\n                            href={URLUtils.getDerivStaticURL('/responsible')}\n                        />,\n                    ]}\n                />\n            ),\n        },\n        {\n            component: (\n                <Localize i18n_default_text='You decide how much and how long to trade. You can take a break from trading whenever you want. This break can be from 6 weeks to 5 years. When it’s over, you can extend it or log in to resume trading. If you don’t want to set a specific limit, leave the field empty.' />\n            ),\n        },\n        {\n            component: (\n                <Localize\n                    i18n_default_text='These limits apply to your options trades only. For example, <0>maximum total loss</0> refers to the losses on all your trades on options trading platforms.'\n                    components={[<strong key={0} />]}\n                />\n            ),\n        },\n        ...(!is_app_settings\n            ? [\n                  {\n                      component: (\n                          <Localize\n                              i18n_default_text='If you want to adjust your self-exclusion limits, <0>contact us via live chat.</0>'\n                              components={[<span className='link link--orange' key={0} onClick={Chat.open} />]}\n                          />\n                      ),\n                  },\n              ]\n            : []),\n    ];\n\n    const article_items = is_eu ? getEuItems() : getNonEuItems();\n    return article_items.map((article_item, idx) => ({\n        ...article_item,\n        key: `self_exclusion_desc_${idx}`,\n    }));\n};\n\nconst SelfExclusionArticleContent = ({ is_in_overlay }: Partial<TSelfExclusionArticleContent>) => {\n    const { is_app_settings, toggleArticle, overlay_ref, is_eu } = useContext(SelfExclusionContext);\n    const { localize } = useTranslations();\n\n    const keyed_article_items = selfExclusionArticleItems({ is_eu, is_app_settings });\n    if (is_in_overlay) {\n        return (\n            <Popup.Overlay\n                descriptions={keyed_article_items}\n                done_text={localize('Done')}\n                overlay_ref={overlay_ref}\n                title={localize('Trading limits')}\n                toggleOverlay={toggleArticle}\n            />\n        );\n    }\n\n    return (\n        <div\n            className={clsx('da-self-exclusion-article__content', {\n                'da-self-exclusion-article__content--is-in-modal': !is_in_overlay,\n            })}\n        >\n            <div className='da-self-exclusion-article__content-header-container'>\n                <Text\n                    as='h3'\n                    color='prominent'\n                    size='s'\n                    line_height='l'\n                    weight='bold'\n                    className='da-self-exclusion-article__content-header'\n                >\n                    <Localize i18n_default_text='About trading limits and self-exclusion' />\n                </Text>\n                <Icon icon='IcCross' className='da-self-exclusion-article__content-icon' onClick={toggleArticle} />\n            </div>\n            <ul className='da-self-exclusion-article__content-list'>\n                {keyed_article_items.map(article => (\n                    <li key={article.key}>\n                        <Text as='span' size='xxs'>\n                            {article.component}\n                        </Text>\n                    </li>\n                ))}\n            </ul>\n            {is_app_settings && (\n                <div className='da-self-exclusion-article__content-button'>\n                    <Button secondary large onClick={toggleArticle}>\n                        <Localize i18n_default_text='Done' />\n                    </Button>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default SelfExclusionArticleContent;\n","import { useContext } from 'react';\nimport { Modal, ThemedScrollbars } from '@deriv/components';\nimport SelfExclusionContext from './self-exclusion-context';\nimport SelfExclusionArticleContent from './self-exclusion-article-content';\n\nconst SelfExclusionModal = () => {\n    const { state, toggleArticle } = useContext(SelfExclusionContext);\n\n    return (\n        <Modal className='self_exclusion__article-modal' is_open={state?.show_article} toggleModal={toggleArticle}>\n            <ThemedScrollbars>\n                <SelfExclusionArticleContent />\n            </ThemedScrollbars>\n        </Modal>\n    );\n};\n\nexport default SelfExclusionModal;\n","import React from 'react';\nimport { StaticUrl } from '@deriv/components';\nimport { Localize, localize } from '@deriv/translations';\nimport { getBrandWebsiteName, getPlatformSettings } from '@deriv/shared';\nimport AccountArticle from '../article';\nimport SelfExclusionContext from './self-exclusion-context';\nimport { observer } from '@deriv/stores';\n\nconst SelfExclusionArticle = observer(() => {\n    const { toggleArticle, is_eu } = React.useContext(SelfExclusionContext);\n    return (\n        <AccountArticle\n            title={localize('Trading limits and self-exclusion')}\n            descriptions={[\n                is_eu ? (\n                    <Localize\n                        i18n_default_text='These trading limits and self-exclusion help you control the amount of money and time you spend on {{brand_website_name}} and exercise <0>responsible trading</0>.'\n                        components={[<StaticUrl key={0} className='link' href='/responsible' />]}\n                        values={{ brand_website_name: getBrandWebsiteName() }}\n                    />\n                ) : (\n                    <Localize\n                        i18n_default_text='These self-exclusion limits help you control the amount of money and time you spend trading on {{platform_name_trader}}, {{platform_name_dbot}} and {{platform_name_smarttrader}} on Deriv. The limits you set here will help you exercise <0>responsible trading</0>.'\n                        components={[<StaticUrl key={0} className='link' href='/responsible' />]}\n                        values={{\n                            platform_name_trader: getPlatformSettings('trader').name,\n                            platform_name_dbot: getPlatformSettings('dbot').name,\n                            platform_name_smarttrader: getPlatformSettings('smarttrader').name,\n                        }}\n                    />\n                ),\n            ]}\n            {...{ onClickLearnMore: toggleArticle }}\n        />\n    );\n});\n\nexport default SelfExclusionArticle;\n","import { ReactNode, useContext } from 'react';\nimport clsx from 'clsx';\nimport { Div100vhContainer, ThemedScrollbars, InlineMessage } from '@deriv/components';\nimport SelfExclusionArticle from './self-exclusion-article';\nimport SelfExclusionContext from './self-exclusion-context';\nimport { useDevice } from '@deriv-com/ui';\nimport { Localize } from '@deriv-com/translations';\nimport { Chat } from '@deriv/utils';\n\nconst SelfExclusionWrapper = ({ children }: { children?: ReactNode }) => {\n    const { is_app_settings, is_wrapper_bypassed, state, is_mf } = useContext(SelfExclusionContext);\n    const { isDesktop } = useDevice();\n\n    // Check if any exclusion field has a value\n    const hasAnyExclusion = is_mf && Object.values(state?.self_exclusions || {}).some(value => value);\n\n    // \"is_wrapper_bypassed\" is currently used for a <AppSettings> hosted <SelfExclusion>.\n    // It only features the <SelfExclusionArticle> for mobile views, as the <AppSettings> footer\n    // has a link rather than <SelfExclusionArticle> to view the <SelfExclusionArticleContent>.\n    if (is_wrapper_bypassed) {\n        return (\n            <section\n                role='section-self-exclusion-wrapper'\n                className={clsx('da-self-exclusion', {\n                    'da-self-exclusion--app-settings': is_app_settings,\n                })}\n            >\n                {!isDesktop && <SelfExclusionArticle />}\n                {children}\n            </section>\n        );\n    }\n\n    return (\n        <Div100vhContainer\n            className={clsx('da-self-exclusion__wrapper', {\n                'da-self-exclusion__wrapper--show-article': state?.show_article,\n            })}\n            is_disabled={isDesktop}\n            height_offset='80px'\n        >\n            <div className='da-self-exclusion__inner-wrap'>\n                {hasAnyExclusion && (\n                    <InlineMessage\n                        type='information'\n                        size={isDesktop ? 'sm' : 'md'}\n                        className='da-self-exclusion__banner'\n                        message={\n                            <Localize\n                                i18n_default_text='To increase or remove your limit, contact us via <0>live chat</0>.'\n                                components={[<span key={0} className='link link--prominent' onClick={Chat.open} />]}\n                            />\n                        }\n                    />\n                )}\n                <ThemedScrollbars className='da-self-exclusion__scrollbars' is_bypassed={!isDesktop}>\n                    {!isDesktop && <SelfExclusionArticle />}\n                    {children}\n                </ThemedScrollbars>\n            </div>\n            {isDesktop && <SelfExclusionArticle />}\n        </Div100vhContainer>\n    );\n};\n\nexport default SelfExclusionWrapper;\n","import React from 'react';\nimport { Button, Icon, Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport { useFormikContext } from 'formik';\nimport SelfExclusionContext from './self-exclusion-context';\n\nconst SelfExclusionConfirmLimits = () => {\n    const { backToReview } = React.useContext(SelfExclusionContext);\n    const { handleSubmit, isSubmitting } = useFormikContext();\n\n    return (\n        <div className='da-self-exclusion__confirm-limits'>\n            <Icon icon='IcStop' className='da-self-exclusion__confirm-limits-image' />\n            <Text\n                as='h4'\n                align='center'\n                color='prominent'\n                className='da-self-exclusion__confirm-limits-header'\n                line_height='l'\n                size='s'\n                weight='bold'\n            >\n                <Localize i18n_default_text='Save new limits?' />\n            </Text>\n            <Text\n                as='p'\n                align='center'\n                color='general'\n                className='da-self-exclusion__confirm-limits-desc'\n                line_height='m'\n                size='xs'\n            >\n                <Localize i18n_default_text='Remember: You cannot log in to your account until the selected date.' />\n            </Text>\n            <div className='da-self-exclusion__confirm-limits-buttons'>\n                <Button type='button' secondary large onClick={backToReview}>\n                    <Localize i18n_default_text='No, review my limits' />\n                </Button>\n                <Button\n                    type='submit'\n                    is_loading={isSubmitting}\n                    is_disabled={isSubmitting}\n                    primary\n                    large\n                    onClick={() => handleSubmit()}\n                >\n                    <Localize i18n_default_text='Yes, log me out immediately' />\n                </Button>\n            </div>\n        </div>\n    );\n};\n\nexport default SelfExclusionConfirmLimits;\n","import { Fragment, useContext } from 'react';\nimport { FormikValues, useFormikContext } from 'formik';\n\nimport { Button, Icon, Text } from '@deriv/components';\nimport { toMoment } from '@deriv/shared';\nimport { Chat } from '@deriv/utils';\nimport { Localize, useTranslations } from '@deriv-com/translations';\nimport { CurrencyConstants, FormatUtils } from '@deriv-com/utils';\n\nimport SelfExclusionConfirmLimits from './self-exclusion-confirm-limits';\nimport SelfExclusionContext from './self-exclusion-context';\n\nconst SelfExclusionConfirmPage = () => {\n    const { backFromConfirmLimits, currency, currency_display, exclusion_texts, is_eu, state } =\n        useContext(SelfExclusionContext);\n\n    const { isSubmitting, values } = useFormikContext<FormikValues>();\n    const { localize } = useTranslations();\n\n    if (state?.show_confirm) {\n        return <SelfExclusionConfirmLimits />;\n    }\n\n    return (\n        <Fragment>\n            <div onClick={backFromConfirmLimits} className='da-self-exclusion__back'>\n                <Icon icon='IcArrowLeftBold' />\n                <Text as='p' size='xs' weight='bold'>\n                    <Localize i18n_default_text='Back' />\n                </Text>\n            </div>\n            <div className='da-self-exclusion__confirm'>\n                <Text\n                    className='da-self-exclusion__confirm-header'\n                    as='h2'\n                    size='s'\n                    line_height='l'\n                    weight='bold'\n                    color='prominent'\n                >\n                    <Localize i18n_default_text='You have set the following limits:' />\n                </Text>\n                {state?.changed_attributes.map((key: string) => {\n                    const need_date_format = ['exclude_until', 'timeout_until'];\n                    const need_money_format = [\n                        'max_deposit',\n                        'max_7day_deposit',\n                        'max_30day_deposit',\n                        'max_total_stake',\n                        'max_turnover',\n                        'max_losses',\n                        'max_7day_turnover',\n                        'max_7day_losses',\n                        'max_30day_turnover',\n                        'max_30day_losses',\n                        'max_balance',\n                    ];\n                    const need_minutes = ['session_duration_limit'];\n                    const need_amount = ['max_open_bets'];\n\n                    let value = '';\n\n                    if (need_date_format.includes(key)) {\n                        value = toMoment(values[key]).format('DD/MM/YYYY');\n                    } else if (need_money_format.includes(key)) {\n                        value = `${FormatUtils.formatMoney(+values[key], {\n                            currency: currency as CurrencyConstants.Currency,\n                        })} ${currency_display}`;\n                    } else if (need_minutes.includes(key)) {\n                        value = localize('{{value}} mins', { value: values[key] });\n                    } else if (need_amount.includes(key)) {\n                        value = `${values[key]}`;\n                    }\n\n                    const checked_value = +values[key] === 0 ? 'Removed' : value;\n\n                    return (\n                        <div key={key} className='da-self-exclusion__confirm-item'>\n                            <Text as='p' size='xs'>\n                                {exclusion_texts ? exclusion_texts[key] : ''}\n                            </Text>\n                            <Text as='p' size='xs' align='right' weight='bold'>\n                                {checked_value}\n                            </Text>\n                        </div>\n                    );\n                })}\n                <Text as='p' size='xs' align='center' className='da-self-exclusion__confirm-note'>\n                    {is_eu ? (\n                        <Localize\n                            i18n_default_text='You’ll be able to adjust these limits at any time. You can reduce your limits from the <0>self-exclusion page</0>. To increase or remove your limits, please contact our <1>Customer Support team</1>.'\n                            components={[\n                                <Text key={0} size='xs' color='loss-danger' weight='bold' />,\n                                <span className='link link--orange' key={1} onClick={Chat.open} />,\n                            ]}\n                        />\n                    ) : (\n                        <Localize\n                            i18n_default_text='We’ll update your limits. Click <0>Accept</0> to acknowledge that you are fully responsible for your actions, and we are not liable for any addiction or loss.'\n                            components={[<Text key={0} size='xs' weight='bold' />]}\n                        />\n                    )}\n                </Text>\n                <Text as='p' size='xs' align='center' color='loss-danger' className='da-self-exclusion__error'>\n                    {state?.submit_error_message}\n                </Text>\n                {is_eu ? (\n                    <Button is_loading={isSubmitting} is_disabled={isSubmitting} primary large type='submit'>\n                        <Localize i18n_default_text='Confirm my limits' />\n                    </Button>\n                ) : (\n                    <Button is_loading={isSubmitting} is_disabled={isSubmitting} primary large type='submit'>\n                        <Localize i18n_default_text='Accept' />\n                    </Button>\n                )}\n            </div>\n        </Fragment>\n    );\n};\n\nexport default SelfExclusionConfirmPage;\n","import { useContext, Fragment } from 'react';\nimport { createPortal } from 'react-dom';\nimport { FormikValues, useFormikContext } from 'formik';\nimport { Button, Text } from '@deriv/components';\nimport { Localize } from '@deriv-com/translations';\nimport SelfExclusionContext from './self-exclusion-context';\n\nconst SelfExclusionFooter = () => {\n    const { footer_ref, goToConfirm, toggleArticle } = useContext(SelfExclusionContext);\n    const { dirty, isSubmitting, isValid, values } = useFormikContext<FormikValues>();\n\n    if (footer_ref) {\n        return createPortal(\n            <Fragment>\n                <a className='link link--prominent' onClick={toggleArticle}>\n                    <Text size='xxs' line_height='m' weight='bold'>\n                        <Localize i18n_default_text='Learn more about trading limits' />\n                    </Text>\n                </a>\n                <Button\n                    disabled={!dirty || !isValid || isSubmitting}\n                    primary\n                    className='da-self-exclusion__button'\n                    large\n                    onClick={() => goToConfirm?.(values)}\n                    type='button'\n                >\n                    <Localize i18n_default_text='Next' />\n                </Button>\n            </Fragment>,\n            footer_ref\n        );\n    }\n\n    return null;\n};\n\nexport default SelfExclusionFooter;\n","import { ReactElement, useContext, Fragment, FunctionComponent, ChangeEvent } from 'react';\nimport clsx from 'clsx';\nimport { Button, DatePicker, Input, Text } from '@deriv/components';\nimport { epochToMoment, toMoment } from '@deriv/shared';\nimport { useDevice } from '@deriv-com/ui';\nimport { Localize, useTranslations } from '@deriv-com/translations';\nimport {\n    Field,\n    FormikComputedProps,\n    FormikErrors,\n    FormikHandlers,\n    FormikHelpers,\n    FormikState,\n    FormikValues,\n    useFormikContext,\n} from 'formik';\nimport SelfExclusionContext from './self-exclusion-context';\nimport SelfExclusionFooter from './self-exclusion-footer';\n\ntype TSectionTitle = {\n    title: ReactElement;\n    has_border_line?: boolean;\n};\n\ntype TFormikContext = {\n    errors: FormikErrors<FormikValues>;\n    handleBlur: FormikHandlers['handleBlur'];\n    handleChange: FormikHandlers['handleChange'];\n    setFieldValue?: FormikHelpers<FormikValues>['setFieldValue'];\n    dirty: FormikComputedProps<FormikValues>['dirty'];\n    isSubmitting: FormikState<FormikValues>['isSubmitting'];\n    isValid: FormikComputedProps<FormikValues>['isValid'];\n    values: FormikValues;\n};\n\nconst SectionTitle = ({ title, has_border_line }: TSectionTitle) => {\n    const { isDesktop } = useDevice();\n    return (\n        <Text\n            as='h2'\n            weight='bold'\n            size={isDesktop ? 'xs' : 'xxs'}\n            className={clsx('da-self-exclusion__header', {\n                'da-self-exclusion__header-border': has_border_line,\n            })}\n        >\n            {title}\n        </Text>\n    );\n};\n\nconst StakeLossAndLimitsInputs = () => {\n    const { currency_display, getMaxLength } = useContext(SelfExclusionContext);\n    const { errors, handleBlur, handleChange, values }: TFormikContext = useFormikContext<TFormikContext>();\n    return (\n        <Fragment>\n            <SectionTitle title={<Localize i18n_default_text='Your stake and loss limits' />} />\n            <div className='da-self-exclusion__item-wrapper'>\n                <div className='da-self-exclusion__item'>\n                    <h3 className='da-self-exclusion__item-title'>\n                        <Localize i18n_default_text='24 hours' />\n                    </h3>\n                    <Text as='p' size='xs' className='da-self-exclusion__item-field'>\n                        <Localize i18n_default_text='Max. total stake' />\n                    </Text>\n                    <Field name='max_turnover' data-testid='dt_max_turnover'>\n                        {({ field }: FormikValues) => (\n                            <Input\n                                {...field}\n                                data-lpignore='true'\n                                className='da-self-exclusion__input'\n                                label={currency_display}\n                                value={values.max_turnover ?? ''}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                maxLength={getMaxLength?.('max_turnover')}\n                                required\n                                error={errors.max_turnover}\n                            />\n                        )}\n                    </Field>\n                    <Text as='p' size='xs' className='da-self-exclusion__item-field'>\n                        <Localize i18n_default_text='Max. total loss' />\n                    </Text>\n                    <Field name='max_losses'>\n                        {({ field }: FormikValues) => (\n                            <Input\n                                {...field}\n                                data-lpignore='true'\n                                className='da-self-exclusion__input'\n                                label={currency_display}\n                                value={values.max_losses}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                maxLength={getMaxLength?.('max_losses')}\n                                required\n                                error={errors.max_losses}\n                            />\n                        )}\n                    </Field>\n                </div>\n                <div className='da-self-exclusion__item'>\n                    <h3 className='da-self-exclusion__item-title'>\n                        <Localize i18n_default_text='7 days' />\n                    </h3>\n                    <Text as='p' size='xs' className='da-self-exclusion__item-field'>\n                        <Localize i18n_default_text='Max. total stake' />\n                    </Text>\n                    <Field name='max_7day_turnover'>\n                        {({ field }: FormikValues) => (\n                            <Input\n                                {...field}\n                                data-lpignore='true'\n                                className='da-self-exclusion__input'\n                                label={currency_display}\n                                value={values.max_7day_turnover}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                maxLength={getMaxLength?.('max_7day_turnover')}\n                                required\n                                error={errors.max_7day_turnover}\n                            />\n                        )}\n                    </Field>\n                    <Text as='p' size='xs' className='da-self-exclusion__item-field'>\n                        <Localize i18n_default_text='Max. total loss' />\n                    </Text>\n                    <Field name='max_7day_losses'>\n                        {({ field }: FormikValues) => (\n                            <Input\n                                {...field}\n                                data-lpignore='true'\n                                className='da-self-exclusion__input'\n                                label={currency_display}\n                                value={values.max_7day_losses}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                maxLength={getMaxLength?.('max_7day_losses')}\n                                required\n                                error={errors.max_7day_losses}\n                            />\n                        )}\n                    </Field>\n                </div>\n                <div className='da-self-exclusion__item'>\n                    <h3 className='da-self-exclusion__item-title'>\n                        <Localize i18n_default_text='30 days' />\n                    </h3>\n                    <Text as='p' size='xs' className='da-self-exclusion__item-field'>\n                        <Localize i18n_default_text='Max. total stake' />\n                    </Text>\n                    <Field name='max_30day_turnover'>\n                        {({ field }: FormikValues) => (\n                            <Input\n                                {...field}\n                                data-lpignore='true'\n                                className='da-self-exclusion__input'\n                                label={currency_display}\n                                // value={values.max_30day_turnover}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                maxLength={getMaxLength?.('max_30day_turnover')}\n                                required\n                                error={errors.max_30day_turnover}\n                            />\n                        )}\n                    </Field>\n                    <Text as='p' size='xs' className='da-self-exclusion__item-field'>\n                        <Localize i18n_default_text='Max. total loss' />\n                    </Text>\n                    <Field name='max_30day_losses'>\n                        {({ field }: FormikValues) => (\n                            <Input\n                                {...field}\n                                data-lpignore='true'\n                                className='da-self-exclusion__input'\n                                label={currency_display}\n                                value={values.max_30day_losses}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                maxLength={getMaxLength?.('max_30day_losses')}\n                                required\n                                error={errors.max_30day_losses}\n                            />\n                        )}\n                    </Field>\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nconst SessionAndLoginLimitsInputs = () => {\n    const { is_tablet, session_duration_digits } = useContext(SelfExclusionContext);\n    const { errors, handleBlur, handleChange, setFieldValue, values }: TFormikContext =\n        useFormikContext<TFormikContext>();\n    const { localize } = useTranslations();\n\n    return (\n        <Fragment>\n            <SectionTitle title={<Localize i18n_default_text='Your session and login limits' />} />\n            <div className='da-self-exclusion__item-wrapper'>\n                <div className='da-self-exclusion__item'>\n                    <Text as='p' size='xs' className='da-self-exclusion__item-field'>\n                        <Localize i18n_default_text='You will be automatically logged out from each session after this time limit.' />\n                    </Text>\n                    <Field name='session_duration_limit'>\n                        {({ field }: FormikValues) => (\n                            <Input\n                                {...field}\n                                data-lpignore='true'\n                                className='da-self-exclusion__input'\n                                label={localize('Minutes')}\n                                value={values.session_duration_limit}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                maxLength={session_duration_digits}\n                                required\n                                error={errors.session_duration_limit}\n                            />\n                        )}\n                    </Field>\n                </div>\n                <div className='da-self-exclusion__item'>\n                    <Text as='p' size='xs' className='da-self-exclusion__item-field'>\n                        <Localize i18n_default_text='You will not be able to log in to your account until this date (up to 6 weeks from today).' />\n                    </Text>\n                    <Field name='timeout_until'>\n                        {({ field }: FormikValues) => (\n                            <DatePicker\n                                min_date={toMoment().add(1, 'days').format('YYYY-MM-DD')}\n                                max_date={toMoment().add(6, 'weeks').format('YYYY-MM-DD')}\n                                {...field}\n                                className='da-self-exclusion__input'\n                                label={localize('Date')}\n                                value={values.timeout_until && epochToMoment(values.timeout_until)}\n                                onChange={({ target }: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) =>\n                                    setFieldValue(\n                                        'timeout_until',\n                                        target?.value ? toMoment(target.value).unix() : '',\n                                        true\n                                    )\n                                }\n                                required\n                                readOnly\n                                error={errors.timeout_until}\n                            />\n                        )}\n                    </Field>\n                </div>\n                <div className='da-self-exclusion__item'>\n                    <Text as='p' size='xs' className='da-self-exclusion__item-field'>\n                        <Localize i18n_default_text='Your account will be excluded from the website until this date (at least 6 months, up to 5 years).' />\n                    </Text>\n                    <Field name='exclude_until'>\n                        {({ field }: FormikValues) => (\n                            <DatePicker\n                                min_date={toMoment().add(6, 'months').add(1, 'days').format('YYYY-MM-DD')}\n                                max_date={toMoment().add(5, 'years').format('YYYY-MM-DD')}\n                                {...field}\n                                alignment={is_tablet ? 'bottom' : 'left'}\n                                className='da-self-exclusion__input'\n                                label={localize('Date')}\n                                value={values.exclude_until}\n                                onChange={({ target }: ChangeEvent<HTMLInputElement | HTMLTextAreaElement>) =>\n                                    setFieldValue(\n                                        'exclude_until',\n                                        target?.value ? toMoment(target.value).format('YYYY-MM-DD') : '',\n                                        true\n                                    )\n                                }\n                                required\n                                autoComplete='off'\n                                readOnly\n                                error={errors.exclude_until}\n                            />\n                        )}\n                    </Field>\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nconst MaximumAccountBalanceAndOpenPositionsInputs = () => {\n    const { currency_display, getMaxLength } = useContext(SelfExclusionContext);\n    const { errors, handleBlur, handleChange, values }: TFormikContext = useFormikContext<TFormikContext>();\n    const { localize } = useTranslations();\n\n    return (\n        <Fragment>\n            <SectionTitle title={<Localize i18n_default_text='Your maximum account balance and open positions' />} />\n            <div className='da-self-exclusion__item-wrapper'>\n                <div className='da-self-exclusion__item'>\n                    <Text as='p' size='xs' className='da-self-exclusion__item-field'>\n                        <Localize i18n_default_text='Once your account balance reaches this amount, you will not be able to deposit funds into your account.' />\n                    </Text>\n                    <Field name='max_balance'>\n                        {({ field }: FormikValues) => (\n                            <Input\n                                {...field}\n                                data-lpignore='true'\n                                className='da-self-exclusion__input'\n                                label={currency_display}\n                                value={values.max_balance}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                maxLength={getMaxLength?.('max_balance')}\n                                required\n                                error={errors.max_balance}\n                            />\n                        )}\n                    </Field>\n                </div>\n                <div className='da-self-exclusion__item'>\n                    <Text as='p' size='xs' className='da-self-exclusion__item-field'>\n                        <Localize i18n_default_text='Maximum open positions' />\n                    </Text>\n                    <Field name='max_open_bets'>\n                        {({ field }: FormikValues) => (\n                            <Input\n                                {...field}\n                                data-lpignore='true'\n                                className='da-self-exclusion__input'\n                                label={localize('No. of open position(s)')}\n                                value={values.max_open_bets}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                maxLength={getMaxLength?.('max_open_bets')}\n                                required\n                                error={errors.max_open_bets}\n                            />\n                        )}\n                    </Field>\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nconst MaximumDepositLimitInputs = () => {\n    const { currency, is_mf, getMaxLength } = useContext(SelfExclusionContext);\n    const { errors, handleBlur, handleChange, values }: TFormikContext = useFormikContext<TFormikContext>();\n\n    if (!is_mf) {\n        return null;\n    }\n\n    return (\n        <Fragment>\n            <SectionTitle title={<Localize i18n_default_text='Your maximum deposit limit' />} />\n            <div className='da-self-exclusion__item-wrapper'>\n                <div className='da-self-exclusion__item'>\n                    <h3 className='da-self-exclusion__item-title'>\n                        <Localize i18n_default_text='24 hours' />\n                    </h3>\n                    <Text as='p' size='xs' className='da-self-exclusion__item-field'>\n                        <Localize i18n_default_text='Max. deposit limit' />\n                    </Text>\n                    <Field name='max_deposit'>\n                        {({ field }: FormikValues) => (\n                            <Input\n                                {...field}\n                                data-lpignore='true'\n                                className='da-self-exclusion__input'\n                                label={currency}\n                                value={values.max_deposit}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                maxLength={getMaxLength?.('max_deposit')}\n                                required\n                                error={errors.max_deposit}\n                            />\n                        )}\n                    </Field>\n                </div>\n                <div className='da-self-exclusion__item'>\n                    <h3 className='da-self-exclusion__item-title'>\n                        <Localize i18n_default_text='7 days' />\n                    </h3>\n                    <Text as='p' size='xs' className='da-self-exclusion__item-field'>\n                        <Localize i18n_default_text='Max. deposit limit' />\n                    </Text>\n                    <Field name='max_7day_deposit'>\n                        {({ field }: FormikValues) => (\n                            <Input\n                                {...field}\n                                data-lpignore='true'\n                                className='da-self-exclusion__input'\n                                label={currency}\n                                value={values.max_7day_deposit}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                maxLength={getMaxLength?.('max_7day_deposit')}\n                                required\n                                error={errors.max_7day_deposit}\n                            />\n                        )}\n                    </Field>\n                </div>\n                <div className='da-self-exclusion__item'>\n                    <h3 className='da-self-exclusion__item-title'>\n                        <Localize i18n_default_text='30 days' />\n                    </h3>\n                    <Text as='p' size='xs' className='da-self-exclusion__item-field'>\n                        <Localize i18n_default_text='Max. deposit limit' />\n                    </Text>\n                    <Field name='max_30day_deposit'>\n                        {({ field }: FormikValues) => (\n                            <Input\n                                {...field}\n                                data-lpignore='true'\n                                className='da-self-exclusion__input'\n                                label={currency}\n                                value={values.max_30day_deposit}\n                                onChange={handleChange}\n                                onBlur={handleBlur}\n                                maxLength={getMaxLength?.('max_30day_deposit')}\n                                required\n                                error={errors.max_30day_deposit}\n                            />\n                        )}\n                    </Field>\n                </div>\n            </div>\n        </Fragment>\n    );\n};\n\nconst SelfExclusionInputs = () => {\n    const { footer_ref, goToConfirm, is_app_settings } = useContext(SelfExclusionContext);\n    const { dirty, isSubmitting, isValid, values }: TFormikContext = useFormikContext<TFormikContext>();\n    const versions: Record<string, { condition: boolean; components: Array<FunctionComponent> }> = {\n        // App-specific settings, i.e. user accessing app settings from App Store or\n        // through DWallet App header.\n        app_settings: {\n            condition: !!is_app_settings,\n            components: [StakeLossAndLimitsInputs, MaximumAccountBalanceAndOpenPositionsInputs],\n        },\n        // Legacy Deriv.app, i.e. non-DWallet user accessing app.deriv.com/account/self-exclusion.\n        deriv_app: {\n            condition: !is_app_settings,\n            components: [\n                StakeLossAndLimitsInputs,\n                SessionAndLoginLimitsInputs,\n                MaximumAccountBalanceAndOpenPositionsInputs,\n                MaximumDepositLimitInputs,\n            ],\n        },\n    };\n\n    return (\n        <Fragment>\n            {Object.keys(versions).map((version_name: string) => {\n                const version = versions[version_name];\n                if (!version.condition) return null;\n                return (\n                    <Fragment key={version_name}>\n                        {version.components.map((Component, component_idx) => (\n                            <Component key={`${version_name}component${component_idx}`} />\n                        ))}\n                    </Fragment>\n                );\n            })}\n            {footer_ref ? (\n                <SelfExclusionFooter />\n            ) : (\n                <div className='da-self-exclusion__button-wrapper'>\n                    <Button\n                        disabled={!dirty || !isValid || isSubmitting}\n                        primary\n                        className='da-self-exclusion__button'\n                        large\n                        onClick={() => goToConfirm?.(values)}\n                        type='button'\n                    >\n                        <Localize i18n_default_text='Next' />\n                    </Button>\n                </div>\n            )}\n        </Fragment>\n    );\n};\n\nexport default SelfExclusionInputs;\n","import { useContext } from 'react';\nimport { Form, Formik } from 'formik';\nimport SelfExclusionContext from './self-exclusion-context';\nimport SelfExclusionConfirmPage from './self-exclusion-confirm-page';\nimport SelfExclusionInputs from './self-exclusion-inputs';\n\nconst SelfExclusionForm = () => {\n    const { handleSubmit, state, validateFields } = useContext(SelfExclusionContext);\n\n    return (\n        <Formik initialValues={state?.self_exclusions} onSubmit={handleSubmit} validate={validateFields}>\n            <Form className='da-self-exclusion__form' noValidate>\n                {state?.is_confirm_page ? <SelfExclusionConfirmPage /> : <SelfExclusionInputs />}\n            </Form>\n        </Formik>\n    );\n};\n\nexport default SelfExclusionForm;\n","import SelfExclusion from './self-exclusion';\n\nexport default SelfExclusion;\n","import { Dispatch, SetStateAction, useRef, useReducer, useEffect } from 'react';\nimport { Loading } from '@deriv/components';\nimport {\n    getBrandWebsiteName,\n    getPropertyValue,\n    toMoment,\n    getDecimalPlaces,\n    getCurrencyDisplayCode,\n    validNumber,\n    useIsMounted,\n    WS,\n} from '@deriv/shared';\nimport { useTranslations } from '@deriv-com/translations';\nimport DemoMessage from '../../../Components/demo-message';\nimport '../../../Components/self-exclusion/self-exclusion.scss';\nimport LoadErrorMessage from '../../../Components/load-error-message';\nimport SelfExclusionArticleContent from '../../../Components/self-exclusion/self-exclusion-article-content';\nimport SelfExclusionContext from '../../../Components/self-exclusion/self-exclusion-context';\nimport SelfExclusionModal from '../../../Components/self-exclusion/self-exclusion-modal';\nimport SelfExclusionWrapper from '../../../Components/self-exclusion/self-exclusion-wrapper';\nimport SelfExclusionForm from '../../../Components/self-exclusion/self-exclusion-form';\nimport { FormikHelpers, FormikValues } from 'formik';\nimport { observer, useStore } from '@deriv/stores';\n\ntype TSelfExclusion = {\n    is_app_settings?: boolean;\n    overlay_ref: HTMLDivElement;\n    setIsOverlayShown?: Dispatch<SetStateAction<boolean>>;\n};\ntype TExclusionData = {\n    max_deposit: string;\n    max_turnover: string;\n    max_losses: string;\n    max_7day_deposit: string;\n    max_7day_turnover: string;\n    max_7day_losses: string;\n    max_30day_deposit: string;\n    max_30day_turnover: string;\n    max_30day_losses: string;\n    session_duration_limit: string;\n    timeout_until: string;\n    exclude_until: string;\n    max_balance: string;\n    max_open_bets: string;\n};\n\ntype TExclusionLimits = Partial<{\n    get_limits: {\n        open_positions: number;\n        account_balance: number;\n    };\n}>;\n\ntype TCustomState = Partial<{\n    changed_attributes: string[];\n    error_message: string;\n    is_confirm_page: boolean;\n    is_loading: boolean;\n    is_success: boolean;\n    self_exclusions: Record<string, string>;\n    show_article: boolean;\n    show_confirm: boolean;\n    submit_error_message: string;\n}>;\n\ntype TResponse = {\n    error?: {\n        message: string;\n    };\n};\n\nconst SelfExclusion = observer(({ is_app_settings, overlay_ref, setIsOverlayShown }: TSelfExclusion) => {\n    const { client, ui } = useStore();\n    const { localize } = useTranslations();\n    const {\n        currency,\n        is_virtual,\n        is_switching,\n        standpoint,\n        is_eu,\n        logout,\n        landing_company_shortcode,\n        getLimits: getLimitsFromStore,\n    } = client;\n    const { is_tablet } = ui;\n    const is_wrapper_bypassed = false;\n    const is_mf = landing_company_shortcode === 'maltainvest';\n    const is_cr = standpoint.svg;\n    const exclusion_fields_settings = Object.freeze({\n        max_number: 9999999999999,\n        max_open_positions: 999999999,\n        six_weeks: 60480, // in minutes\n    });\n\n    const exclusion_texts = {\n        max_deposit: localize('Max. deposit limit per day'),\n        max_turnover: localize('Max. total stake per day'),\n        max_losses: localize('Max. total loss per day'),\n        max_7day_deposit: localize('Max. deposit limit over 7 days'),\n        max_7day_turnover: localize('Max. total stake over 7 days'),\n        max_7day_losses: localize('Max. total loss over 7 days'),\n        max_30day_deposit: localize('Max. deposit limit over 30 days'),\n        max_30day_turnover: localize('Max. total stake over 30 days'),\n        max_30day_losses: localize('Max. total loss over 30 days'),\n        session_duration_limit: localize('Time limit per session'),\n        timeout_until: localize('Time out until'),\n        exclude_until: localize('Excluded from {{brand_website_name}} until', {\n            brand_website_name: getBrandWebsiteName(),\n        }),\n        max_balance: localize('Max. account balance'),\n        max_open_bets: localize('Max. open positions'),\n    };\n\n    const prev_is_switching = useRef<boolean | null>(null);\n    const exclusion_limits = useRef<TExclusionLimits>({});\n    const exclusion_data = useRef<TExclusionData>({\n        max_deposit: '',\n        max_turnover: '',\n        max_losses: '',\n        max_7day_deposit: '',\n        max_7day_turnover: '',\n        max_7day_losses: '',\n        max_30day_deposit: '',\n        max_30day_turnover: '',\n        max_30day_losses: '',\n        session_duration_limit: '',\n        timeout_until: '',\n        exclude_until: '',\n        max_balance: '',\n        max_open_bets: '',\n    });\n\n    const initial_state: TCustomState = Object.freeze({\n        changed_attributes: [],\n        error_message: '',\n        is_confirm_page: false,\n        is_loading: true,\n        is_success: false,\n        self_exclusions: exclusion_data.current,\n        show_article: false,\n        show_confirm: false,\n        submit_error_message: '',\n    });\n\n    const isMounted = useIsMounted();\n    const [state, setState] = useReducer<(prev_state: TCustomState, value: TCustomState) => TCustomState>(\n        (prev_state, value) => {\n            return { ...prev_state, ...value };\n        },\n        initial_state\n    );\n\n    useEffect(() => {\n        if (is_virtual) {\n            setState({ is_loading: false });\n        } else {\n            getLimits();\n            getSelfExclusion();\n        }\n\n        return () => {\n            setState({ changed_attributes: [] });\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    useEffect(() => {\n        if (prev_is_switching.current !== is_switching) {\n            prev_is_switching.current = is_switching;\n\n            resetState();\n            getLimits();\n            getSelfExclusion();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [is_switching]);\n\n    useEffect(() => {\n        setIsOverlayShown?.(!!state?.show_article);\n    }, [state.show_article, setIsOverlayShown]);\n\n    const resetState = () => setState(initial_state);\n    const validateFields = (values: FormikValues) => {\n        const errors: Record<string, string | null | undefined> = {};\n\n        // Regex\n        const max_number = exclusion_fields_settings.max_number;\n        const max_open_positions = exclusion_fields_settings.max_open_positions;\n        const six_weeks = exclusion_fields_settings.six_weeks; // in minutes\n\n        const more_than_zero_message = localize('Please input number greater than 0');\n\n        const getSmallestMinValue = (decimals: number) =>\n            decimals === 0\n                ? 1\n                : `0.${Array(decimals - 1)\n                      .fill(0)\n                      .join('')}1`;\n\n        const custom_validation: Array<keyof TExclusionData> = [\n            'max_balance',\n            'max_open_bets',\n            'session_duration_limit',\n        ];\n\n        const only_currency: Array<keyof TExclusionData> = [\n            'max_deposit',\n            'max_7day_deposit',\n            'max_30day_deposit',\n            'max_turnover',\n            'max_losses',\n            'max_7day_turnover',\n            'max_7day_losses',\n            'max_30day_turnover',\n            'max_30day_losses',\n        ];\n\n        if (values.timeout_until) {\n            if (values.timeout_until <= toMoment().unix()) {\n                errors.timeout_until = localize('Timeout time must be greater than current time.');\n            } else if (values.timeout_until > toMoment().add(6, 'week').unix()) {\n                errors.timeout_until = localize('Timeout time cannot be more than 6 weeks.');\n            }\n        }\n\n        if (values.exclude_until) {\n            if (toMoment(values.exclude_until).unix() < toMoment().unix()) {\n                errors.exclude_until = localize('Exclude time must be after today.');\n            } else if (toMoment(values.exclude_until).unix() < toMoment().add(6, 'month').unix()) {\n                errors.exclude_until = localize('Exclude time cannot be less than 6 months.');\n            } else if (toMoment(values.exclude_until).unix() > toMoment().add(5, 'year').unix()) {\n                errors.exclude_until = localize('Exclude time cannot be for more than five years.');\n            }\n        }\n\n        only_currency.forEach(item => {\n            if (values[item]) {\n                const result = validNumber(values[item], {\n                    type: 'float',\n                    decimals: getDecimalPlaces(currency),\n                    min: is_eu ? Number(getSmallestMinValue(getDecimalPlaces(currency))) : 0,\n                    max: Number(is_eu && state.self_exclusions?.[item]) || max_number,\n                });\n                const { is_ok, message } = typeof result === 'object' ? result : { is_ok: result, message: null };\n                if (!is_ok) errors[item] = message;\n            }\n            if (state.self_exclusions?.[item] && !values[item] && !is_cr) {\n                errors[item] = more_than_zero_message;\n            }\n        });\n\n        if (values.session_duration_limit) {\n            const result = validNumber(values.session_duration_limit, {\n                type: 'integer',\n                min: Number(is_eu),\n                max: is_eu ? state.self_exclusions?.session_duration_limit : six_weeks,\n            });\n            const { is_ok, message } = typeof result === 'object' ? result : { is_ok: result, message: null };\n            if (!is_ok) errors.session_duration_limit = message;\n            if (values.session_duration_limit > six_weeks) {\n                errors.session_duration_limit = localize(\n                    'Enter a value in minutes, up to 60480 minutes (equivalent to 6 weeks).'\n                );\n            }\n        }\n\n        if (values.max_open_bets) {\n            const result = validNumber(values.max_open_bets, {\n                type: 'integer',\n                min: Number(is_eu),\n                max: (is_eu && exclusion_limits.current.get_limits?.open_positions) || max_open_positions,\n            });\n            const { is_ok, message } = typeof result === 'object' ? result : { is_ok: result, message: null };\n            if (!is_ok) errors.max_open_bets = message;\n        }\n\n        if (values.max_balance) {\n            const result = validNumber(values.max_balance, {\n                type: 'float',\n                decimals: getDecimalPlaces(currency),\n                min: is_eu ? Number(getSmallestMinValue(getDecimalPlaces(currency))) : 0,\n                max: (is_eu && exclusion_limits.current.get_limits?.account_balance) || max_number,\n            });\n            const { is_ok, message } = typeof result === 'object' ? result : { is_ok: result, message: null };\n            if (!is_ok) errors.max_balance = message;\n        }\n\n        custom_validation.forEach(item => {\n            if (state.self_exclusions?.[item] && !values[item] && !is_cr) {\n                errors[item] = more_than_zero_message;\n            }\n        });\n        return errors;\n    };\n    const handleSubmit = async (values: FormikValues, { setSubmitting }: FormikHelpers<FormikValues>) => {\n        const need_logout_exclusions = ['exclude_until', 'timeout_until'];\n        const string_exclusions = ['exclude_until'];\n        const has_need_logout = state.changed_attributes?.some(attr => need_logout_exclusions.includes(attr));\n\n        const makeRequest = (): Promise<TResponse> =>\n            new Promise(resolve => {\n                const request: { [key: string]: number } = {\n                    set_self_exclusion: 1,\n                };\n\n                state.changed_attributes?.forEach(attr => {\n                    request[attr] = string_exclusions.includes(attr) ? values[attr] : +values[attr];\n                });\n\n                WS.authorized.setSelfExclusion(request).then((response: TResponse) => resolve(response));\n            });\n\n        if (has_need_logout) {\n            if (state.show_confirm) {\n                const response = await makeRequest();\n                if (response.error && isMounted()) {\n                    setState({\n                        show_confirm: false,\n                        submit_error_message: response.error.message,\n                    });\n                } else {\n                    logout();\n                }\n            } else {\n                setState({ show_confirm: true });\n            }\n        } else {\n            const response = await makeRequest();\n\n            if (response.error && isMounted()) {\n                setState({ submit_error_message: response.error.message });\n            } else {\n                setSubmitting(false);\n\n                if (isMounted()) {\n                    setState({ show_confirm: false, is_loading: true, is_confirm_page: false });\n                }\n\n                getLimits();\n                getSelfExclusion();\n            }\n        }\n    };\n\n    const goToConfirm = (values: FormikValues) => {\n        const changed_attributes = Object.keys(values).filter(key => values[key] !== state.self_exclusions?.[key]);\n        setState({ changed_attributes, is_confirm_page: true });\n    };\n\n    const backToReview = () => setState({ show_confirm: false });\n\n    const backFromConfirmLimits = () => setState({ is_confirm_page: false, submit_error_message: '' });\n\n    const objectValuesToString = (object: FormikValues) => {\n        Object.keys(object || {}).forEach(item => {\n            object[item] = `${object[item]}`;\n        });\n\n        return object;\n    };\n\n    const toggleArticle = () => setState({ show_article: !state.show_article });\n\n    const populateExclusionResponse = (response: FormikValues) => {\n        if (response.error && isMounted()) {\n            setState({\n                is_loading: false,\n                error_message: getPropertyValue(response, ['error', 'message']),\n            });\n        } else {\n            const response_to_string = objectValuesToString(getPropertyValue(response, ['get_self_exclusion']));\n\n            if (response_to_string.timeout_until) {\n                response_to_string.timeout_until = +response_to_string.timeout_until;\n            }\n\n            if (isMounted()) {\n                setState({\n                    is_loading: false,\n                    self_exclusions: { ...exclusion_data.current, ...response_to_string },\n                });\n            }\n        }\n    };\n\n    const getSelfExclusion = () => {\n        setState({ is_loading: true });\n\n        WS.authorized.getSelfExclusion({ get_self_exclusion: 1 }).then((self_exclusion_response: FormikValues) => {\n            populateExclusionResponse(self_exclusion_response);\n        });\n    };\n\n    const getLimits = () => {\n        setState({ is_loading: true });\n\n        getLimitsFromStore().then((limits: FormikValues) => {\n            exclusion_limits.current = limits;\n        });\n    };\n\n    const getMaxLength = (field: string) => {\n        const decimals_length = getDecimalPlaces(currency);\n        const isIntegerField = (value: string) => /session_duration_limit|max_open_bets/.test(value);\n        const getLength = (value: string) =>\n            value.toString().length + (isIntegerField(field) || decimals_length === 0 ? 0 : decimals_length + 1); // add 1 to allow typing dot\n\n        if (/max_open_bets/.test(field) && exclusion_limits.current.get_limits?.open_positions && !is_cr)\n            return getLength(String(exclusion_limits.current.get_limits.open_positions));\n\n        if (/max_balance/.test(field) && exclusion_limits.current.get_limits?.account_balance && !is_cr)\n            return getLength(String(exclusion_limits.current.get_limits.account_balance));\n\n        if (!state.self_exclusions?.[field] || is_cr) {\n            if (/max_open_bets/.test(field)) return 9; // TODO: remove when the error is fixed on BE\n            return getLength(String(exclusion_fields_settings.max_number));\n        }\n\n        return getLength(state.self_exclusions?.[field]);\n    };\n\n    if (is_virtual) {\n        return <DemoMessage />;\n    }\n\n    if (state.is_loading || is_switching) {\n        return <Loading is_fullscreen={false} className='account__initial-loader' />;\n    }\n\n    if (state.error_message) {\n        return <LoadErrorMessage error_message={state.error_message} />;\n    }\n\n    const { six_weeks } = exclusion_fields_settings;\n    const currency_display = getCurrencyDisplayCode(currency);\n    const session_duration_digits = six_weeks.toString().length;\n\n    const context_value = {\n        is_app_settings,\n        backFromConfirmLimits,\n        backToReview,\n        currency,\n        currency_display,\n        exclusion_fields_settings,\n        exclusion_limits,\n        exclusion_texts,\n        getMaxLength,\n        goToConfirm,\n        handleSubmit,\n        is_eu,\n        is_mf,\n        is_tablet,\n        is_wrapper_bypassed,\n        objectValuesToString,\n        overlay_ref,\n        session_duration_digits,\n        state,\n        toggleArticle,\n        validateFields,\n    };\n\n    return (\n        <SelfExclusionContext.Provider value={context_value}>\n            <SelfExclusionWrapper>\n                {!is_app_settings && <SelfExclusionModal />}\n                <SelfExclusionForm />\n            </SelfExclusionWrapper>\n            {overlay_ref && state.show_article && <SelfExclusionArticleContent is_in_overlay />}\n        </SelfExclusionContext.Provider>\n    );\n});\n\nexport default SelfExclusion;\n"],"names":["_ref","title","descriptions","onClickLearnMore","className","has_descriptions","length","has_single_description","_jsxs","clsx","children","_jsx","Text","as","color","line_height","size","weight","Fragment","map","description","idx","onClick","Localize","i18n_default_text","Icon","icon","createContext","overlay_ref","document","createElement","currency","handleSubmit","_ref2","is_in_overlay","is_app_settings","toggleArticle","is_eu","useContext","SelfExclusionContext","localize","useTranslations","keyed_article_items","getEuItems","eu_items","component","components","rel","target","href","URLUtils","getDerivStaticURL","push","Chat","open","article_item","key","selfExclusionArticleItems","Popup","Overlay","done_text","toggleOverlay","article","Button","secondary","large","SelfExclusionModal","state","Modal","is_open","show_article","toggleModal","ThemedScrollbars","SelfExclusionArticleContent","observer","React","AccountArticle","StaticUrl","values","brand_website_name","getBrandWebsiteName","platform_name_trader","getPlatformSettings","name","platform_name_dbot","platform_name_smarttrader","is_wrapper_bypassed","is_mf","isDesktop","useDevice","hasAnyExclusion","Object","self_exclusions","some","value","role","SelfExclusionArticle","Div100vhContainer","is_disabled","height_offset","InlineMessage","type","message","is_bypassed","SelfExclusionConfirmLimits","backToReview","isSubmitting","useFormikContext","align","is_loading","primary","SelfExclusionConfirmPage","backFromConfirmLimits","currency_display","exclusion_texts","show_confirm","changed_attributes","includes","toMoment","format","FormatUtils","formatMoney","checked_value","submit_error_message","SelfExclusionFooter","footer_ref","goToConfirm","dirty","isValid","createPortal","disabled","SectionTitle","has_border_line","StakeLossAndLimitsInputs","getMaxLength","errors","handleBlur","handleChange","Field","field","Input","label","max_turnover","onChange","onBlur","maxLength","required","error","_ref3","max_losses","_ref4","max_7day_turnover","_ref5","max_7day_losses","_ref6","max_30day_turnover","_ref7","max_30day_losses","SessionAndLoginLimitsInputs","is_tablet","session_duration_digits","setFieldValue","_ref8","session_duration_limit","_ref9","DatePicker","min_date","add","max_date","timeout_until","epochToMoment","_ref10","unix","readOnly","_ref11","alignment","exclude_until","_ref12","autoComplete","MaximumAccountBalanceAndOpenPositionsInputs","_ref13","max_balance","_ref14","max_open_bets","MaximumDepositLimitInputs","_ref15","max_deposit","_ref16","max_7day_deposit","_ref17","max_30day_deposit","SelfExclusionInputs","versions","app_settings","condition","deriv_app","keys","version_name","version","Component","component_idx","SelfExclusionForm","validateFields","Formik","initialValues","onSubmit","validate","Form","noValidate","is_confirm_page","setIsOverlayShown","client","ui","useStore","is_virtual","is_switching","standpoint","logout","landing_company_shortcode","getLimits","getLimitsFromStore","is_cr","svg","exclusion_fields_settings","freeze","max_number","max_open_positions","six_weeks","prev_is_switching","useRef","exclusion_limits","exclusion_data","initial_state","error_message","is_success","current","isMounted","useIsMounted","setState","useReducer","prev_state","useEffect","getSelfExclusion","resetState","objectValuesToString","object","forEach","item","WS","authorized","get_self_exclusion","then","self_exclusion_response","response","getPropertyValue","response_to_string","populateExclusionResponse","limits","DemoMessage","Loading","is_fullscreen","LoadErrorMessage","getCurrencyDisplayCode","toString","context_value","decimals_length","getDecimalPlaces","getLength","test","isIntegerField","get_limits","open_positions","String","account_balance","filter","async","setSubmitting","need_logout_exclusions","string_exclusions","has_need_logout","attr","makeRequest","Promise","resolve","request","set_self_exclusion","setSelfExclusion","more_than_zero_message","getSmallestMinValue","decimals","Array","fill","join","result","validNumber","min","Number","max","is_ok","Provider","SelfExclusionWrapper"],"sourceRoot":""}