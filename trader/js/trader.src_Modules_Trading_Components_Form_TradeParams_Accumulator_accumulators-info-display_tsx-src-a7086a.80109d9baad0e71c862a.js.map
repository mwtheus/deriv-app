{"version":3,"file":"trader/js/trader.src_Modules_Trading_Components_Form_TradeParams_Accumulator_accumulators-info-display_tsx-src-a7086a.80109d9baad0e71c862a.js","mappings":"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","sources":["webpack://@deriv/trader/../../node_modules/@deriv/quill-icons/dist/esm/react/LabelPaired/LabelPairedChevronsDownCaptionRegularIcon.js","webpack://@deriv/trader/../../node_modules/@deriv/quill-icons/dist/esm/react/LabelPaired/LabelPairedChevronsUpCaptionRegularIcon.js","webpack://@deriv/trader/./src/App/Components/Form/fieldset.tsx","webpack://@deriv/trader/./src/App/Components/Form/number-selector.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/LabeledQuantityInputMobile/labeled-quantity-input-mobile.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/LabeledQuantityInputMobile/index.ts","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/Purchase/value-movement.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/Accumulator/accumulators-info-display.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/Duration/duration-range-text.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/Duration/expiry-text.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/Multiplier/expiration.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/Multiplier/info.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/Multiplier/stop-loss.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/Multiplier/take-profit.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/WheelPicker/wheel-picker.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/WheelPicker/index.ts","webpack://@deriv/trader/./src/Modules/Trading/Components/Elements/PayoutPerPoint/payout-per-point-input.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/Turbos/payout-selector.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/barrier.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/last-digit.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/min-max-stake-info.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/barriers-list-body.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/barriers-list.tsx","webpack://@deriv/trader/./src/Modules/Trading/Containers/strike-param-modal.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/strike.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/trade-type-tabs.tsx","webpack://@deriv/trader/./src/Assets/Trading/Categories/Description/accumulator-trade-description.tsx","webpack://@deriv/trader/./src/Assets/Trading/Categories/Description/asian-trade-description.tsx","webpack://@deriv/trader/./src/Assets/Trading/Categories/Description/call-put-spread-trade-description.tsx","webpack://@deriv/trader/./src/Assets/Trading/Categories/Description/end-trade-description.tsx","webpack://@deriv/trader/./src/Assets/Trading/Categories/Description/even-odd-trade-description.tsx","webpack://@deriv/trader/./src/Assets/Trading/Categories/Description/high-low-trade-description.tsx","webpack://@deriv/trader/./src/Assets/Trading/Categories/Description/lb-high-low-trade-description.tsx","webpack://@deriv/trader/./src/Assets/Trading/Categories/Description/lb-put-trade-description.tsx","webpack://@deriv/trader/./src/Assets/Trading/Categories/Description/lb-call-trade-description.tsx","webpack://@deriv/trader/./src/Assets/Trading/Categories/Description/match-diff-trade-description.tsx","webpack://@deriv/trader/./src/Assets/Trading/Categories/Description/multiplier-trade-description.tsx","webpack://@deriv/trader/./src/Assets/Trading/Categories/Description/over-under-trade-description.tsx","webpack://@deriv/trader/./src/Assets/Trading/Categories/Description/rise-fall-trade-description.tsx","webpack://@deriv/trader/./src/Assets/Trading/Categories/Description/run-high-low-trade-description.tsx","webpack://@deriv/trader/./src/Assets/Trading/Categories/Description/reset-trade-description.tsx","webpack://@deriv/trader/./src/Assets/Trading/Categories/Description/stay-trade-description.tsx","webpack://@deriv/trader/./src/Assets/Trading/Categories/Description/turbos-trade-description.tsx","webpack://@deriv/trader/./src/Assets/Trading/Categories/Description/touch-trade-description.tsx","webpack://@deriv/trader/./src/Assets/Trading/Categories/Description/tick-high-low-trade-description.tsx","webpack://@deriv/trader/./src/Assets/Trading/Categories/Description/vanilla-trade-description.tsx","webpack://@deriv/trader/./src/Assets/Trading/Categories/trade-categories.tsx","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-asian.svg","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-close-to-low.svg","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-ends-in-out.svg","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-high-to-close.svg","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-high-to-low.svg","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-reset.svg","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-run-high-low.svg","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-spread.svg","webpack://@deriv/trader/./src/Assets/SvgComponents/trade_explanations/img-tick-high-low.svg","webpack://@deriv/trader/./src/Assets/Trading/Categories/contract-type-description-video.tsx","webpack://@deriv/trader/./src/Assets/Trading/Categories/trade-categories-gif.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/ContractTypeInfo/contract-type-glossary.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/ContractTypeInfo/contract-type-info.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/ContractTypeInfo/contract-type-info-header.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/ContractTypeInfo/index.ts","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/ContractTypeMenu/search-input.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/ContractTypeMenu/no-results-message.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/ContractTypeMenu/contract-type-menu.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/ContractTypeMenu/index.ts","webpack://@deriv/trader/./src/Assets/Trading/Categories/icon-trade-categories.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/contract-type-display.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/contract-type-item.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/contract-type-list.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/contract-type.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/contract-type-dialog.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/contract-type-widget.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/ContractType/index.ts","webpack://@deriv/trader/./src/Modules/Trading/Containers/contract-type.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/TradeParams/Accumulator/accumulators-sell-button.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/Purchase/cancel-deal-info.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/Purchase/contract-info.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Elements/purchase-button.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Elements/purchase-fieldset.tsx","webpack://@deriv/trader/./src/Modules/Trading/Containers/purchase.tsx","webpack://@deriv/trader/./src/Stores/Modules/Trading/Helpers/multiplier.ts"],"sourcesContent":["import * as React from 'react';\nimport { forwardRef } from 'react';\nconst LabelPairedChevronsDownCaptionRegularIcon = ({ title, titleId, ...props }, ref) => (React.createElement(\"svg\", { xmlns: 'http://www.w3.org/2000/svg', width: 12, height: 18, viewBox: '0 0 12 18', role: 'img', ref: ref, \"aria-labelledby\": titleId, ...props },\n    title ? React.createElement(\"title\", { id: titleId }, title) : null,\n    React.createElement(\"g\", null,\n        React.createElement(\"path\", { d: 'M1.219 5.281a.397.397 0 0 1 0-.539c.14-.14.398-.14.539 0L6 8.984l4.219-4.242c.14-.14.398-.14.539 0 .14.14.14.399 0 .54l-4.5 4.5a.397.397 0 0 1-.54 0zm0 4.5a.397.397 0 0 1 0-.539c.14-.14.398-.14.539 0L6 13.484l4.219-4.242c.14-.14.398-.14.539 0 .14.14.14.399 0 .54l-4.5 4.5a.397.397 0 0 1-.54 0z' })),\n    React.createElement(\"defs\", null,\n        React.createElement(\"clipPath\", { id: '5b766dbfe6d108b6524da8804d78d617__a' },\n            React.createElement(\"path\", { d: 'M0 0h12v18H0z' })))));\nconst ForwardRef = forwardRef(LabelPairedChevronsDownCaptionRegularIcon);\nexport default ForwardRef;\n","import * as React from 'react';\nimport { forwardRef } from 'react';\nconst LabelPairedChevronsUpCaptionRegularIcon = ({ title, titleId, ...props }, ref) => (React.createElement(\"svg\", { xmlns: 'http://www.w3.org/2000/svg', width: 12, height: 18, viewBox: '0 0 12 18', role: 'img', ref: ref, \"aria-labelledby\": titleId, ...props },\n    title ? React.createElement(\"title\", { id: titleId }, title) : null,\n    React.createElement(\"g\", null,\n        React.createElement(\"path\", { d: 'm6.258 4.742 4.5 4.5c.14.14.14.399 0 .54a.397.397 0 0 1-.54 0L6 5.538 1.758 9.781a.397.397 0 0 1-.54 0 .397.397 0 0 1 0-.539l4.5-4.5c.141-.14.4-.14.54 0m4.5 9c.14.14.14.399 0 .54a.397.397 0 0 1-.54 0L6 10.038l-4.242 4.242a.397.397 0 0 1-.54 0 .397.397 0 0 1 0-.539l4.5-4.5c.141-.14.4-.14.54 0z' })),\n    React.createElement(\"defs\", null,\n        React.createElement(\"clipPath\", { id: '15e980a3e7e705703b561beea0f6083c__a' },\n            React.createElement(\"path\", { d: 'M0 0h12v18H0z' })))));\nconst ForwardRef = forwardRef(LabelPairedChevronsUpCaptionRegularIcon);\nexport default ForwardRef;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Popover } from '@deriv/components';\n\n// ToDo:\n// - Refactor Last Digit to keep the children as array type.\n//   Currently last_digit.jsx returns object (React-Element) as 'children'\n//   props type.\ntype TFieldset = {\n    children?: React.ReactNode[] | React.ReactNode;\n    className: string;\n    header?: string | React.ReactNode;\n    header_tooltip?: string | React.ReactNode;\n    is_tooltip_disabled?: boolean;\n    is_center?: boolean;\n    popover_wrapper_class?: string;\n    onMouseEnter?: () => void;\n    onMouseLeave?: () => void;\n};\n\nconst Fieldset = ({\n    children,\n    className,\n    header,\n    header_tooltip,\n    is_center,\n    is_tooltip_disabled,\n    popover_wrapper_class,\n    onMouseEnter,\n    onMouseLeave,\n}: TFieldset) => {\n    const fieldset_header_class = classNames('trade-container__fieldset-header', {\n        'center-text': is_center,\n        'trade-container__fieldset-header--inline': header_tooltip,\n    });\n    const fieldset_info_class = classNames(\n        'trade-container__fieldset-info',\n        !is_center && 'trade-container__fieldset-info--left'\n    );\n\n    return (\n        <fieldset className={className} onMouseEnter={onMouseEnter} onMouseLeave={onMouseLeave}>\n            {!!header && (\n                <div className={fieldset_header_class}>\n                    <span className={fieldset_info_class}>{header}</span>\n                    {header_tooltip && (\n                        <span\n                            className={classNames({\n                                'trade-container__fieldset-header--tooltip-disabled': is_tooltip_disabled,\n                                [popover_wrapper_class as string]: !!popover_wrapper_class,\n                            })}\n                        >\n                            <Popover\n                                alignment='left'\n                                icon='info'\n                                is_bubble_hover_enabled\n                                message={header_tooltip}\n                                margin={216}\n                                relative_render\n                            />\n                        </span>\n                    )}\n                </div>\n            )}\n            {children}\n        </fieldset>\n    );\n};\n\nexport default Fieldset;\n","import classNames from 'classnames';\nimport React from 'react';\n\ntype TNumberSelector = {\n    arr_arr_numbers?: number[][];\n    name: string;\n    onChange: (new_values: {\n        target: {\n            value: string | number;\n            name: string;\n        };\n    }) => void;\n    selected_number?: number;\n    should_show_in_percents?: boolean;\n    is_disabled?: boolean;\n};\n\n// arr_arr_numbers is an array of arrays where each nested array indicates one row\n// for example [[1, 2, 3]] will be a single row of these three numbers\n// but [[1, 2, 3], [4, 5, 6]] will be two rows:\n// first row with the first three numbers and second row with the last three numbers\nconst NumberSelector = ({\n    arr_arr_numbers,\n    name,\n    onChange,\n    selected_number,\n    should_show_in_percents,\n    is_disabled,\n}: TNumberSelector) => {\n    const handleSelect = (event: React.MouseEvent<HTMLSpanElement>) => {\n        if (Number(event.currentTarget.getAttribute('data-value')) !== selected_number && !is_disabled) {\n            onChange({ target: { name, value: Number(event.currentTarget.getAttribute('data-value')) } });\n        }\n    };\n\n    return (\n        <div className='number-selector'>\n            {arr_arr_numbers &&\n                arr_arr_numbers.map((arr_numbers, idx) => (\n                    <div className='number-selector__row' key={idx.toString() + arr_numbers?.[0]}>\n                        {arr_numbers.map(i => (\n                            <span\n                                key={i}\n                                className={classNames('number-selector__selection', {\n                                    'number-selector__selection--selected': selected_number === i,\n                                    'number-selector__selection--percentage': should_show_in_percents,\n                                    'number-selector__selection--disabled': is_disabled,\n                                })}\n                                data-value={i}\n                                onClick={handleSelect}\n                            >\n                                {should_show_in_percents ? `${i * 100}%` : i}\n                            </span>\n                        ))}\n                    </div>\n                ))}\n        </div>\n    );\n};\n\nexport default NumberSelector;\n","import React from 'react';\nimport { InputField } from '@deriv/components';\nimport Fieldset from 'App/Components/Form/fieldset';\n\ntype TLabeledQuantityInputMobile = {\n    input_label: string | React.ReactNode;\n    wrapper_classname?: string;\n    name?: string;\n} & React.ComponentProps<typeof InputField>;\n\nconst LabeledQuantityInputMobile = ({ input_label, ...props }: TLabeledQuantityInputMobile) => (\n    <div className={`${props.name}__widget ${props.wrapper_classname}`} data-testid={`dt_${props.name}_widget`}>\n        <Fieldset className={`${props.name}__fields`}>\n            <InputField {...props} />\n        </Fieldset>\n        <h2 className={`${props.name}__widget-title`}>{input_label}</h2>\n    </div>\n);\n\nexport default React.memo(LabeledQuantityInputMobile);\n","import LabeledQuantityInputMobile from './labeled-quantity-input-mobile';\n\nexport default LabeledQuantityInputMobile;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { ArrowIndicator, Money } from '@deriv/components';\nimport ContractInfo from './contract-info';\n\ntype TValueMovement = Partial<\n    Pick<React.ComponentProps<typeof ContractInfo>, 'is_vanilla' | 'currency' | 'proposal_info'>\n> & {\n    has_error_or_not_loaded: boolean;\n    value?: number | string;\n    show_currency?: boolean;\n};\nconst ValueMovement = ({\n    has_error_or_not_loaded,\n    proposal_info,\n    currency,\n    is_vanilla = false,\n    value,\n    show_currency = true,\n}: TValueMovement) => (\n    <div className='price-info--value-container'>\n        <div className='trade-container__price-info-value'>\n            {!has_error_or_not_loaded && (\n                <Money\n                    amount={proposal_info?.obj_contract_basis?.value || value}\n                    className={classNames('trade-container__price-info-currency', {\n                        'trade-container__price-info-currency--payout-per-point': is_vanilla,\n                    })}\n                    currency={currency}\n                    should_format={!is_vanilla}\n                    show_currency={show_currency}\n                />\n            )}\n        </div>\n        <ArrowIndicator\n            className='trade-container__price-info-movement'\n            value={proposal_info?.obj_contract_basis?.value || value}\n        />\n    </div>\n);\n\nexport default ValueMovement;\n","import React from 'react';\nimport { localize } from '@deriv/translations';\nimport Fieldset from 'App/Components/Form/fieldset';\nimport { Money, Text, Popover } from '@deriv/components';\nimport classNames from 'classnames';\nimport { observer } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { isMobile } from '@deriv/shared';\n\nconst AccumulatorsInfoDisplay = observer(() => {\n    const { currency, maximum_payout, maximum_ticks } = useTraderStore();\n\n    const content = [\n        {\n            label: localize('Max. payout'),\n            value: <Money amount={maximum_payout} show_currency currency={currency} />,\n            tooltip_text: localize('Your contract will be automatically closed when your payout reaches this amount.'),\n            margin: 143,\n        },\n        {\n            label: localize('Max. ticks'),\n            value: `${maximum_ticks || 0} ${maximum_ticks === 1 ? localize('tick') : localize('ticks')}`,\n            tooltip_text: localize('Your contract will be automatically closed upon reaching this number of ticks.'),\n            margin: 175,\n        },\n    ];\n\n    return (\n        <Fieldset className={classNames('trade-container__fieldset', 'accu-info-display')}>\n            {content.map(({ label, value, tooltip_text, margin }) => (\n                <div key={label} className='accu-info-display__row'>\n                    <Text size='xxs' weight='bold' line_height='xxs'>\n                        {label}\n                    </Text>\n                    <Text size='xxs' align='right' as='div'>\n                        <Popover\n                            alignment={isMobile() ? 'top' : 'left'}\n                            classNameBubble='accu-info-display__popover'\n                            is_bubble_hover_enabled\n                            message={tooltip_text}\n                            margin={isMobile() ? -5 : margin}\n                            zIndex='9999'\n                        >\n                            {value}\n                        </Popover>\n                    </Text>\n                </div>\n            ))}\n        </Fieldset>\n    );\n});\n\nexport default AccumulatorsInfoDisplay;\n","import React from 'react';\nimport { Text } from '@deriv/components';\nimport { addComma } from '@deriv/shared';\nimport { Localize } from '@deriv/translations';\n\ntype TDurationRangeText = {\n    min: number | null;\n    max: number | null;\n    duration_unit_text?: string;\n};\n\nconst DurationRangeText = ({ min, max, duration_unit_text }: TDurationRangeText) => (\n    <Text as='div' size='xxxs' line_height='s' className='range-text-container'>\n        <Localize\n            i18n_default_text='Range: {{min}} - {{max}} {{duration_unit_text}} '\n            values={{\n                min: addComma(min),\n                max: addComma(max),\n                duration_unit_text,\n            }}\n        />\n    </Text>\n);\n\nexport default DurationRangeText;\n","import React from 'react';\nimport { Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\n\ntype TExpiryText = {\n    expiry_epoch?: number;\n    has_error?: boolean;\n    fixed_date?: string;\n};\nconst ExpiryText = ({ expiry_epoch, has_error, fixed_date }: TExpiryText) => {\n    const formatted_date =\n        expiry_epoch && !has_error\n            ? new Date(expiry_epoch * 1000)\n                  .toUTCString()\n                  .replace('GMT', 'GMT +0')\n                  .substring(5)\n                  .replace(/(\\d{2}) (\\w{3} \\d{4})/, '$1 $2,')\n            : '';\n\n    return (\n        <Text as='div' size='xxxs' line_height='s' className='expiry-text-container'>\n            <Localize i18n_default_text='Expiry: {{date}}' values={{ date: fixed_date || formatted_date }} />\n        </Text>\n    );\n};\n\nexport default ExpiryText;\n","import React from 'react';\nimport { Localize } from '@deriv/translations';\nimport { formatDuration, getDiffDuration, getDateFromNow } from '@deriv/shared';\nimport { Text } from '@deriv/components';\nimport Fieldset from 'App/Components/Form/fieldset';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\ntype TExpirationProps = {\n    is_text_only?: boolean;\n    text_size?: string;\n};\n\nconst Expiration = observer(({ is_text_only, text_size }: TExpirationProps) => {\n    const { expiration } = useTraderStore();\n    const { common } = useStore();\n    const { server_time: start_time } = common;\n    const { days, timestamp } = formatDuration(\n        getDiffDuration(Number(start_time?.unix()), Number(expiration)),\n        'HH:mm'\n    );\n    const date = getDateFromNow(days, 'day', 'DD MMM YYYY');\n\n    if (is_text_only) {\n        return (\n            <React.Fragment>\n                {expiration ? (\n                    <Text size={text_size} align='center'>\n                        {date} at {timestamp}\n                    </Text>\n                ) : (\n                    '-'\n                )}\n            </React.Fragment>\n        );\n    }\n\n    return (\n        <Fieldset\n            className='trade-container__fieldset trade-container__fieldset__multiplier'\n            is_center\n            header={<Localize i18n_default_text='Expires on' />}\n            header_tooltip={\n                expiration ? (\n                    <Localize\n                        i18n_default_text='Your contract will be closed automatically at the next available asset price on {{date}} at {{timestamp}}.'\n                        values={{ date, timestamp }}\n                    />\n                ) : null\n            }\n        >\n            <div className='trade-container__fieldset-expiration'>\n                {expiration ? (\n                    <Text size='xs' align='center'>\n                        {date} at {timestamp}\n                    </Text>\n                ) : (\n                    '-'\n                )}\n            </div>\n        </Fieldset>\n    );\n});\n\nexport default Expiration;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Popover, Money, Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport { observer } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nconst commission_tooltip_margin = 30;\nconst stop_out_tooltip_margin = 160;\n\ntype TMultipliersInfo = {\n    amount?: number | string;\n    className: string;\n    commission_text_size?: string;\n    commission?: number | null;\n    is_tooltip_relative?: boolean;\n    multiplier?: number;\n    should_show_tooltip?: boolean;\n    stop_out_text_size?: string;\n    stop_out?: number | null;\n};\n\ntype TPopoverPosition = React.ComponentProps<typeof Popover>['alignment'];\n\ntype TTooltip_params = { alignment: TPopoverPosition; relative_render?: boolean; margin?: number; zIndex?: string };\n\nconst MultipliersInfo = observer(\n    ({\n        className,\n        commission_text_size,\n        stop_out_text_size,\n        is_tooltip_relative,\n        should_show_tooltip,\n        ...props\n    }: TMultipliersInfo) => {\n        const trade = useTraderStore();\n        const { currency, has_stop_loss } = trade;\n        const multiplier = props.multiplier ?? (trade.multiplier || 0);\n        const amount = props.amount ?? (trade.amount || 0);\n        const commission = props.commission ?? (trade.commission || 0);\n        const stop_out = props.stop_out ?? (trade.stop_out || 0);\n\n        const commission_text = (\n            <Text\n                as='p'\n                line_height='s'\n                size={commission_text_size || 'xxxs'}\n                className={classNames({\n                    [`${className}-tooltip-text`]: className,\n                })}\n            >\n                <Localize\n                    i18n_default_text='Commission <0/>'\n                    components={[<Money key={0} amount={commission} currency={currency} show_currency />]}\n                />\n            </Text>\n        );\n\n        const stop_out_text = (\n            <Text\n                as='p'\n                line_height='s'\n                size={stop_out_text_size || 'xxxs'}\n                className={classNames({\n                    [`${className}-tooltip-text`]: className,\n                })}\n            >\n                <Localize\n                    i18n_default_text='Stop out <0/>'\n                    components={[<Money key={0} amount={stop_out} currency={currency} show_currency />]}\n                />\n            </Text>\n        );\n\n        const commission_tooltip = (\n            <Localize\n                i18n_default_text='<0>{{commission_percentage}}%</0> of (<1/> * {{multiplier}})'\n                values={{\n                    commission_percentage: ((Number(commission) * 100) / (multiplier * Number(amount))).toFixed(4),\n                    multiplier,\n                }}\n                components={[\n                    <Text size='xxs' weight='bold' key={0} />,\n                    <Money key={1} amount={amount} currency={currency} />,\n                ]}\n            />\n        );\n\n        const stop_out_tooltip = (\n            <Localize\n                i18n_default_text='Your contract will be closed automatically when your loss reaches {{stop_out_percentage}}% of your stake.'\n                values={{\n                    stop_out_percentage: Math.floor(Math.abs((stop_out * 100) / Number(amount))),\n                }}\n            />\n        );\n\n        const getInfo = ({\n            text,\n            message,\n            margin,\n        }: {\n            text: React.ReactNode;\n            message: React.ReactNode;\n            margin: number;\n        }) => {\n            const tooltip_params: TTooltip_params = is_tooltip_relative\n                ? { alignment: 'left', relative_render: true, margin }\n                : { alignment: 'top', zIndex: '9999' };\n            return should_show_tooltip ? (\n                <Popover message={message} {...tooltip_params}>\n                    {text}\n                </Popover>\n            ) : (\n                text\n            );\n        };\n\n        return (\n            <div\n                className={classNames('multipliers-trade-info', className, {\n                    'mobile-widget__multiplier-trade-info--no-stop-out': has_stop_loss,\n                })}\n            >\n                {getInfo({\n                    text: commission_text,\n                    message: commission_tooltip,\n                    margin: commission_tooltip_margin,\n                })}\n                {!has_stop_loss &&\n                    getInfo({\n                        text: stop_out_text,\n                        message: stop_out_tooltip,\n                        margin: stop_out_tooltip_margin,\n                    })}\n            </div>\n        );\n    }\n);\n\nexport default MultipliersInfo;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { InputWithCheckbox } from '@deriv/components';\nimport { Localize, localize } from '@deriv/translations';\nimport Fieldset from 'App/Components/Form/fieldset';\nimport { isDesktop } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { TTradeStore } from 'Types';\n\ntype TStopLossProps = {\n    has_stop_loss?: boolean;\n    onChange?: (e: { target: { name: string; value: unknown } }) => void;\n    onChangeMultiple?: (props: Partial<TTradeStore>) => void;\n    stop_loss?: string;\n    validation_errors?: { [key: string]: string[] };\n};\n\nconst StopLoss = observer((props: TStopLossProps) => {\n    const { ui, client } = useStore();\n    const trade = useTraderStore();\n\n    const { addToast, removeToast, current_focus, setCurrentFocus } = ui;\n    const { is_single_currency } = client;\n    const { amount, currency } = trade;\n\n    const validation_errors = props.validation_errors ?? trade.validation_errors;\n    const stop_loss = props.stop_loss ?? trade.stop_loss;\n    const has_stop_loss = props.has_stop_loss ?? trade.has_stop_loss;\n    const onChangeMultiple = props.onChangeMultiple ?? trade.onChangeMultiple;\n    const onChange = props.onChange ?? trade.onChange;\n\n    const changeValue = (e: Parameters<React.ComponentProps<typeof InputWithCheckbox>['onChange']>[0]) => {\n        if (e.target.name === 'has_stop_loss') {\n            const new_val = e.target.value;\n            onChangeMultiple({\n                [e.target.name as string]: new_val,\n                ...(new_val ? { has_cancellation: false } : {}),\n            });\n        } else {\n            onChange(e);\n        }\n    };\n\n    return (\n        <Fieldset className='trade-container__fieldset'>\n            <InputWithCheckbox\n                addToast={addToast}\n                removeToast={removeToast}\n                classNameBubble='dc-popover__trade-params'\n                classNameInlinePrefix='trade-container__currency'\n                classNameInput='trade-container__input'\n                className={classNames({\n                    'trade-container__amount trade-container__amount--multipliers': isDesktop(),\n                })}\n                currency={currency}\n                current_focus={current_focus ?? ''}\n                defaultChecked={has_stop_loss}\n                error_messages={has_stop_loss ? validation_errors?.stop_loss : undefined}\n                is_single_currency={is_single_currency}\n                is_negative_disabled={true}\n                is_input_hidden={!has_stop_loss}\n                label={localize('Stop loss')}\n                max_value={+amount}\n                name='stop_loss'\n                onChange={changeValue}\n                setCurrentFocus={setCurrentFocus}\n                tooltip_label={\n                    <Localize i18n_default_text='When your loss reaches or exceeds this amount, your trade will be closed automatically.' />\n                }\n                tooltip_alignment='left'\n                error_message_alignment='left'\n                value={stop_loss ?? ''}\n            />\n        </Fieldset>\n    );\n});\n\nexport default StopLoss;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { InputWithCheckbox } from '@deriv/components';\nimport { Localize, localize } from '@deriv/translations';\nimport { isDesktop } from '@deriv/shared';\nimport Fieldset from 'App/Components/Form/fieldset';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { TTradeStore } from 'Types';\n\ntype TTakeProfitProps = {\n    has_info?: boolean;\n    has_take_profit?: boolean;\n    onChange?: (e: { target: { name: string; value: unknown } }) => void;\n    onChangeMultiple?: (props: Partial<TTradeStore>) => void;\n    take_profit?: string;\n    validation_errors?: { [key: string]: string[] };\n};\n\nconst TakeProfit = observer((props: TTakeProfitProps) => {\n    const { ui, client } = useStore();\n    const trade = useTraderStore();\n\n    const { addToast, removeToast, current_focus, setCurrentFocus } = ui;\n    const { is_single_currency } = client;\n    const { is_accumulator, currency, has_open_accu_contract } = trade;\n\n    const validation_errors = props.validation_errors ?? trade.validation_errors;\n    const take_profit = props.take_profit ?? trade.take_profit;\n    const has_take_profit = props.has_take_profit ?? trade.has_take_profit;\n    const onChangeMultiple = props.onChangeMultiple ?? trade.onChangeMultiple;\n    const onChange = props.onChange ?? trade.onChange;\n\n    const changeValue = (e: Parameters<React.ComponentProps<typeof InputWithCheckbox>['onChange']>[0]) => {\n        if (e.target.name === 'has_take_profit') {\n            const new_val = e.target.value;\n            onChangeMultiple({\n                [e.target.name as string]: new_val,\n                ...(new_val ? { has_cancellation: false } : {}),\n            });\n        } else {\n            onChange(e);\n        }\n    };\n\n    const take_profit_tooltip = (\n        <Localize i18n_default_text='When your profit reaches or exceeds this amount, your trade will be closed automatically.' />\n    );\n\n    return (\n        <Fieldset className='trade-container__fieldset'>\n            <InputWithCheckbox\n                addToast={addToast}\n                removeToast={removeToast}\n                classNameBubble='dc-popover__trade-params'\n                classNameInlinePrefix='trade-container__currency'\n                classNameInput={classNames('trade-container__input', {\n                    'trade-container__input--accumulator': is_accumulator,\n                })}\n                className={classNames({\n                    'trade-container__amount trade-container__amount--multipliers': isDesktop(),\n                })}\n                currency={currency}\n                current_focus={current_focus ?? ''}\n                defaultChecked={has_take_profit}\n                error_messages={has_take_profit ? validation_errors?.take_profit : undefined}\n                is_disabled={has_open_accu_contract}\n                is_single_currency={is_single_currency}\n                is_negative_disabled\n                is_input_hidden={!has_take_profit}\n                label={localize('Take profit')}\n                name='take_profit'\n                onChange={changeValue}\n                setCurrentFocus={setCurrentFocus}\n                tooltip_label={\n                    is_accumulator ? (\n                        <React.Fragment>\n                            {take_profit_tooltip}{' '}\n                            <Localize i18n_default_text=\"Take profit can't be adjusted after your contract starts.\" />\n                        </React.Fragment>\n                    ) : (\n                        take_profit_tooltip\n                    )\n                }\n                tooltip_alignment='left'\n                error_message_alignment='left'\n                value={take_profit ?? ''}\n            />\n        </Fieldset>\n    );\n});\n\nexport default TakeProfit;\n","import React, { useState, useEffect } from 'react';\nimport { Button, Icon, Text } from '@deriv/components';\nimport { motion } from 'framer-motion';\n\nconst transition = {\n    duration: 0.24,\n    ease: [0, 0, 0, 1],\n};\n\nconst variants = {\n    enter: (direction: 'up' | 'down') => ({\n        x: 0,\n        y: direction === 'down' ? 30 : -30,\n        opacity: 0,\n        transition,\n    }),\n    center: {\n        x: 0,\n        y: 0,\n        opacity: 1,\n        transition,\n    },\n    exit: (direction: 'up' | 'down') => ({\n        x: 0,\n        y: direction === 'down' ? -30 : 30,\n        opacity: 0,\n        transition,\n    }),\n};\n\ntype WheelPickerType = {\n    onClick: (id: string) => Promise<void> | void;\n    options: string[];\n    defaultValue?: string;\n    currency?: string;\n};\n\nconst WheelPicker = ({ options, onClick, defaultValue, currency }: WheelPickerType) => {\n    const [selectedIndex, setSelectedIndex] = useState(Math.floor(options.length / 2));\n    const [direction, setDirection] = useState('down');\n\n    useEffect(() => {\n        if (defaultValue) {\n            setSelectedIndex(options.indexOf(defaultValue));\n        }\n    }, [defaultValue, options]);\n\n    const handleIndexChange = (newIndex: number, newDirection: 'up' | 'down') => {\n        setDirection(newDirection);\n        setSelectedIndex(newIndex);\n        onClick(options[newIndex]);\n    };\n\n    const handleIncrease = () => {\n        if (selectedIndex > 0) {\n            handleIndexChange(selectedIndex - 1, 'up');\n        }\n    };\n\n    const handleDecrease = () => {\n        if (selectedIndex < options.length - 1) {\n            handleIndexChange(selectedIndex + 1, 'down');\n        }\n    };\n\n    const visibleValues = () => {\n        const values = [options[selectedIndex - 1] || '', options[selectedIndex], options[selectedIndex + 1] || ''];\n        return values;\n    };\n    const hasUndefinedValues = visibleValues().some(option => option === undefined);\n\n    return (\n        <div className='wheel-picker'>\n            <div className='wheel-picker__wheel' key={selectedIndex}>\n                {options.length > 0 &&\n                    !hasUndefinedValues &&\n                    visibleValues().map((value: string | number, index: number) => (\n                        <motion.div\n                            key={index}\n                            variants={variants}\n                            custom={direction}\n                            initial='enter'\n                            animate='center'\n                            exit='exit'\n                        >\n                            <Text\n                                size={index === 1 ? 'xs' : 'xxs'}\n                                line_height={index === 1 ? 'l' : 'm'}\n                                weight={index === 1 ? 'bolder' : 'bold'}\n                                color={index === 1 ? 'default' : 'disabled-1'}\n                                align='center'\n                                as='p'\n                                className={index === 1 ? '' : 'wheel-picker__wheel__placeholder'}\n                            >\n                                {value} {value !== '' ? currency : ''}\n                            </Text>\n                        </motion.div>\n                    ))}\n            </div>\n            <div className='wheel-picker__actions'>\n                <Button\n                    disabled={selectedIndex === 0}\n                    small\n                    className='wheel-picker__actions__btn'\n                    data-testid='dt_up_btn'\n                    name='up-btn'\n                    onClick={handleIncrease}\n                >\n                    <Icon\n                        icon='IcChevronUp'\n                        color={selectedIndex === 0 ? 'disabled' : 'black'}\n                        className='chevron-icon'\n                    />\n                </Button>\n                <Button\n                    small\n                    disabled={selectedIndex === options.length - 1}\n                    className='wheel-picker__actions__btn  wheel-picker__actions--chevron-up'\n                    name='down-btn'\n                    data-testid='dt_down_btn'\n                    onClick={handleDecrease}\n                >\n                    <Icon\n                        icon='IcChevronUp'\n                        color={selectedIndex === options.length - 1 ? 'disabled' : 'black'}\n                        className='chevron-up'\n                    />\n                </Button>\n            </div>\n        </div>\n    );\n};\n\nexport default WheelPicker;\n","import WheelPicker from './wheel-picker';\nimport './wheel-picker.scss';\n\nexport default WheelPicker;\n","import React from 'react';\nimport WheelPicker from '../../Form/WheelPicker';\nimport { Popover, Text, useDevice } from '@deriv/components';\nimport Fieldset from 'App/Components/Form/fieldset';\nimport { Localize } from '@deriv/translations';\nimport './payout-per-point.scss';\nimport { LabelPairedChevronsDownCaptionRegularIcon, LabelPairedChevronsUpCaptionRegularIcon } from '@deriv/quill-icons';\n\nconst PayoutPerPointInput = ({\n    payoutOptions,\n    onPayoutClick,\n    selectedBarrier,\n    defaultPayout,\n    currency,\n    tooltipText,\n}: {\n    payoutOptions: string[];\n    onPayoutClick: (option: string) => void;\n    selectedBarrier: string;\n    defaultPayout: string;\n    currency: string;\n    tooltipText?: React.ReactNode;\n}) => {\n    const { is_desktop } = useDevice();\n    const turbos_payout_message = (\n        <Localize i18n_default_text='The amount you choose to receive at expiry for every point of change between the final price and the barrier.' />\n    );\n    if (!is_desktop) {\n        return null;\n    }\n    return (\n        <Fieldset\n            className='trade-container__fieldset payout-per-point-input'\n            header={<Localize i18n_default_text='Payout per Point' />}\n            header_tooltip={turbos_payout_message}\n            popover_wrapper_class='popover_wrapper_class'\n        >\n            <WheelPicker\n                options={payoutOptions}\n                defaultValue={defaultPayout}\n                onClick={onPayoutClick}\n                currency={currency}\n            />\n            <Fieldset className='actions-wrapper'>\n                <Text size='xxxs' line_height='l' color='default' align='center' as='p'>\n                    <Localize i18n_default_text='Barrier' />\n                </Text>\n                <Popover\n                    alignment='left'\n                    className='popover-icon'\n                    is_bubble_hover_enabled\n                    margin={206}\n                    disable_target_icon\n                    icon='info'\n                    zIndex='9999'\n                    message={tooltipText}\n                >\n                    <div className='distance-to-current-spot'>\n                        <Text\n                            size='xxxs'\n                            line_height='l'\n                            color='default'\n                            align='center'\n                            as='p'\n                            className='barrier-value'\n                        >\n                            {selectedBarrier}\n                            {Number(selectedBarrier) < 0 ? (\n                                <LabelPairedChevronsDownCaptionRegularIcon\n                                    width={12}\n                                    height={12}\n                                    stroke='var(--text-prominent)'\n                                    className='indicator-icon'\n                                />\n                            ) : (\n                                <LabelPairedChevronsUpCaptionRegularIcon\n                                    width={12}\n                                    height={12}\n                                    stroke='var(--text-prominent)'\n                                    className='indicator-icon'\n                                />\n                            )}\n                        </Text>\n                    </div>\n                </Popover>\n            </Fieldset>\n        </Fieldset>\n    );\n};\n\nexport default PayoutPerPointInput;\n","import React from 'react';\nimport { Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport { observer } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { useDevice } from '@deriv-com/ui';\nimport PayoutPerPointInput from 'Modules/Trading/Components/Elements/PayoutPerPoint/payout-per-point-input';\nimport { LabelPairedChevronsDownCaptionRegularIcon, LabelPairedChevronsUpCaptionRegularIcon } from '@deriv/quill-icons';\nimport './payout-selector.scss';\n\nconst PayoutSelector = observer(() => {\n    const { barrier_1, payout_choices, setPayoutPerPoint, togglePayoutWheelPicker, payout_per_point, currency } =\n        useTraderStore();\n    const { isMobile } = useDevice();\n\n    const header_tooltip_text = (\n        <div className='trade-container__barriers-tooltip'>\n            <Localize i18n_default_text='You will receive a payout at expiry if the spot price never breaches the barrier throughout the contract duration. Otherwise, your contract will be terminated early.' />\n        </div>\n    );\n    if (isMobile) {\n        return (\n            <button role='button' className='mobile-widget payout-selector' onClick={togglePayoutWheelPicker}>\n                <Text size='xs' color='prominent' align='center' className='payout-field'>\n                    {barrier_1}\n                    {Number(barrier_1) < 0 ? (\n                        <LabelPairedChevronsDownCaptionRegularIcon\n                            className='indicator-icon'\n                            stroke='var(--text-prominent)'\n                        />\n                    ) : (\n                        <LabelPairedChevronsUpCaptionRegularIcon\n                            className='indicator-icon'\n                            stroke='var(--text-prominent)'\n                        />\n                    )}\n                </Text>\n                <Text size='xs' className='payout-value' color='prominent' align='center' weight='bold'>\n                    {payout_per_point} {currency}\n                </Text>\n                <Text size='xs' color='less-prominent' align='center'>\n                    <Localize i18n_default_text='Payout per point' />\n                </Text>\n            </button>\n        );\n    }\n\n    return (\n        <PayoutPerPointInput\n            currency={currency}\n            defaultPayout={payout_per_point}\n            payoutOptions={payout_choices}\n            onPayoutClick={value => setPayoutPerPoint(value)}\n            tooltipText={header_tooltip_text}\n            selectedBarrier={barrier_1}\n        />\n    );\n});\n\nexport default PayoutSelector;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { DesktopWrapper, Icon, InputField, MobileWrapper, Modal, Text } from '@deriv/components';\nimport Fieldset from 'App/Components/Form/fieldset';\nimport ValueMovement from '../Purchase/value-movement';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { localize } from '@deriv/translations';\nimport LabeledQuantityInputMobile from '../LabeledQuantityInputMobile';\n\ntype TBarrier = {\n    is_minimized?: boolean;\n    is_absolute_only?: boolean;\n};\n\nconst Barrier = observer(({ is_minimized, is_absolute_only }: TBarrier) => {\n    const { ui } = useStore();\n    const { current_focus, setCurrentFocus } = ui;\n    const {\n        barrier_1,\n        barrier_2,\n        barrier_count,\n        barrier_pipsize,\n        duration_unit,\n        onChange,\n        validation_errors,\n        proposal_info,\n        trade_types,\n    } = useTraderStore();\n    const [show_modal, setShowModal] = React.useState(false);\n    const type_with_current_spot = Object.keys(trade_types).find(type => proposal_info?.[type]?.spot);\n    let contract_info;\n    if (type_with_current_spot) contract_info = proposal_info?.[type_with_current_spot];\n    const current_spot = contract_info?.spot || '';\n    const current_barrier_price = contract_info?.barrier || '';\n    const barrier_title = barrier_count === 1 ? localize('Barrier') : localize('Barriers');\n    const has_error_or_not_loaded = contract_info?.has_error || !contract_info?.id;\n\n    if (is_minimized) {\n        return barrier_count !== 2 ? (\n            <div className='fieldset-minimized fieldset-minimized__barrier1'>{barrier_1}</div>\n        ) : (\n            <React.Fragment>\n                <div className='fieldset-minimized fieldset-minimized__barrier1'>{barrier_1}</div>\n                <div className='fieldset-minimized fieldset-minimized__barrier2'>{barrier_2}</div>\n            </React.Fragment>\n        );\n    }\n\n    const input_class = barrier_count === 2 ? 'multiple' : 'single';\n    const is_day_duration = duration_unit === 'd';\n    // TODO: Some contracts yet to be implemented in app.deriv.com allow only absolute barrier, hence the prop\n    const is_absolute_barrier = is_day_duration || is_absolute_only;\n\n    const format = (value: string) => {\n        const float_value = parseFloat(value);\n        let final_value;\n        if (Math.sign(float_value) === -1) {\n            final_value = float_value.toFixed(barrier_pipsize).toString();\n        } else {\n            final_value = `+${float_value.toFixed(barrier_pipsize)}`;\n        }\n        return final_value;\n    };\n\n    const onClick = () => {\n        setShowModal(!show_modal);\n    };\n\n    return (\n        <React.Fragment>\n            <DesktopWrapper>\n                <Fieldset\n                    className='trade-container__fieldset trade-container__barriers'\n                    header={barrier_title}\n                    is_center\n                >\n                    <div>\n                        <InputField\n                            id='dt_barrier_1_input'\n                            type='number'\n                            name='barrier_1'\n                            value={barrier_1}\n                            className={`trade-container__barriers-${input_class}`}\n                            classNameInput={classNames(\n                                'trade-container__input',\n                                'trade-container__barriers-input',\n                                `trade-container__barriers-${input_class}-input`\n                            )}\n                            current_focus={current_focus}\n                            onChange={onChange}\n                            error_messages={validation_errors?.barrier_1 || []}\n                            is_float\n                            is_signed\n                            setCurrentFocus={setCurrentFocus}\n                        />\n\n                        {barrier_count === 2 && (\n                            <React.Fragment>\n                                <InputField\n                                    id='dt_barrier_2_input'\n                                    type='number'\n                                    name='barrier_2'\n                                    value={barrier_2}\n                                    className='multiple'\n                                    classNameInput='trade-container__input'\n                                    current_focus={current_focus}\n                                    onChange={onChange}\n                                    error_messages={validation_errors?.barrier_2}\n                                    is_float\n                                    is_signed\n                                    setCurrentFocus={setCurrentFocus}\n                                />\n                                <Icon icon='IcArrowUp' className='trade-container__barriers--up' />\n                                <Icon icon='IcArrowDown' className='trade-container__barriers--down' />\n                            </React.Fragment>\n                        )}\n                    </div>\n                </Fieldset>\n            </DesktopWrapper>\n            <MobileWrapper>\n                <Modal\n                    id='dt_input_barrier_mobile'\n                    className='barrier'\n                    is_open={show_modal}\n                    should_header_stick_body\n                    toggleModal={onClick}\n                    height='auto'\n                    width='calc(100vw - 32px)'\n                    title={localize('Barrier')}\n                >\n                    <div className='barrier__modal-container'>\n                        <Text className='barrier__modal-text' as='span' color='less-prominent' size='xs'>\n                            {localize('Current Price')}\n                        </Text>\n                        {current_spot && (\n                            <ValueMovement\n                                has_error_or_not_loaded={has_error_or_not_loaded}\n                                value={current_spot}\n                                show_currency={false}\n                            />\n                        )}\n                    </div>\n                    <LabeledQuantityInputMobile\n                        id='dt_barrier_input'\n                        input_label={localize('Barrier')}\n                        type='number'\n                        name={barrier_count === 1 ? 'barrier_1' : 'barrier_2'}\n                        wrapper_classname='barrier__modal-input'\n                        value={barrier_count === 1 ? barrier_1 : barrier_2}\n                        className={`barrier__fields-${input_class}`}\n                        classNameInput={classNames(\n                            'barrier__fields-input',\n                            'barrier__fields-barriers-input',\n                            `barrier__fields-barriers-${input_class}-input`\n                        )}\n                        current_focus={current_focus}\n                        onChange={onChange}\n                        error_messages={\n                            (barrier_count === 1 ? validation_errors?.barrier_1 : validation_errors?.barrier_2) || []\n                        }\n                        error_message_alignment='top'\n                        is_float\n                        is_signed\n                        setCurrentFocus={setCurrentFocus}\n                    />\n                    <Text className='barrier__modal-price' as='div' color='less-prominent' size='xs'>\n                        {localize('Barrier Price:')} {current_barrier_price}\n                    </Text>\n                </Modal>\n                <LabeledQuantityInputMobile\n                    input_label={barrier_count === 2 ? localize('Barrier 1') : localize('Barrier')}\n                    id='dt_barrier_1_input'\n                    type='number'\n                    name='barrier_1'\n                    value={barrier_1}\n                    is_incrementable={!is_absolute_barrier}\n                    is_incrementable_on_long_press={!is_absolute_barrier}\n                    is_negative_disabled={is_absolute_barrier}\n                    className={`barrier__fields-${input_class}`}\n                    classNameInput={classNames(\n                        'barrier__fields-input',\n                        'barrier__fields-barriers-input',\n                        `barrier__fields-barriers-${input_class}-input`\n                    )}\n                    format={format as React.ComponentProps<typeof LabeledQuantityInputMobile>['format']}\n                    onChange={onChange}\n                    onClick={onClick}\n                    is_float\n                    is_signed\n                    setCurrentFocus={setCurrentFocus}\n                    is_read_only\n                />\n                {barrier_count === 2 && (\n                    <LabeledQuantityInputMobile\n                        input_label={localize('Barrier 2')}\n                        id='dt_barrier_2_input'\n                        type='number'\n                        name='barrier_2'\n                        value={barrier_2}\n                        is_incrementable={!is_absolute_barrier}\n                        is_incrementable_on_long_press={!is_absolute_barrier}\n                        is_negative_disabled={is_absolute_barrier}\n                        className={`barrier__fields-${input_class}`}\n                        classNameInput={classNames(\n                            'barrier__fields-input',\n                            'barrier__fields-barriers-input',\n                            `barrier__fields-barriers-${input_class}-input`\n                        )}\n                        format={format as React.ComponentProps<typeof LabeledQuantityInputMobile>['format']}\n                        onChange={onChange}\n                        onClick={onClick}\n                        is_float\n                        is_signed\n                        setCurrentFocus={setCurrentFocus}\n                        is_read_only\n                    />\n                )}\n            </MobileWrapper>\n        </React.Fragment>\n    );\n});\n\nexport default Barrier;\n","import React from 'react';\nimport { isDesktop } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport NumberSelector from 'App/Components/Form/number-selector';\nimport Fieldset from 'App/Components/Form/fieldset';\nimport { observer } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\ntype TLastDigit = {\n    is_minimized?: boolean;\n};\n\nconst LastDigit = observer(({ is_minimized }: TLastDigit) => {\n    const { onChange, last_digit } = useTraderStore();\n    if (is_minimized) {\n        return <div className='fieldset-minimized'>{`${localize('Last Digit')}: ${last_digit}`}</div>;\n    }\n    const arr_five = [...Array(5).keys()];\n    return (\n        <Fieldset\n            className='trade-container__fieldset'\n            header={isDesktop() ? localize('Last Digit Prediction') : null}\n            is_center\n        >\n            <NumberSelector\n                arr_arr_numbers={[arr_five, arr_five.map(i => i + 5)]}\n                name='last_digit'\n                onChange={onChange}\n                selected_number={+last_digit}\n            />\n        </Fieldset>\n    );\n});\n\nexport default LastDigit;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Money, Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport { observer, useStore } from '@deriv/stores';\n\ntype TMinMaxStakeInfo = {\n    className?: string;\n    min_stake?: number;\n    max_stake?: number;\n    currency?: string;\n};\n\nconst MinMaxStakeInfo = observer(({ className, currency, max_stake, min_stake }: TMinMaxStakeInfo) => {\n    const {\n        ui: { is_mobile },\n    } = useStore();\n    return (\n        <section className={classNames('trade-container__stake-field', className)}>\n            {!isNaN(Number(min_stake)) &&\n                !isNaN(Number(max_stake)) &&\n                ['Min', 'Max'].map(text => (\n                    <Text\n                        key={text}\n                        as='p'\n                        line_height='s'\n                        size={is_mobile ? 'xxs' : 'xxxs'}\n                        className={`trade-container__stake-field--${text.toLowerCase()}`}\n                    >\n                        <Localize\n                            i18n_default_text='{{text}}. stake<0/>'\n                            values={{ text }}\n                            components={[\n                                <Money\n                                    key={0}\n                                    amount={text === 'Min' ? min_stake : max_stake}\n                                    currency={currency}\n                                    show_currency\n                                />,\n                            ]}\n                        />\n                    </Text>\n                ))}\n        </section>\n    );\n});\n\nexport default MinMaxStakeInfo;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Text, ThemedScrollbars } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\n\nexport type TBarriersListBody = {\n    barriers_list: string[];\n    className?: string;\n    onClick: (barrier: string) => void;\n    onHover?: (barrier: string) => void;\n    selected_item: string;\n    subheader?: string;\n};\n\nconst BarriersListBody = observer(\n    ({ barriers_list, className, onClick, onHover, selected_item, subheader }: TBarriersListBody) => {\n        const {\n            ui: { is_mobile },\n        } = useStore();\n        const onMouseEnter = (barrier: string) => {\n            if (selected_item !== barrier && typeof onHover === 'function') {\n                onHover(barrier);\n            }\n        };\n        return (\n            <React.Fragment>\n                {subheader && (\n                    <Text\n                        size={is_mobile ? 's' : 'xxs'}\n                        color='disabled'\n                        line_height='l'\n                        as='p'\n                        className={`${className}__text`}\n                    >\n                        {subheader}\n                    </Text>\n                )}\n                <ThemedScrollbars autohide={false}>\n                    <ul className={`${className}__list`}>\n                        {barriers_list.map(barrier => (\n                            <Text\n                                color='prominent'\n                                line_height={is_mobile ? 'xl' : 'l'}\n                                size={is_mobile ? 'xs' : 'xxs'}\n                                as='li'\n                                key={barrier}\n                                id={barrier}\n                                data-testid={barrier}\n                                className={classNames(`${className}__item`, {\n                                    [`${className}__item--selected`]: selected_item === barrier,\n                                })}\n                                onClick={() => onClick(barrier)}\n                                onMouseEnter={() => onMouseEnter(barrier)}\n                                onMouseLeave={() => typeof onHover === 'function' && onHover('')}\n                            >\n                                {barrier}\n                            </Text>\n                        ))}\n                    </ul>\n                </ThemedScrollbars>\n            </React.Fragment>\n        );\n    }\n);\n\nexport default React.memo(BarriersListBody);\n","import React from 'react';\nimport classNames from 'classnames';\nimport { DesktopWrapper, MobileWrapper, Text, Icon } from '@deriv/components';\nimport { CSSTransition } from 'react-transition-group';\nimport Fieldset from 'App/Components/Form/fieldset';\nimport BarriersListBody, { TBarriersListBody } from './barriers-list-body';\n\ntype TBarriersList = TBarriersListBody & {\n    header: string | React.ReactNode;\n    onClickCross: () => void;\n    show_table: boolean;\n};\n\nconst BarriersList = ({ className, header, onClickCross, show_table, ...props }: TBarriersList) => (\n    <React.Fragment>\n        <DesktopWrapper>\n            <CSSTransition\n                appear\n                in={show_table}\n                timeout={250}\n                classNames={{\n                    appear: `${className}--enter`,\n                    enter: `${className}--enter`,\n                    enterDone: `${className}--enter-done`,\n                    exit: `${className}--exit`,\n                }}\n                unmountOnExit\n            >\n                <Fieldset className={classNames('trade-container__fieldset', className)}>\n                    <div className={`${className}__header`}>\n                        <Text color='prominent' weight='bold' size='xs'>\n                            {header}\n                        </Text>\n                        <div className={`${className}__icon-close`} onClick={onClickCross}>\n                            <Icon icon='IcCross' data_testid={`dt_${className}__icon_close`} />\n                        </div>\n                    </div>\n                    <BarriersListBody className={className} {...props} />\n                </Fieldset>\n            </CSSTransition>\n        </DesktopWrapper>\n        <MobileWrapper>\n            <BarriersListBody className={className} {...props} />\n        </MobileWrapper>\n    </React.Fragment>\n);\n\nexport default React.memo(BarriersList);\n","import React from 'react';\nimport { Localize, localize } from '@deriv/translations';\nimport { Div100vhContainer, Modal, Popover, RadioGroup } from '@deriv/components';\nimport { TRADE_TYPES } from '@deriv/shared';\nimport classNames from 'classnames';\n\ntype TStrikeParamModalProps = {\n    contract_type: string;\n    is_open: boolean;\n    name: string;\n    onChange: (event: React.ChangeEvent<HTMLInputElement>) => void;\n    strike: string;\n    strike_price_list: { text: string; value: string }[];\n    toggleModal: () => void;\n};\n\nconst StrikeParamModal = ({\n    contract_type,\n    is_open,\n    toggleModal,\n    strike,\n    onChange,\n    name,\n    strike_price_list,\n}: TStrikeParamModalProps) => {\n    return (\n        <Modal\n            className='trade-params dc-modal-header--title-bar'\n            is_open={is_open}\n            should_header_stick_body={false}\n            is_title_centered\n            toggleModal={toggleModal}\n            height='auto'\n            width='calc(100vw - 32px)'\n            title={localize('Strike')}\n        >\n            <Div100vhContainer className='mobile-widget-dialog__wrapper' max_autoheight_offset='48px'>\n                <div className='trade-params__vanilla-ic-info-wrapper'>\n                    <Popover\n                        alignment='bottom'\n                        icon='info'\n                        id='dt_vanilla-stake__tooltip'\n                        zIndex='9999'\n                        is_bubble_hover_enabled\n                        message={\n                            <Localize\n                                i18n_default_text='If you buy a \"<0>{{trade_type}}</0>\" option, you receive a payout at expiry if the final price is {{payout_status}} the strike price. Otherwise, your “<0>{{trade_type}}</0>” option will expire worthless.'\n                                components={[<strong key={0} />]}\n                                values={{\n                                    trade_type:\n                                        contract_type === TRADE_TYPES.VANILLA.CALL ? localize('Call') : localize('Put'),\n                                    payout_status:\n                                        contract_type === TRADE_TYPES.VANILLA.CALL\n                                            ? localize('above')\n                                            : localize('below'),\n                                }}\n                            />\n                        }\n                        classNameBubble='trade-params--modal-wrapper__content'\n                    />\n                </div>\n                <div className={classNames('trade-params__amount-keypad', 'trade-params--mobile-strike')}>\n                    <RadioGroup\n                        name={name}\n                        className='trade-params__amount--mobile'\n                        onToggle={onChange}\n                        selected={strike}\n                    >\n                        {strike_price_list.map(item => (\n                            <RadioGroup.Item key={item.value} value={String(item.value)} label={item.value} />\n                        ))}\n                    </RadioGroup>\n                </div>\n            </Div100vhContainer>\n        </Modal>\n    );\n};\n\nexport default StrikeParamModal;\n","import React from 'react';\nimport classNames from 'classnames';\nimport BarriersList from './barriers-list';\nimport { InputField, Dropdown, Text } from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\nimport { clickAndKeyEventHandler, toMoment, TRADE_TYPES } from '@deriv/shared';\nimport Fieldset from 'App/Components/Form/fieldset';\nimport StrikeParamModal from 'Modules/Trading/Containers/strike-param-modal';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { useDevice } from '@deriv-com/ui';\n\nconst Strike = observer(() => {\n    const { ui, common } = useStore();\n    const {\n        barrier_1,\n        contract_type,\n        barrier_choices: strike_price_choices,\n        duration_unit,\n        onChange,\n        validation_errors,\n        expiry_type,\n        expiry_date,\n    } = useTraderStore();\n    const { current_focus, setCurrentFocus, advanced_duration_unit } = ui;\n    const { server_time } = common;\n\n    const [is_open, setIsOpen] = React.useState(false);\n    const [should_open_dropdown, setShouldOpenDropdown] = React.useState(false);\n    const [selected_value, setSelectedValue] = React.useState(barrier_1);\n    const { isMobile } = useDevice();\n\n    React.useEffect(() => {\n        setSelectedValue(barrier_1);\n    }, [barrier_1]);\n\n    const toggleWidget = (e?: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>) => {\n        clickAndKeyEventHandler(() => setIsOpen(!is_open), e);\n    };\n\n    const is_24_hours_contract = expiry_date ? toMoment(expiry_date).isSame(toMoment(server_time), 'day') : false;\n\n    const is_relative_strike_applicable =\n        expiry_type === 'endtime' ? is_24_hours_contract : advanced_duration_unit !== 'd';\n\n    const strike_price_list = strike_price_choices.map((strike_price: string) => ({\n        text: strike_price,\n        value: strike_price,\n    }));\n\n    const should_show_spot = duration_unit !== 'd';\n\n    if (isMobile) {\n        return (\n            <div className='mobile-widget__wrapper'>\n                <div className='strike-widget' onClick={toggleWidget} onKeyDown={toggleWidget}>\n                    {should_show_spot && (\n                        <div className='mobile-widget__spot'>\n                            <Text size='xs'>\n                                <Localize i18n_default_text='Spot' />\n                            </Text>\n                        </div>\n                    )}\n                    <div className='mobile-widget__amount'>{barrier_1}</div>\n                    <div className='mobile-widget__type'>\n                        <Localize i18n_default_text='Strike price' />\n                    </div>\n                </div>\n                <StrikeParamModal\n                    contract_type={contract_type}\n                    is_open={is_open}\n                    toggleModal={toggleWidget}\n                    strike={barrier_1}\n                    onChange={onChange}\n                    name='barrier_1'\n                    strike_price_list={strike_price_list}\n                />\n            </div>\n        );\n    }\n\n    return (\n        <React.Fragment>\n            <Fieldset\n                className='trade-container__fieldset trade-container__barriers'\n                header={<Localize i18n_default_text='Strike price' />}\n                header_tooltip={\n                    <Localize\n                        i18n_default_text='If you buy a \"<0>{{trade_type}}</0>\" option, you receive a payout at expiry if the final price is {{payout_status}} the strike price. Otherwise, your “<0>{{trade_type}}</0>” option will expire worthless.'\n                        components={[<strong key={0} />]}\n                        values={{\n                            trade_type: contract_type === TRADE_TYPES.VANILLA.CALL ? localize('Call') : localize('Put'),\n                            payout_status:\n                                contract_type === TRADE_TYPES.VANILLA.CALL ? localize('above') : localize('below'),\n                        }}\n                    />\n                }\n            >\n                {!is_relative_strike_applicable ? (\n                    <InputField\n                        type='number'\n                        name='barrier_1'\n                        data_testid='dt_strike_input'\n                        value={selected_value}\n                        className='trade-container__barriers-single'\n                        classNameInput={classNames(\n                            'trade-container__input',\n                            'trade-container__barriers-input',\n                            'trade-container__barriers-single-input'\n                        )}\n                        current_focus={current_focus}\n                        error_messages={validation_errors?.barrier_1 || []}\n                        is_float\n                        is_signed\n                        is_read_only\n                        setCurrentFocus={setCurrentFocus}\n                        onClick={() => setShouldOpenDropdown(true)}\n                    />\n                ) : (\n                    <div className='trade-container__strike-field'>\n                        <Text size='s' className='strike-field--text'>\n                            <Localize i18n_default_text='Spot' />\n                        </Text>\n                        <Dropdown\n                            classNameDisplay='dc-dropdown__display--duration'\n                            disabled={false}\n                            id='strike'\n                            is_alignment_left\n                            is_nativepicker={false}\n                            list={strike_price_list}\n                            name='barrier_1'\n                            no_border={true}\n                            onChange={onChange}\n                            value={barrier_1}\n                        />\n                    </div>\n                )}\n            </Fieldset>\n            {should_open_dropdown && (\n                <BarriersList\n                    className='trade-container__barriers-table'\n                    header={<Localize i18n_default_text='Strike Prices' />}\n                    barriers_list={strike_price_choices}\n                    selected_item={selected_value}\n                    show_table={should_open_dropdown}\n                    onClick={(strike: string) => {\n                        setSelectedValue(strike);\n                        setShouldOpenDropdown(false);\n                        onChange({ target: { name: 'barrier_1', value: strike } });\n                    }}\n                    onClickCross={() => setShouldOpenDropdown(false)}\n                />\n            )}\n        </React.Fragment>\n    );\n});\n\nexport default Strike;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { ButtonToggle } from '@deriv/components';\nimport { isTurbosContract, isVanillaContract, TRADE_TYPES } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport { observer } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\ntype TTradeTypeTabs = {\n    className?: string;\n};\n\nconst TradeTypeTabs = observer(({ className }: TTradeTypeTabs) => {\n    const { onChange, contract_type } = useTraderStore();\n\n    const is_turbos = isTurbosContract(contract_type);\n    const is_vanilla = isVanillaContract(contract_type);\n    const tab_list = [\n        { text: localize('Up'), value: TRADE_TYPES.TURBOS.LONG, is_displayed: is_turbos },\n        { text: localize('Down'), value: TRADE_TYPES.TURBOS.SHORT, is_displayed: is_turbos },\n        { text: localize('Call'), value: TRADE_TYPES.VANILLA.CALL, is_displayed: is_vanilla },\n        { text: localize('Put'), value: TRADE_TYPES.VANILLA.PUT, is_displayed: is_vanilla },\n    ];\n\n    if (!is_turbos && !is_vanilla) return null;\n\n    return (\n        <div className={classNames('trade-container__trade', 'trade-container__trade-type-tabs', className)}>\n            <ButtonToggle\n                id='dt_advanced_duration_toggle'\n                buttons_arr={tab_list.filter(({ is_displayed }) => is_displayed)}\n                name='contract_type'\n                className='trade-container__trade-type-tabs--button'\n                is_animated\n                onChange={onChange}\n                value={tab_list.find(({ value }) => value === contract_type)?.value ?? ''}\n            />\n        </div>\n    );\n});\n\nexport default TradeTypeTabs;\n","import React from 'react';\nimport { Localize } from '@deriv/translations';\nimport { Text } from '@deriv/components';\n\nconst AccumulatorTradeDescription = ({\n    onClick,\n}: {\n    onClick: (e?: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>) => void;\n}) => {\n    const content = [\n        <Localize\n            i18n_default_text='Accumulators allow you to express a view on the range of movement of an index and grow your stake exponentially at a fixed <0>growth rate</0>.'\n            components={[\n                <span\n                    className='contract-type-info__content-definition'\n                    onClick={onClick}\n                    onKeyDown={onClick}\n                    key={0}\n                />,\n            ]}\n            key='1'\n        />,\n        <Localize\n            i18n_default_text='Your <0>payout</0> is the sum of your initial stake and profit.'\n            components={[\n                <span\n                    className='contract-type-info__content-definition'\n                    onClick={onClick}\n                    onKeyDown={onClick}\n                    key={0}\n                />,\n            ]}\n            key='2'\n        />,\n        <Localize\n            i18n_default_text='Your payout will continue to grow as long as the current spot price remains within a specified <0>range</0> from the <0>previous spot price</0>. Otherwise, you lose your stake and the trade is terminated.'\n            components={[\n                <span\n                    className='contract-type-info__content-definition'\n                    onClick={onClick}\n                    onKeyDown={onClick}\n                    key={0}\n                />,\n            ]}\n            key='3'\n        />,\n        <Localize\n            i18n_default_text='<0>Take profit</0> is an additional feature that lets you manage your risk by automatically closing the trade when your profit reaches the target amount. This feature is unavailable for ongoing accumulator contracts.'\n            components={[\n                <span\n                    className='contract-type-info__content-definition'\n                    onClick={onClick}\n                    onKeyDown={onClick}\n                    key={0}\n                />,\n            ]}\n            key='4'\n        />,\n        <Localize\n            i18n_default_text='You can close your trade anytime. However, be aware of <0>slippage risk</0>.'\n            components={[\n                <span\n                    className='contract-type-info__content-definition'\n                    onClick={onClick}\n                    onKeyDown={onClick}\n                    key={0}\n                />,\n            ]}\n            key='5'\n        />,\n    ];\n    return (\n        <React.Fragment>\n            {content.map(paragraph => (\n                <Text as='p' key={paragraph.props.i18n_default_text}>\n                    {paragraph}\n                </Text>\n            ))}\n        </React.Fragment>\n    );\n};\n\nexport default AccumulatorTradeDescription;\n","import React from 'react';\nimport { Localize } from '@deriv/translations';\nimport { Text } from '@deriv/components';\n\nconst AsianTradeDescription = () => {\n    const content = [\n        <Localize\n            i18n_default_text='Asian options settle by comparing the last tick with the average spot over the period.'\n            key='1'\n        />,\n        <Localize\n            i18n_default_text='If you select \"Asian Rise\", you will win the payout if the last tick is higher than the average of the ticks.'\n            key='2'\n        />,\n        <Localize\n            i18n_default_text='If you select \"Asian Fall\", you will win the payout if the last tick is lower than the average of the ticks.'\n            key='3'\n        />,\n        <Localize\n            i18n_default_text=\"If the last tick is equal to the average of the ticks, you don't win the payout.\"\n            key='4'\n        />,\n    ];\n    return (\n        <React.Fragment>\n            {content.map(paragraph => (\n                <Text as='p' key={paragraph.props.i18n_default_text}>\n                    {paragraph}\n                </Text>\n            ))}\n        </React.Fragment>\n    );\n};\n\nexport default AsianTradeDescription;\n","import React from 'react';\nimport { Localize } from '@deriv/translations';\nimport { Text } from '@deriv/components';\n\nconst CallPutSpreadTradeDescription = () => {\n    const content = [\n        { type: 'heading', text: <Localize i18n_default_text={'Spread Up'} /> },\n        {\n            type: 'paragraph',\n            text: (\n                <Localize i18n_default_text='Win maximum payout if the exit spot is higher than or equal to the upper barrier.' />\n            ),\n        },\n        {\n            type: 'paragraph',\n            text: (\n                <Localize i18n_default_text='Win up to maximum payout if exit spot is between lower and upper barrier, in proportion to the difference between exit spot and lower barrier.' />\n            ),\n        },\n        {\n            type: 'paragraph',\n            text: <Localize i18n_default_text='No payout if exit spot is below or equal to the lower barrier.' />,\n        },\n        { type: 'heading', text: <Localize i18n_default_text='Spread Down' /> },\n        {\n            type: 'paragraph',\n            text: (\n                <Localize i18n_default_text='Win maximum payout if the exit spot is lower than or equal to the lower barrier.' />\n            ),\n        },\n        {\n            type: 'paragraph',\n            text: (\n                <Localize i18n_default_text='Win up to maximum payout if exit spot is between lower and upper barrier, in proportion to the difference between upper barrier and exit spot.' />\n            ),\n        },\n        {\n            type: 'paragraph',\n            text: <Localize i18n_default_text='No payout if exit spot is above or equal to the upper barrier.' />,\n        },\n    ];\n\n    return (\n        <React.Fragment>\n            {content.map(({ type, text }) =>\n                type === 'heading' ? (\n                    <Text as='h2' key={text.props.i18n_default_text} weight='bold' size='xs'>\n                        {text}\n                    </Text>\n                ) : (\n                    <Text as='p' key={text.props.i18n_default_text}>\n                        {text}\n                    </Text>\n                )\n            )}\n        </React.Fragment>\n    );\n};\n\nexport default CallPutSpreadTradeDescription;\n","import React from 'react';\nimport { Localize } from '@deriv/translations';\nimport { Text } from '@deriv/components';\n\nconst EndTradeDescription = () => {\n    const content = [\n        <Localize\n            i18n_default_text='If you select \"Ends Between\", you win the payout if the exit spot is strictly higher than the Low barrier AND strictly lower than the High barrier.'\n            key='1'\n        />,\n        <Localize\n            i18n_default_text='If you select \"Ends Outside\", you win the payout if the exit spot is EITHER strictly higher than the High barrier, OR strictly lower than the Low barrier.'\n            key='2'\n        />,\n        <Localize\n            i18n_default_text=\"If the exit spot is equal to either the Low barrier or the High barrier, you don't win the payout.\"\n            key='3'\n        />,\n    ];\n    return (\n        <React.Fragment>\n            {content.map(paragraph => (\n                <Text as='p' key={paragraph.props.i18n_default_text}>\n                    {paragraph}\n                </Text>\n            ))}\n        </React.Fragment>\n    );\n};\n\nexport default EndTradeDescription;\n","import React from 'react';\nimport { Localize } from '@deriv/translations';\nimport { Text } from '@deriv/components';\n\nconst EvenOddTradeDescription = () => {\n    const content = [\n        <Localize\n            i18n_default_text='If you select \"Even\", you will win the payout if the last digit of the last tick is an even number (i.e., 2, 4, 6, 8, or 0).'\n            key='1'\n        />,\n        <Localize\n            i18n_default_text='If you select \"Odd\", you will win the payout if the last digit of the last tick is an odd number (i.e., 1, 3, 5, 7, or 9).'\n            key='2'\n        />,\n    ];\n    return (\n        <React.Fragment>\n            {content.map(paragraph => (\n                <Text as='p' key={paragraph.props.i18n_default_text}>\n                    {paragraph}\n                </Text>\n            ))}\n        </React.Fragment>\n    );\n};\n\nexport default EvenOddTradeDescription;\n","import React from 'react';\nimport { Localize } from '@deriv/translations';\nimport { Text } from '@deriv/components';\n\nconst HighLowTradeDescription = () => {\n    const content = [\n        <Localize\n            i18n_default_text='If you select \"Higher\", you win the payout if the exit spot is strictly higher than the barrier.'\n            key='1'\n        />,\n        <Localize\n            i18n_default_text='If you select \"Lower\", you win the payout if the exit spot is strictly lower than the barrier.'\n            key='2'\n        />,\n        <Localize i18n_default_text=\"If the exit spot is equal to the barrier, you don't win the payout.\" key='3' />,\n    ];\n    return (\n        <React.Fragment>\n            {content.map(paragraph => (\n                <Text as='p' key={paragraph.props.i18n_default_text}>\n                    {paragraph}\n                </Text>\n            ))}\n        </React.Fragment>\n    );\n};\n\nexport default HighLowTradeDescription;\n","import React from 'react';\nimport { Localize } from '@deriv/translations';\nimport { Text } from '@deriv/components';\n\nconst LbHighLowTradeDescription = () => {\n    const content = [\n        <Localize\n            i18n_default_text='By purchasing the \"High-to-Low\" contract, you\\&apos;ll win the multiplier times the difference between the high and low over the duration of the contract.'\n            key='1'\n        />,\n        <Localize\n            i18n_default_text='The high is the highest point ever reached by the market during the contract period.'\n            key='2'\n        />,\n        <Localize\n            i18n_default_text='The low is the lowest point ever reached by the market during the contract period.'\n            key='3'\n        />,\n        <Localize\n            i18n_default_text='The close is the latest tick at or before the end time. If you selected a specific end time, the end time is the selected time.'\n            key='4'\n        />,\n    ];\n    return (\n        <React.Fragment>\n            {content.map(paragraph => (\n                <Text as='p' key={paragraph.props.i18n_default_text}>\n                    {paragraph}\n                </Text>\n            ))}\n        </React.Fragment>\n    );\n};\n\nexport default LbHighLowTradeDescription;\n","import React from 'react';\nimport { Localize } from '@deriv/translations';\nimport { Text } from '@deriv/components';\n\nconst LbPutTradeDescription = () => {\n    const content = [\n        <Localize\n            i18n_default_text='By purchasing the \"High-to-Close\" contract, you\\&apos;ll win the multiplier times the difference between the high and close over the duration of the contract.'\n            key='1'\n        />,\n        <Localize\n            i18n_default_text='The high is the highest point ever reached by the market during the contract period.'\n            key='2'\n        />,\n        <Localize\n            i18n_default_text='The low is the lowest point ever reached by the market during the contract period.'\n            key='3'\n        />,\n        <Localize\n            i18n_default_text='The close is the latest tick at or before the end time. If you selected a specific end time, the end time is the selected time.'\n            key='4'\n        />,\n    ];\n    return (\n        <React.Fragment>\n            {content.map(paragraph => (\n                <Text as='p' key={paragraph.props.i18n_default_text}>\n                    {paragraph}\n                </Text>\n            ))}\n        </React.Fragment>\n    );\n};\n\nexport default LbPutTradeDescription;\n","import React from 'react';\nimport { Localize } from '@deriv/translations';\nimport { Text } from '@deriv/components';\n\nconst LbCallTradeDescription = () => {\n    const content = [\n        <Localize\n            i18n_default_text='By purchasing the \"Close-to-Low\" contract, you\\&apos;ll win the multiplier times the difference between the close and low over the duration of the contract.'\n            key='1'\n        />,\n        <Localize\n            i18n_default_text='The high is the highest point ever reached by the market during the contract period.'\n            key='2'\n        />,\n        <Localize\n            i18n_default_text='The low is the lowest point ever reached by the market during the contract period.'\n            key='3'\n        />,\n        <Localize\n            i18n_default_text='The close is the latest tick at or before the end time. If you selected a specific end time, the end time is the selected time.'\n            key='4'\n        />,\n    ];\n    return (\n        <React.Fragment>\n            {content.map(paragraph => (\n                <Text as='p' key={paragraph.props.i18n_default_text}>\n                    {paragraph}\n                </Text>\n            ))}\n        </React.Fragment>\n    );\n};\n\nexport default LbCallTradeDescription;\n","import React from 'react';\nimport { Localize } from '@deriv/translations';\nimport { Text } from '@deriv/components';\n\nconst MatchDiffTradeDescription = () => {\n    const content = [\n        <Localize\n            i18n_default_text='If you select \"Matches\", you will win the payout if the last digit of the last tick is the same as your prediction.'\n            key='1'\n        />,\n        <Localize\n            i18n_default_text='If you select \"Differs\", you will win the payout if the last digit of the last tick is not the same as your prediction.'\n            key='2'\n        />,\n    ];\n    return (\n        <React.Fragment>\n            {content.map(paragraph => (\n                <Text as='p' key={paragraph.props.i18n_default_text}>\n                    {paragraph}\n                </Text>\n            ))}\n        </React.Fragment>\n    );\n};\n\nexport default MatchDiffTradeDescription;\n","import React from 'react';\nimport { Localize } from '@deriv/translations';\nimport { Text } from '@deriv/components';\n\nconst MultiplierTradeDescription = ({\n    is_multiplier_fx,\n    onClick,\n}: {\n    is_multiplier_fx?: boolean;\n    onClick: (e?: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>) => void;\n}) => {\n    const content = [\n        <Localize\n            i18n_default_text='Use multipliers to leverage your potential returns. Predict if the asset price will move upward (bullish) or downward (bearish). We’ll charge a commission when you open a multipliers trade.'\n            key='1'\n        />,\n        <Localize\n            i18n_default_text='If you select \"<0>Up</0>\", your total profit/loss will be the percentage increase in the underlying asset price, times the multiplier and stake, minus commissions.'\n            components={[<strong key={0} />]}\n            key='2'\n        />,\n        <Localize\n            i18n_default_text='If you select \"<0>Down</0>\", your total profit/loss will be the percentage decrease in the underlying asset price, times the multiplier and stake, minus commissions.'\n            components={[<strong key={0} />]}\n            key='3'\n        />,\n        <Localize\n            i18n_default_text='Your contract will be closed when the <0>stop out</0> level is reached.'\n            components={[\n                <span\n                    className='contract-type-info__content-definition'\n                    onClick={onClick}\n                    onKeyDown={onClick}\n                    key={0}\n                />,\n            ]}\n            key='4'\n        />,\n        {\n            content: is_multiplier_fx ? (\n                <Localize\n                    i18n_default_text='Additional features are available to manage your positions: “<0>Take profit</0>” and “<0>Stop loss</0>” allow you to adjust your level of risk aversion.'\n                    components={[\n                        <span\n                            className='contract-type-info__content-definition'\n                            onClick={onClick}\n                            onKeyDown={onClick}\n                            key={0}\n                        />,\n                    ]}\n                    key='5'\n                />\n            ) : (\n                <Localize\n                    i18n_default_text='Additional features are available to manage your positions: “<0>Take profit</0>”, “<0>Stop loss</0>” and “<0>Deal cancellation</0>” allow you to adjust your level of risk aversion.'\n                    components={[\n                        <span\n                            className='contract-type-info__content-definition'\n                            onClick={onClick}\n                            onKeyDown={onClick}\n                            key={0}\n                        />,\n                    ]}\n                    key='5'\n                />\n            ),\n        },\n        <Localize\n            i18n_default_text='You can close your trade anytime. However, be aware of <0>slippage risk</0>.'\n            components={[\n                <span\n                    className='contract-type-info__content-definition'\n                    onClick={onClick}\n                    onKeyDown={onClick}\n                    key={0}\n                />,\n            ]}\n            key='6'\n        />,\n    ] as Array<JSX.Element & { content: JSX.Element }>;\n    return (\n        <React.Fragment>\n            {content.map(paragraph => {\n                const key = paragraph.props\n                    ? paragraph.props.i18n_default_text\n                    : paragraph.content?.props.i18n_default_text;\n                const text = paragraph.content ?? paragraph;\n                return (\n                    <Text as='p' key={key}>\n                        {text}\n                    </Text>\n                );\n            })}\n        </React.Fragment>\n    );\n};\n\nexport default MultiplierTradeDescription;\n","import React from 'react';\nimport { Localize } from '@deriv/translations';\nimport { Text } from '@deriv/components';\n\nconst OverUnderTradeDescription = () => {\n    const content = [\n        <Localize\n            i18n_default_text='If you select \"Over\", you will win the payout if the last digit of the last tick is greater than your prediction.'\n            key='1'\n        />,\n        <Localize\n            i18n_default_text='If you select \"Under\", you will win the payout if the last digit of the last tick is less than your prediction.'\n            key='2'\n        />,\n    ];\n    return (\n        <React.Fragment>\n            {content.map(paragraph => (\n                <Text as='p' key={paragraph.props.i18n_default_text}>\n                    {paragraph}\n                </Text>\n            ))}\n        </React.Fragment>\n    );\n};\n\nexport default OverUnderTradeDescription;\n","import React from 'react';\nimport { Localize } from '@deriv/translations';\nimport { Text } from '@deriv/components';\n\nconst RiseFallTradeDescription = () => {\n    const content = [\n        <Localize\n            i18n_default_text='If you select \"Rise\", you win the payout if the exit spot is strictly higher than the entry spot.'\n            key='1'\n        />,\n        <Localize\n            i18n_default_text='If you select \"Fall\", you win the payout if the exit spot is strictly lower than the entry spot.'\n            key='2'\n        />,\n        <Localize\n            i18n_default_text='If you select \"Allow equals\", you win the payout if exit spot is higher than or equal to entry spot for \"Rise\". Similarly, you win the payout if exit spot is lower than or equal to entry spot for \"Fall\".'\n            key='3'\n        />,\n    ];\n    return (\n        <React.Fragment>\n            {content.map(paragraph => (\n                <Text as='p' key={paragraph.props.i18n_default_text}>\n                    {paragraph}\n                </Text>\n            ))}\n        </React.Fragment>\n    );\n};\n\nexport default RiseFallTradeDescription;\n","import React from 'react';\nimport { Localize } from '@deriv/translations';\nimport { Text } from '@deriv/components';\n\nconst RunHighLowTradeDescription = () => {\n    const content = [\n        <Localize\n            i18n_default_text='If you select \"Only Ups\", you win the payout if consecutive ticks rise successively after the entry spot. No payout if any tick falls or is equal to any of the previous ticks.'\n            key='1'\n        />,\n        <Localize\n            i18n_default_text='If you select \"Only Downs\", you win the payout if consecutive ticks fall successively after the entry spot. No payout if any tick rises or is equal to any of the previous ticks.'\n            key='2'\n        />,\n    ];\n    return (\n        <React.Fragment>\n            {content.map(paragraph => (\n                <Text as='p' key={paragraph.props.i18n_default_text}>\n                    {paragraph}\n                </Text>\n            ))}\n        </React.Fragment>\n    );\n};\n\nexport default RunHighLowTradeDescription;\n","import React from 'react';\nimport { Localize } from '@deriv/translations';\nimport { Text } from '@deriv/components';\n\nconst ResetTradeDescription = () => {\n    const content = [\n        <Localize\n            i18n_default_text='If you select \"Reset-Up”, you win the payout if the exit spot is strictly higher than either the entry spot or the spot at reset time.'\n            key='1'\n        />,\n        <Localize\n            i18n_default_text='If you select \"Reset-Down”, you win the payout if the exit spot is strictly lower than either the entry spot or the spot at reset time.'\n            key='2'\n        />,\n        <Localize\n            i18n_default_text=\"If the exit spot is equal to the barrier or the new barrier (if a reset occurs), you don't win the payout.\"\n            key='3'\n        />,\n    ];\n    return (\n        <React.Fragment>\n            {content.map(paragraph => (\n                <Text as='p' key={paragraph.props.i18n_default_text}>\n                    {paragraph}\n                </Text>\n            ))}\n        </React.Fragment>\n    );\n};\n\nexport default ResetTradeDescription;\n","import React from 'react';\nimport { Localize } from '@deriv/translations';\nimport { Text } from '@deriv/components';\n\nconst StayTradeDescription = () => {\n    const content = [\n        <Localize\n            i18n_default_text='If you select \"Stays Between\", you win the payout if the market stays between (does not touch) either the High barrier or the Low barrier at any time during the contract period'\n            key='1'\n        />,\n        <Localize\n            i18n_default_text='If you select \"Goes Outside\", you win the payout if the market touches either the High barrier or the Low barrier at any time during the contract period.'\n            key='2'\n        />,\n    ];\n    return (\n        <React.Fragment>\n            {content.map(paragraph => (\n                <Text as='p' key={paragraph.props.i18n_default_text}>\n                    {paragraph}\n                </Text>\n            ))}\n        </React.Fragment>\n    );\n};\n\nexport default StayTradeDescription;\n","import React from 'react';\nimport { Localize } from '@deriv/translations';\nimport { Text } from '@deriv/components';\n\nconst TurbosTradeDescription = ({\n    onClick,\n}: {\n    onClick: (e?: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>) => void;\n}) => {\n    const content = [\n        {\n            text: (\n                <Localize i18n_default_text='Turbo options allow you to predict the direction of the underlying asset’s movements.' />\n            ),\n        },\n        {\n            text: (\n                <Localize\n                    i18n_default_text='You receive a <0>payout</0> at <0>expiry</0> if the spot price never breaches the <0>barrier</0> during the contract period. If it does, your contract will be terminated early.'\n                    components={[\n                        <span\n                            className='contract-type-info__content-definition'\n                            onClick={onClick}\n                            onKeyDown={onClick}\n                            key={0}\n                        />,\n                    ]}\n                />\n            ),\n        },\n        {\n            text: (\n                <Localize\n                    i18n_default_text='If you select <0>\"Up\"</0>, you’ll earn a payout if the spot price never drops below the barrier.'\n                    components={[<strong key={0} />]}\n                />\n            ),\n        },\n        {\n            text: (\n                <Localize\n                    i18n_default_text='If you select <0>\"Down\"</0>, you’ll earn a payout if the spot price never rises above the barrier.'\n                    components={[<strong key={0} />]}\n                />\n            ),\n        },\n        {\n            text: (\n                <Localize\n                    i18n_default_text='Your payout is equal to the <0>payout per point</0> multiplied by the distance between the <0>final price</0> and the barrier. You will only earn a profit if your payout is higher than your initial stake.'\n                    components={[\n                        <span\n                            className='contract-type-info__content-definition'\n                            onClick={onClick}\n                            onKeyDown={onClick}\n                            key={0}\n                        />,\n                    ]}\n                />\n            ),\n        },\n        {\n            text: (\n                <Localize\n                    i18n_default_text='You may sell the contract up to 15 seconds before expiry. If you do, we’ll pay you the <0>contract value</0>.'\n                    components={[\n                        <span\n                            className='contract-type-info__content-definition'\n                            onClick={onClick}\n                            onKeyDown={onClick}\n                            key={0}\n                        />,\n                    ]}\n                />\n            ),\n        },\n        {\n            text: (\n                <Localize i18n_default_text='If you choose your duration in number of ticks, you won’t be able to terminate your contract early.' />\n            ),\n        },\n    ];\n\n    return (\n        <React.Fragment>\n            {content.map(({ text }, index) => (\n                <Text as='p' key={index.toString() + text}>\n                    {text}\n                </Text>\n            ))}\n        </React.Fragment>\n    );\n};\n\nexport default TurbosTradeDescription;\n","import React from 'react';\nimport { Localize } from '@deriv/translations';\nimport { Text } from '@deriv/components';\n\nconst TouchTradeDescription = () => {\n    const content = [\n        <Localize\n            i18n_default_text='If you select \"Touch\", you win the payout if the market touches the barrier at any time during the contract period.'\n            key='1'\n        />,\n        <Localize\n            i18n_default_text='If you select \"No Touch\", you win the payout if the market never touches the barrier at any time during the contract period.'\n            key='2'\n        />,\n    ];\n    return (\n        <React.Fragment>\n            {content.map(paragraph => (\n                <Text as='p' key={paragraph.props.i18n_default_text}>\n                    {paragraph}\n                </Text>\n            ))}\n        </React.Fragment>\n    );\n};\n\nexport default TouchTradeDescription;\n","import React from 'react';\nimport { Localize } from '@deriv/translations';\nimport { Text } from '@deriv/components';\n\nconst TickHighLowTradeDescription = () => {\n    const content = [\n        <Localize\n            i18n_default_text='If you select \"High Tick\", you win the payout if the selected tick is the highest among the next five ticks.'\n            key='1'\n        />,\n        <Localize\n            i18n_default_text='If you select \"Low Tick\", you win the payout if the selected tick is the lowest among the next five ticks.'\n            key='2'\n        />,\n    ];\n    return (\n        <React.Fragment>\n            {content.map(paragraph => (\n                <Text as='p' key={paragraph.props.i18n_default_text}>\n                    {paragraph}\n                </Text>\n            ))}\n        </React.Fragment>\n    );\n};\n\nexport default TickHighLowTradeDescription;\n","import React from 'react';\nimport { Localize } from '@deriv/translations';\nimport { Text } from '@deriv/components';\n\nconst VanillaTradeDescription = ({\n    is_vanilla_fx,\n    onClick,\n}: {\n    is_vanilla_fx?: boolean;\n    onClick: (e?: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>) => void;\n}) => {\n    const content = [\n        <Localize\n            i18n_default_text='Vanilla options allow you to predict an upward (bullish) or downward (bearish) direction of the underlying asset by purchasing a \"Call\" or a \"Put\".'\n            key='1'\n        />,\n        <Localize\n            i18n_default_text='If you select <0>\"Call\"</0>, you’ll earn a <1>payout</1> if the <1>final price</1> is above the <1>strike price</1> at <1>expiry</1>. Otherwise, you won’t receive a payout.'\n            components={[\n                <strong key={0} />,\n                <span\n                    className='contract-type-info__content-definition'\n                    onClick={onClick}\n                    onKeyDown={onClick}\n                    key={1}\n                />,\n            ]}\n            key='2'\n        />,\n        <Localize\n            i18n_default_text='If you select <0>\"Put\"</0>, you’ll earn a payout if the final price is below the strike price at expiry. Otherwise, you won’t receive a payout.'\n            components={[<strong key={0} />]}\n            key='3'\n        />,\n        {\n            content: is_vanilla_fx ? (\n                <Localize\n                    i18n_default_text='Your payout is equal to the <0>payout per pip</0> multiplied by the difference, <1>in pips</1>, between the final price and the strike price. You will only earn a profit if your payout is higher than your initial stake.'\n                    components={[\n                        <span\n                            className='contract-type-info__content-definition'\n                            onClick={onClick}\n                            onKeyDown={onClick}\n                            key={0}\n                        />,\n                        <strong key={0} />,\n                    ]}\n                    key='4'\n                />\n            ) : (\n                <Localize\n                    i18n_default_text='Your payout is equal to the <0>payout per point</0> multiplied by the difference between the final price and the strike price. You will only earn a profit if your payout is higher than your initial stake.'\n                    components={[\n                        <span\n                            className='contract-type-info__content-definition'\n                            onClick={onClick}\n                            onKeyDown={onClick}\n                            key={0}\n                        />,\n                    ]}\n                    key='4'\n                />\n            ),\n        },\n        {\n            content: is_vanilla_fx ? (\n                <Localize\n                    i18n_default_text='You may sell the contract up to 24 hours before expiry. If you do, we’ll pay you the <0>contract value</0>.'\n                    components={[\n                        <span\n                            className='contract-type-info__content-definition'\n                            onClick={onClick}\n                            onKeyDown={onClick}\n                            key={0}\n                        />,\n                    ]}\n                    key='5'\n                />\n            ) : (\n                <Localize\n                    i18n_default_text='You may sell the contract up until 60 seconds before expiry. If you do, we’ll pay you the <0>contract value</0>.'\n                    components={[\n                        <span\n                            className='contract-type-info__content-definition'\n                            onClick={onClick}\n                            onKeyDown={onClick}\n                            key={0}\n                        />,\n                    ]}\n                    key='5'\n                />\n            ),\n        },\n    ] as Array<JSX.Element & { content: JSX.Element }>;\n    return (\n        <React.Fragment>\n            {content.map(paragraph => {\n                const key = paragraph.props\n                    ? paragraph.props.i18n_default_text\n                    : paragraph.content?.props.i18n_default_text;\n                const text = paragraph.content ?? paragraph;\n                return (\n                    <Text as='p' key={key}>\n                        {text}\n                    </Text>\n                );\n            })}\n        </React.Fragment>\n    );\n};\n\nexport default VanillaTradeDescription;\n","import React from 'react';\nimport { Text } from '@deriv/components';\nimport { TRADE_TYPES } from '@deriv/shared';\nimport { Localize } from '@deriv/translations';\nimport AccumulatorTradeDescription from './Description/accumulator-trade-description';\nimport AsianTradeDescription from './Description/asian-trade-description';\nimport CallPutSpreadTradeDescription from './Description/call-put-spread-trade-description';\nimport EndTradeDescription from './Description/end-trade-description';\nimport EvenOddTradeDescription from './Description/even-odd-trade-description';\nimport HighLowTradeDescription from './Description/high-low-trade-description';\nimport LbHighLowTradeDescription from './Description/lb-high-low-trade-description';\nimport LbPutTradeDescription from './Description/lb-put-trade-description';\nimport LbCallTradeDescription from './Description/lb-call-trade-description';\nimport MatchDiffTradeDescription from './Description/match-diff-trade-description';\nimport MultiplierTradeDescription from './Description/multiplier-trade-description';\nimport OverUnderTradeDescription from './Description/over-under-trade-description';\nimport RiseFallTradeDescription from './Description/rise-fall-trade-description';\nimport RunHighLowTradeDescription from './Description/run-high-low-trade-description';\nimport ResetTradeDescription from './Description/reset-trade-description';\nimport StayTradeDescription from './Description/stay-trade-description';\nimport TurbosTradeDescription from './Description/turbos-trade-description';\nimport TouchTradeDescription from './Description/touch-trade-description';\nimport TickHighLowTradeDescription from './Description/tick-high-low-trade-description';\nimport VanillaTradeDescription from './Description/vanilla-trade-description';\n\nconst TradeCategories = ({\n    category,\n    onClick,\n    is_vanilla_fx = false,\n    is_multiplier_fx = false,\n}: {\n    category?: string;\n    onClick: (e?: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>) => void;\n    is_vanilla_fx?: boolean;\n    is_multiplier_fx?: boolean;\n}) => {\n    let TradeTypeTemplate;\n    if (category) {\n        switch (category) {\n            case TRADE_TYPES.ACCUMULATOR:\n                TradeTypeTemplate = <AccumulatorTradeDescription onClick={onClick} />;\n                break;\n            case TRADE_TYPES.RISE_FALL:\n            case TRADE_TYPES.RISE_FALL_EQUAL:\n                TradeTypeTemplate = <RiseFallTradeDescription />;\n                break;\n            case TRADE_TYPES.HIGH_LOW:\n                TradeTypeTemplate = <HighLowTradeDescription />;\n                break;\n            case TRADE_TYPES.END:\n                TradeTypeTemplate = <EndTradeDescription />;\n                break;\n            case TRADE_TYPES.STAY:\n                TradeTypeTemplate = <StayTradeDescription />;\n                break;\n            case TRADE_TYPES.MATCH_DIFF:\n                TradeTypeTemplate = <MatchDiffTradeDescription />;\n                break;\n            case TRADE_TYPES.EVEN_ODD:\n                TradeTypeTemplate = <EvenOddTradeDescription />;\n                break;\n            case TRADE_TYPES.OVER_UNDER:\n                TradeTypeTemplate = <OverUnderTradeDescription />;\n                break;\n            case TRADE_TYPES.TOUCH:\n                TradeTypeTemplate = <TouchTradeDescription />;\n                break;\n            case TRADE_TYPES.ASIAN:\n                TradeTypeTemplate = <AsianTradeDescription />;\n                break;\n            case TRADE_TYPES.RUN_HIGH_LOW:\n                TradeTypeTemplate = <RunHighLowTradeDescription />;\n                break;\n            case TRADE_TYPES.RESET:\n                TradeTypeTemplate = <ResetTradeDescription />;\n                break;\n            case TRADE_TYPES.CALL_PUT_SPREAD:\n                TradeTypeTemplate = <CallPutSpreadTradeDescription />;\n                break;\n            case TRADE_TYPES.TICK_HIGH_LOW:\n                TradeTypeTemplate = <TickHighLowTradeDescription />;\n                break;\n            case TRADE_TYPES.LB_HIGH_LOW:\n                TradeTypeTemplate = <LbHighLowTradeDescription />;\n                break;\n            case TRADE_TYPES.LB_PUT:\n                TradeTypeTemplate = <LbPutTradeDescription />;\n                break;\n            case TRADE_TYPES.LB_CALL:\n                TradeTypeTemplate = <LbCallTradeDescription />;\n                break;\n            case TRADE_TYPES.MULTIPLIER:\n                TradeTypeTemplate = (\n                    <MultiplierTradeDescription is_multiplier_fx={is_multiplier_fx} onClick={onClick} />\n                );\n                break;\n            case TRADE_TYPES.TURBOS.LONG:\n            case TRADE_TYPES.TURBOS.SHORT:\n                TradeTypeTemplate = <TurbosTradeDescription onClick={onClick} />;\n                break;\n            case TRADE_TYPES.VANILLA.CALL:\n            case TRADE_TYPES.VANILLA.PUT:\n                TradeTypeTemplate = <VanillaTradeDescription is_vanilla_fx={is_vanilla_fx} onClick={onClick} />;\n                break;\n            default:\n                TradeTypeTemplate = (\n                    <Text as='p'>\n                        <Localize i18n_default_text='Description not found.' />\n                    </Text>\n                );\n                break;\n        }\n    }\n    return <>{TradeTypeTemplate}</>;\n};\n\nexport default TradeCategories;\n","import React from \"react\";\nexport default ({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"272\" height=\"148\" {...props}><g fill=\"none\"><rect width=\"272\" height=\"148\" fill=\"#FFF\" rx=\"4\" /><rect width=\"272\" height=\"148\" fill=\"var(--general-section-1)\" rx=\"4\" /><path fill=\"var(--fill-normal)\" d=\"M157.12 89.96h32.77c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38H40.6c-3.21 0-5.82-2.41-5.82-5.39 0-2.97 2.6-5.39 5.83-5.39h64.08c3.22 0 5.83-2.4 5.83-5.38s-2.6-5.4-5.83-5.4H55.16v-.04c-2.91-.34-5.1-2.63-5.1-5.34 0-2.72 2.19-5 5.1-5.35v-.04h20.4c3.21 0 5.82-2.41 5.82-5.39 0-2.97-2.6-5.39-5.83-5.39H48.61c-3.22 0-5.83-2.4-5.83-5.39s2.6-5.38 5.83-5.38h138.37c3.22 0 5.83 2.4 5.83 5.38s-2.61 5.4-5.83 5.4h-53.9c-3.21 0-5.82 2.4-5.82 5.38s2.61 5.39 5.83 5.39h32.04c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39h-17.48c-3.21 0-5.82 2.4-5.82 5.38s2.6 5.4 5.82 5.4h9.47zm-126-43.1c3.23 0 5.84 2.4 5.84 5.39 0 2.97-2.61 5.38-5.83 5.38s-5.83-2.4-5.83-5.38 2.61-5.4 5.83-5.4zM168.05 25.3h40.79c3.21 0 5.82 2.42 5.82 5.4 0 2.97-2.6 5.38-5.82 5.38h-40.79c-3.21 0-5.82-2.41-5.82-5.39s2.6-5.39 5.82-5.39zm-24.76 0c3.22 0 5.83 2.42 5.83 5.4 0 2.97-2.61 5.38-5.83 5.38s-5.82-2.41-5.82-5.39 2.6-5.39 5.82-5.39zm70.64 21.56h10.2c3.22 0 5.83 2.4 5.83 5.39 0 2.97-2.61 5.38-5.83 5.38h-10.2c-3.21 0-5.82-2.4-5.82-5.38s2.6-5.4 5.82-5.4zM188.43 68.4h21.85c3.22 0 5.83 2.41 5.83 5.39s-2.6 5.39-5.83 5.39h-21.84c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm20.4 21.55h32.04c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38h-32.04c-3.22 0-5.83-2.41-5.83-5.39 0-2.97 2.61-5.39 5.83-5.39zm-139.1 21.56h65.54c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39H69.73c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm87.39 0h10.2c3.21 0 5.82 2.41 5.82 5.39s-2.6 5.39-5.82 5.39h-10.2c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.61-5.38 5.83-5.38z\" /><path fill=\"#85ACB0\" d=\"M177.83 90.67v8.43h-33.74v-8.43h33.74zm33.74-25.3v8.43h-67.48v-8.44h67.48zm0-25.3v8.43h-67.48v-8.44h67.48z\" /><path fill=\"#FF444F\" d=\"M183.8 73.8l19.33 19.36V86.4a8.4 8.4 0 018.4-8.4h.04V99.1a8.43 8.43 0 01-8.44 8.43h-21.08v-.04a8.4 8.4 0 018.37-8.39h6.75l-25.3-25.3h11.92zm-25.31-25.3l12.65 12.65h-11.92L146.57 48.5h11.92z\" /><path fill=\"#85ACB0\" d=\"M127.57 99.1v8.44H60.09V99.1h67.48zm0-25.3v8.43H60.09V73.8h67.48zM93.83 48.5v8.43H60.09V48.5h33.74z\" /><path fill=\"#FF444F\" d=\"M87.14 86.45L74.5 99.1H62.56l12.65-12.65h11.93zm32-46.39a8.43 8.43 0 018.43 8.44v21.08h-.05a8.4 8.4 0 01-8.39-8.37v-6.75L99.8 73.8H87.9l25.3-25.3h-6.75a8.4 8.4 0 01-8.4-8.4v-.04h21.1z\" /></g></svg>;","import React from \"react\";\nexport default ({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"272\" height=\"148\" {...props}><g fill=\"none\"><rect width=\"272\" height=\"148\" fill=\"#FFF\" rx=\"4\" /><rect width=\"272\" height=\"148\" fill=\"var(--general-section-1)\" rx=\"4\" /><path fill=\"var(--fill-normal)\" d=\"M157.12 89.96h32.77c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38H40.6c-3.21 0-5.82-2.41-5.82-5.39 0-2.97 2.6-5.39 5.83-5.39h64.08c3.22 0 5.83-2.4 5.83-5.38s-2.6-5.4-5.83-5.4H55.16v-.04c-2.91-.34-5.1-2.63-5.1-5.34 0-2.72 2.19-5 5.1-5.35v-.04h20.4c3.21 0 5.82-2.41 5.82-5.39 0-2.97-2.6-5.39-5.83-5.39H48.61c-3.22 0-5.83-2.4-5.83-5.39s2.6-5.38 5.83-5.38h138.37c3.22 0 5.83 2.4 5.83 5.38s-2.61 5.4-5.83 5.4h-53.9c-3.21 0-5.82 2.4-5.82 5.38s2.61 5.39 5.83 5.39h32.04c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39h-17.48c-3.21 0-5.82 2.4-5.82 5.38s2.6 5.4 5.82 5.4h9.47zm-126-43.1c3.23 0 5.84 2.4 5.84 5.39 0 2.97-2.61 5.38-5.83 5.38s-5.83-2.4-5.83-5.38 2.61-5.4 5.83-5.4zM168.05 25.3h40.79c3.21 0 5.82 2.42 5.82 5.4 0 2.97-2.6 5.38-5.82 5.38h-40.79c-3.21 0-5.82-2.41-5.82-5.39s2.6-5.39 5.82-5.39zm-24.76 0c3.22 0 5.83 2.42 5.83 5.4 0 2.97-2.61 5.38-5.83 5.38s-5.82-2.41-5.82-5.39 2.6-5.39 5.82-5.39zm70.64 21.56h10.2c3.22 0 5.83 2.4 5.83 5.39 0 2.97-2.61 5.38-5.83 5.38h-10.2c-3.21 0-5.82-2.4-5.82-5.38s2.6-5.4 5.82-5.4zM188.43 68.4h21.85c3.22 0 5.83 2.41 5.83 5.39s-2.6 5.39-5.83 5.39h-21.84c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm20.4 21.55h32.04c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38h-32.04c-3.22 0-5.83-2.41-5.83-5.39 0-2.97 2.61-5.39 5.83-5.39zm-139.1 21.56h65.54c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39H69.73c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm87.39 0h10.2c3.21 0 5.82 2.41 5.82 5.39s-2.6 5.39-5.82 5.39h-10.2c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.61-5.38 5.83-5.38z\" /><path fill=\"#85ACB0\" d=\"M169.74 99.1v8.44h-67.48V99.1h67.48zm-4.22-59.04v54.82h-8.44V40.06h8.44z\" /><path fill=\"#FF444F\" d=\"M120.91 86.45l-4.2 4.22-14.45 4.21v-8.43h18.65zm19.3-33.74a8.43 8.43 0 018.44 8.44l-.04 21.08a8.43 8.43 0 01-8.4-8.43V67.1l-16.86 16.9V72.05l10.9-10.9h-6.68a8.46 8.46 0 01-8.44-8.44h21.09z\" /></g></svg>;","import React from \"react\";\nexport default ({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"272\" height=\"148\" {...props}><g fill=\"none\"><rect width=\"272\" height=\"148\" fill=\"#FFF\" rx=\"4\" /><rect width=\"272\" height=\"148\" fill=\"var(--general-section-1)\" rx=\"4\" /><path fill=\"var(--fill-normal)\" d=\"M157.12 89.96h32.77c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38H40.6c-3.21 0-5.82-2.41-5.82-5.39 0-2.97 2.6-5.39 5.83-5.39h64.08c3.22 0 5.83-2.4 5.83-5.38s-2.6-5.4-5.83-5.4H55.16v-.04c-2.91-.34-5.1-2.63-5.1-5.34 0-2.72 2.19-5 5.1-5.35v-.04h20.4c3.21 0 5.82-2.41 5.82-5.39 0-2.97-2.6-5.39-5.83-5.39H48.61c-3.22 0-5.83-2.4-5.83-5.39s2.6-5.38 5.83-5.38h138.37c3.22 0 5.83 2.4 5.83 5.38s-2.61 5.4-5.83 5.4h-53.9c-3.21 0-5.82 2.4-5.82 5.38s2.61 5.39 5.83 5.39h32.04c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39h-17.48c-3.21 0-5.82 2.4-5.82 5.38s2.6 5.4 5.82 5.4h9.47zm-126-43.1c3.23 0 5.84 2.4 5.84 5.39 0 2.97-2.61 5.38-5.83 5.38s-5.83-2.4-5.83-5.38 2.61-5.4 5.83-5.4zM168.05 25.3h40.79c3.21 0 5.82 2.42 5.82 5.4 0 2.97-2.6 5.38-5.82 5.38h-40.79c-3.21 0-5.82-2.41-5.82-5.39s2.6-5.39 5.82-5.39zm-24.76 0c3.22 0 5.83 2.42 5.83 5.4 0 2.97-2.61 5.38-5.83 5.38s-5.82-2.41-5.82-5.39 2.6-5.39 5.82-5.39zm70.64 21.56h10.2c3.22 0 5.83 2.4 5.83 5.39 0 2.97-2.61 5.38-5.83 5.38h-10.2c-3.21 0-5.82-2.4-5.82-5.38s2.6-5.4 5.82-5.4zM188.43 68.4h21.85c3.22 0 5.83 2.41 5.83 5.39s-2.6 5.39-5.83 5.39h-21.84c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm20.4 21.55h32.04c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38h-32.04c-3.22 0-5.83-2.41-5.83-5.39 0-2.97 2.61-5.39 5.83-5.39zm-139.1 21.56h65.54c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39H69.73c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm87.39 0h10.2c3.21 0 5.82 2.41 5.82 5.39s-2.6 5.39-5.82 5.39h-10.2c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.61-5.38 5.83-5.38z\" /><path fill=\"#85ACB0\" d=\"M211.57 99.1v8.44h-67.48V99.1h67.48zm-33.74-25.3v8.43h-33.74V73.8h33.74zm33.74 0v8.43h-13.02L207 73.8h4.58z\" /><path fill=\"#FF444F\" d=\"M203.13 55.18L189.25 41.3l-.03.03a8.4 8.4 0 000 11.86l3.73 3.74H169.4v8.43h23.55l-3.73 3.74a8.4 8.4 0 000 11.87l.03.03 13.88-13.89a8.43 8.43 0 000-11.93z\" /><path fill=\"#85ACB0\" d=\"M127.57 99.1v8.44H60.09V99.1h67.48zm0-59.04v8.44H60.09v-8.44h67.48z\" /><path fill=\"#FF444F\" d=\"M125.1 67.84l-13.9-13.9-.02.04a8.38 8.38 0 000 11.87l3.73 3.73H85.4v8.44h29.52l-3.73 3.73a8.38 8.38 0 000 11.87l.03.03 13.89-13.89a8.43 8.43 0 000-11.92z\" /></g></svg>;","import React from \"react\";\nexport default ({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"272\" height=\"148\" {...props}><g fill=\"none\"><rect width=\"272\" height=\"148\" fill=\"#FFF\" rx=\"4\" /><rect width=\"272\" height=\"148\" fill=\"var(--general-section-1)\" rx=\"4\" /><path fill=\"var(--fill-normal)\" d=\"M157.12 89.96h32.77c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38H40.6c-3.21 0-5.82-2.41-5.82-5.39 0-2.97 2.6-5.39 5.83-5.39h64.08c3.22 0 5.83-2.4 5.83-5.38s-2.6-5.4-5.83-5.4H55.16v-.04c-2.91-.34-5.1-2.63-5.1-5.34 0-2.72 2.19-5 5.1-5.35v-.04h20.4c3.21 0 5.82-2.41 5.82-5.39 0-2.97-2.6-5.39-5.83-5.39H48.61c-3.22 0-5.83-2.4-5.83-5.39s2.6-5.38 5.83-5.38h138.37c3.22 0 5.83 2.4 5.83 5.38s-2.61 5.4-5.83 5.4h-53.9c-3.21 0-5.82 2.4-5.82 5.38s2.61 5.39 5.83 5.39h32.04c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39h-17.48c-3.21 0-5.82 2.4-5.82 5.38s2.6 5.4 5.82 5.4h9.47zm-126-43.1c3.23 0 5.84 2.4 5.84 5.39 0 2.97-2.61 5.38-5.83 5.38s-5.83-2.4-5.83-5.38 2.61-5.4 5.83-5.4zM168.05 25.3h40.79c3.21 0 5.82 2.42 5.82 5.4 0 2.97-2.6 5.38-5.82 5.38h-40.79c-3.21 0-5.82-2.41-5.82-5.39s2.6-5.39 5.82-5.39zm-24.76 0c3.22 0 5.83 2.42 5.83 5.4 0 2.97-2.61 5.38-5.83 5.38s-5.82-2.41-5.82-5.39 2.6-5.39 5.82-5.39zm70.64 21.56h10.2c3.22 0 5.83 2.4 5.83 5.39 0 2.97-2.61 5.38-5.83 5.38h-10.2c-3.21 0-5.82-2.4-5.82-5.38s2.6-5.4 5.82-5.4zM188.43 68.4h21.85c3.22 0 5.83 2.41 5.83 5.39s-2.6 5.39-5.83 5.39h-21.84c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm20.4 21.55h32.04c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38h-32.04c-3.22 0-5.83-2.41-5.83-5.39 0-2.97 2.61-5.39 5.83-5.39zm-139.1 21.56h65.54c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39H69.73c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm87.39 0h10.2c3.21 0 5.82 2.41 5.82 5.39s-2.6 5.39-5.82 5.39h-10.2c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.61-5.38 5.83-5.38z\" /><path fill=\"#85ACB0\" d=\"M165.52 52.71v54.83h-8.44V52.7h8.44zm4.22-12.65v8.44h-67.48v-8.44h67.48z\" /><path fill=\"#FF444F\" d=\"M123.35 63.59l16.87 16.9v-6.7a8.43 8.43 0 018.39-8.43l.04 21.09a8.43 8.43 0 01-8.43 8.43h-21.09a8.46 8.46 0 018.44-8.43h6.68l-10.9-10.9V63.58zM102.26 52.7l14.44 4.22 4.21 4.22h-18.65V52.7z\" /></g></svg>;","import React from \"react\";\nexport default ({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"272\" height=\"148\" {...props}><g fill=\"none\"><rect width=\"272\" height=\"148\" fill=\"#FFF\" rx=\"4\" /><rect width=\"272\" height=\"148\" fill=\"var(--general-section-1)\" rx=\"4\" /><path fill=\"var(--fill-normal)\" d=\"M157.12 89.96h32.77c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38H40.6c-3.21 0-5.82-2.41-5.82-5.39 0-2.97 2.6-5.39 5.83-5.39h64.08c3.22 0 5.83-2.4 5.83-5.38s-2.6-5.4-5.83-5.4H55.16v-.04c-2.91-.34-5.1-2.63-5.1-5.34 0-2.72 2.19-5 5.1-5.35v-.04h20.4c3.21 0 5.82-2.41 5.82-5.39 0-2.97-2.6-5.39-5.83-5.39H48.61c-3.22 0-5.83-2.4-5.83-5.39s2.6-5.38 5.83-5.38h138.37c3.22 0 5.83 2.4 5.83 5.38s-2.61 5.4-5.83 5.4h-53.9c-3.21 0-5.82 2.4-5.82 5.38s2.61 5.39 5.83 5.39h32.04c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39h-17.48c-3.21 0-5.82 2.4-5.82 5.38s2.6 5.4 5.82 5.4h9.47zm-126-43.1c3.23 0 5.84 2.4 5.84 5.39 0 2.97-2.61 5.38-5.83 5.38s-5.83-2.4-5.83-5.38 2.61-5.4 5.83-5.4zM168.05 25.3h40.79c3.21 0 5.82 2.42 5.82 5.4 0 2.97-2.6 5.38-5.82 5.38h-40.79c-3.21 0-5.82-2.41-5.82-5.39s2.6-5.39 5.82-5.39zm-24.76 0c3.22 0 5.83 2.42 5.83 5.4 0 2.97-2.61 5.38-5.83 5.38s-5.82-2.41-5.82-5.39 2.6-5.39 5.82-5.39zm70.64 21.56h10.2c3.22 0 5.83 2.4 5.83 5.39 0 2.97-2.61 5.38-5.83 5.38h-10.2c-3.21 0-5.82-2.4-5.82-5.38s2.6-5.4 5.82-5.4zM188.43 68.4h21.85c3.22 0 5.83 2.41 5.83 5.39s-2.6 5.39-5.83 5.39h-21.84c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm20.4 21.55h32.04c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38h-32.04c-3.22 0-5.83-2.41-5.83-5.39 0-2.97 2.61-5.39 5.83-5.39zm-139.1 21.56h65.54c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39H69.73c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm87.39 0h10.2c3.21 0 5.82 2.41 5.82 5.39s-2.6 5.39-5.82 5.39h-10.2c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.61-5.38 5.83-5.38z\" /><path fill=\"#85ACB0\" d=\"M169.74 99.1v8.44h-67.48V99.1h67.48zm-4.22-46.39v42.17h-8.44V52.71h8.44zm4.22-12.65v8.44h-67.48v-8.44h67.48z\" /><path fill=\"#FF444F\" d=\"M120.91 86.45l-4.2 4.22-14.45 4.21v-8.43h18.65zm19.3-33.74a8.43 8.43 0 018.44 8.44l-.04 21.08a8.43 8.43 0 01-8.4-8.43V67.1l-16.86 16.9V72.05l10.9-10.9h-6.68a8.46 8.46 0 01-8.44-8.44h21.09z\" /></g></svg>;","import React from \"react\";\nexport default ({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"272\" height=\"148\" {...props}><g fill=\"none\"><rect width=\"272\" height=\"148\" fill=\"#FFF\" rx=\"4\" /><rect width=\"272\" height=\"148\" fill=\"var(--general-section-1)\" rx=\"4\" /><path fill=\"var(--fill-normal)\" d=\"M157.12 89.96h32.77c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38H40.6c-3.21 0-5.82-2.41-5.82-5.39 0-2.97 2.6-5.39 5.83-5.39h64.08c3.22 0 5.83-2.4 5.83-5.38s-2.6-5.4-5.83-5.4H55.16v-.04c-2.91-.34-5.1-2.63-5.1-5.34 0-2.72 2.19-5 5.1-5.35v-.04h20.4c3.21 0 5.82-2.41 5.82-5.39 0-2.97-2.6-5.39-5.83-5.39H48.61c-3.22 0-5.83-2.4-5.83-5.39s2.6-5.38 5.83-5.38h138.37c3.22 0 5.83 2.4 5.83 5.38s-2.61 5.4-5.83 5.4h-53.9c-3.21 0-5.82 2.4-5.82 5.38s2.61 5.39 5.83 5.39h32.04c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39h-17.48c-3.21 0-5.82 2.4-5.82 5.38s2.6 5.4 5.82 5.4h9.47zm-126-43.1c3.23 0 5.84 2.4 5.84 5.39 0 2.97-2.61 5.38-5.83 5.38s-5.83-2.4-5.83-5.38 2.61-5.4 5.83-5.4zM168.05 25.3h40.79c3.21 0 5.82 2.42 5.82 5.4 0 2.97-2.6 5.38-5.82 5.38h-40.79c-3.21 0-5.82-2.41-5.82-5.39s2.6-5.39 5.82-5.39zm-24.76 0c3.22 0 5.83 2.42 5.83 5.4 0 2.97-2.61 5.38-5.83 5.38s-5.82-2.41-5.82-5.39 2.6-5.39 5.82-5.39zm70.64 21.56h10.2c3.22 0 5.83 2.4 5.83 5.39 0 2.97-2.61 5.38-5.83 5.38h-10.2c-3.21 0-5.82-2.4-5.82-5.38s2.6-5.4 5.82-5.4zM188.43 68.4h21.85c3.22 0 5.83 2.41 5.83 5.39s-2.6 5.39-5.83 5.39h-21.84c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm20.4 21.55h32.04c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38h-32.04c-3.22 0-5.83-2.41-5.83-5.39 0-2.97 2.61-5.39 5.83-5.39zm-139.1 21.56h65.54c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39H69.73c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm87.39 0h10.2c3.21 0 5.82 2.41 5.82 5.39s-2.6 5.39-5.82 5.39h-10.2c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.61-5.38 5.83-5.38z\" /><path fill=\"#85ACB0\" d=\"M177.83 40.06v67.47h-8.44V40.06h8.44zM160.96 99.1v8.44h-16.87V99.1h16.87zm0-59.04v8.44h-16.87v-8.44h16.87zm50.6 0v8.44h-25.3v-8.44h25.3z\" /><path fill=\"#FF444F\" d=\"M182.05 72.07l21.08 21.09V86.4a8.4 8.4 0 018.4-8.4h.04V99.1a8.43 8.43 0 01-8.44 8.43h-21.08v-.04a8.4 8.4 0 018.37-8.39h6.75L182.05 84V72.06zm-15.13-15.14l2.48 2.47v11.93l-5.97-5.97H144.1v-8.43h22.83z\" /><path fill=\"#85ACB0\" d=\"M76.96 99.1v8.44H60.1V99.1h16.87zm50.6 0v8.44h-25.3V99.1h25.3zM93.84 40.06v67.48h-8.44V40.06h8.44zm-16.87 0v8.44H60.1v-8.44h16.87z\" /><path fill=\"#FF444F\" d=\"M85.4 76.27V88.2l-2.48 2.47H60.1v-8.44h19.34l5.96-5.96zm33.73-36.2a8.43 8.43 0 018.44 8.43v21.08h-.05a8.4 8.4 0 01-8.39-8.37v-6.75L98.05 75.54V63.62l15.14-15.12h-6.75a8.4 8.4 0 01-8.4-8.4v-.04z\" /><path fill=\"#85ACB0\" d=\"M89.61 82.23v1.75l1.75-1.75z\" /></g></svg>;","import React from \"react\";\nexport default ({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"272\" height=\"148\" {...props}><g fill=\"none\"><rect width=\"272\" height=\"148\" fill=\"#FFF\" rx=\"4\" /><rect width=\"272\" height=\"148\" fill=\"var(--general-section-1)\" rx=\"4\" /><path fill=\"var(--fill-normal)\" d=\"M157.12 89.96h32.77c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38H40.6c-3.21 0-5.82-2.41-5.82-5.39 0-2.97 2.6-5.39 5.83-5.39h64.08c3.22 0 5.83-2.4 5.83-5.38s-2.6-5.4-5.83-5.4H55.16v-.04c-2.91-.34-5.1-2.63-5.1-5.34 0-2.72 2.19-5 5.1-5.35v-.04h20.4c3.21 0 5.82-2.41 5.82-5.39 0-2.97-2.6-5.39-5.83-5.39H48.61c-3.22 0-5.83-2.4-5.83-5.39s2.6-5.38 5.83-5.38h138.37c3.22 0 5.83 2.4 5.83 5.38s-2.61 5.4-5.83 5.4h-53.9c-3.21 0-5.82 2.4-5.82 5.38s2.61 5.39 5.83 5.39h32.04c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39h-17.48c-3.21 0-5.82 2.4-5.82 5.38s2.6 5.4 5.82 5.4h9.47zm-126-43.1c3.23 0 5.84 2.4 5.84 5.39 0 2.97-2.61 5.38-5.83 5.38s-5.83-2.4-5.83-5.38 2.61-5.4 5.83-5.4zM168.05 25.3h40.79c3.21 0 5.82 2.42 5.82 5.4 0 2.97-2.6 5.38-5.82 5.38h-40.79c-3.21 0-5.82-2.41-5.82-5.39s2.6-5.39 5.82-5.39zm-24.76 0c3.22 0 5.83 2.42 5.83 5.4 0 2.97-2.61 5.38-5.83 5.38s-5.82-2.41-5.82-5.39 2.6-5.39 5.82-5.39zm70.64 21.56h10.2c3.22 0 5.83 2.4 5.83 5.39 0 2.97-2.61 5.38-5.83 5.38h-10.2c-3.21 0-5.82-2.4-5.82-5.38s2.6-5.4 5.82-5.4zM188.43 68.4h21.85c3.22 0 5.83 2.41 5.83 5.39s-2.6 5.39-5.83 5.39h-21.84c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm20.4 21.55h32.04c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38h-32.04c-3.22 0-5.83-2.41-5.83-5.39 0-2.97 2.61-5.39 5.83-5.39zm-139.1 21.56h65.54c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39H69.73c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm87.39 0h10.2c3.21 0 5.82 2.41 5.82 5.39s-2.6 5.39-5.82 5.39h-10.2c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.61-5.38 5.83-5.38z\" /><path fill=\"#85ACB0\" d=\"M211.57 40.06v67.47h-8.44V40.06h8.44zm-16.87 0V73.8h-8.44V40.06h8.44zm-44.64 16.87l2.47 2.47 5.96 5.96h-14.4v-8.43h5.97zm27.77-16.87v16.87h-8.44V40.06h8.44zm-16.87 0v8.44h-8.43v-8.44h8.43z\" /><path fill=\"#FF444F\" d=\"M194.66 78.02a8.4 8.4 0 00-8.4 8.39v6.75l-25.3-25.3v11.9L180.3 99.1h-6.73a8.4 8.4 0 00-8.4 8.4v.03h21.1a8.43 8.43 0 008.43-8.43V78.02h-.04z\" /><path fill=\"#85ACB0\" d=\"M76.96 99.1v8.44h-8.43V99.1h8.43zm50.6-59.04v67.47h-8.43V40.06h8.44zM110.7 73.8v33.74h-8.44V73.8h8.44zM93.83 90.67v16.86h-8.44V90.67h8.44zm-19.34-8.44l-5.96 5.96-2.47 2.48h-5.97v-8.44h14.4z\" /><path fill=\"#FF444F\" d=\"M102.26 40.06H81.18v.04a8.4 8.4 0 008.39 8.4h6.75L76.96 67.84v11.92l25.3-25.3v6.75a8.4 8.4 0 008.4 8.37h.04V48.5a8.43 8.43 0 00-8.44-8.44z\" /></g></svg>;","import React from \"react\";\nexport default ({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"272\" height=\"148\" {...props}><g fill=\"none\"><rect width=\"272\" height=\"148\" fill=\"#FFF\" rx=\"4\" /><rect width=\"272\" height=\"148\" fill=\"var(--general-section-1)\" rx=\"4\" /><path fill=\"var(--fill-normal)\" d=\"M157.12 90.21h32.77c3.22 0 5.83 2.42 5.83 5.4 0 2.99-2.61 5.4-5.83 5.4H40.6c-3.21 0-5.82-2.41-5.82-5.4 0-2.98 2.6-5.4 5.83-5.4h64.08c3.22 0 5.83-2.42 5.83-5.4s-2.6-5.4-5.83-5.4H55.16v-.05c-2.91-.34-5.1-2.64-5.1-5.36s2.19-5.02 5.1-5.36v-.04h20.4c3.21 0 5.82-2.42 5.82-5.4 0-2.99-2.6-5.41-5.83-5.41H48.61c-3.22 0-5.83-2.42-5.83-5.4 0-2.99 2.6-5.4 5.83-5.4h138.37c3.22 0 5.83 2.41 5.83 5.4 0 2.98-2.61 5.4-5.83 5.4h-53.9c-3.21 0-5.82 2.42-5.82 5.4s2.61 5.4 5.83 5.4h32.04c3.22 0 5.83 2.43 5.83 5.41s-2.61 5.4-5.83 5.4h-17.48c-3.21 0-5.82 2.42-5.82 5.4 0 2.99 2.6 5.41 5.82 5.41h9.47zm-126-43.23c3.23 0 5.84 2.42 5.84 5.4 0 3-2.61 5.41-5.83 5.41s-5.83-2.42-5.83-5.4c0-2.99 2.61-5.4 5.83-5.4zm136.92-21.6h40.79c3.21 0 5.82 2.41 5.82 5.4s-2.6 5.4-5.82 5.4h-40.79c-3.21 0-5.82-2.42-5.82-5.4 0-2.99 2.6-5.4 5.82-5.4zm-24.76 0c3.22 0 5.83 2.41 5.83 5.4s-2.61 5.4-5.83 5.4-5.82-2.42-5.82-5.4c0-2.99 2.6-5.4 5.82-5.4zm70.64 21.6h10.2c3.22 0 5.83 2.42 5.83 5.4 0 3-2.61 5.41-5.83 5.41h-10.2c-3.21 0-5.82-2.42-5.82-5.4 0-2.99 2.6-5.4 5.82-5.4zM188.43 68.6h21.85c3.22 0 5.83 2.42 5.83 5.4 0 2.98-2.6 5.4-5.83 5.4h-21.84c-3.22 0-5.83-2.42-5.83-5.4 0-2.98 2.6-5.4 5.83-5.4zm20.4 21.61h32.04c3.22 0 5.83 2.42 5.83 5.4 0 2.99-2.61 5.4-5.83 5.4h-32.04c-3.22 0-5.83-2.41-5.83-5.4 0-2.98 2.61-5.4 5.83-5.4zm-139.1 21.61h65.54c3.22 0 5.83 2.42 5.83 5.4 0 2.99-2.61 5.4-5.83 5.4H69.73c-3.22 0-5.83-2.41-5.83-5.4s2.6-5.4 5.83-5.4zm87.39 0h10.2c3.21 0 5.82 2.42 5.82 5.4 0 2.99-2.6 5.4-5.82 5.4h-10.2c-3.22 0-5.83-2.41-5.83-5.4s2.61-5.4 5.83-5.4z\" /><path fill=\"#85ACB0\" d=\"M165.52 99.37v8.46h-21.09v-8.46h21.09zm29-46.3l14.92 14.95a8.33 8.33 0 011.3 1.75 8.24 8.24 0 010 8.46h-22.39l-8.44-8.46h19.34L194.5 65a8.42 8.42 0 01-2.46-5.95c0-2.23.88-4.37 2.46-5.95l.03-.03zm17.39-12.9v8.46h-67.48v-8.46h67.48z\" /><path fill=\"#FF444F\" d=\"M195.04 86.69v6.7l-15.12-15.16-8.44-8.46h-27.05v8.46H168l21.09 21.14h-6.73a8.4 8.4 0 00-8.4 8.42v.04h21.09a8.45 8.45 0 008.43-8.46V86.7h-8.43z\" /><path fill=\"#85ACB0\" d=\"M127.57 99.37v8.46H60.09v-8.46h67.48zm-1.17-29.6a8.24 8.24 0 010 8.46 8.32 8.32 0 01-1.3 1.75l-14.91 14.95-.03-.03a8.42 8.42 0 01-2.46-5.95c0-2.23.88-4.37 2.46-5.95l4.75-4.77H95.57l8.44-8.46zm-45.22-29.6v8.46H60.09v-8.46h21.09z\" /><path fill=\"#FF444F\" d=\"M110.7 40.17H89.6v.04a8.4 8.4 0 008.4 8.42h6.74L83.67 69.77H60.09v8.46h27.05l8.44-8.46 15.12-15.16v6.7h8.43V48.63a8.45 8.45 0 00-8.43-8.46z\" /></g></svg>;","import React from \"react\";\nexport default ({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"272\" height=\"148\" {...props}><g fill=\"none\"><rect width=\"272\" height=\"148\" fill=\"#FFF\" rx=\"4\" /><rect width=\"272\" height=\"148\" fill=\"var(--general-section-1)\" rx=\"4\" /><path fill=\"var(--fill-normal)\" d=\"M157.12 89.96h32.77c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38H40.6c-3.21 0-5.82-2.41-5.82-5.39 0-2.97 2.6-5.39 5.83-5.39h64.08c3.22 0 5.83-2.4 5.83-5.38s-2.6-5.4-5.83-5.4H55.16v-.04c-2.91-.34-5.1-2.63-5.1-5.34 0-2.72 2.19-5 5.1-5.35v-.04h20.4c3.21 0 5.82-2.41 5.82-5.39 0-2.97-2.6-5.39-5.83-5.39H48.61c-3.22 0-5.83-2.4-5.83-5.39s2.6-5.38 5.83-5.38h138.37c3.22 0 5.83 2.4 5.83 5.38s-2.61 5.4-5.83 5.4h-53.9c-3.21 0-5.82 2.4-5.82 5.38s2.61 5.39 5.83 5.39h32.04c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39h-17.48c-3.21 0-5.82 2.4-5.82 5.38s2.6 5.4 5.82 5.4h9.47zm-126-43.1c3.23 0 5.84 2.4 5.84 5.39 0 2.97-2.61 5.38-5.83 5.38s-5.83-2.4-5.83-5.38 2.61-5.4 5.83-5.4zM168.05 25.3h40.79c3.21 0 5.82 2.42 5.82 5.4 0 2.97-2.6 5.38-5.82 5.38h-40.79c-3.21 0-5.82-2.41-5.82-5.39s2.6-5.39 5.82-5.39zm-24.76 0c3.22 0 5.83 2.42 5.83 5.4 0 2.97-2.61 5.38-5.83 5.38s-5.82-2.41-5.82-5.39 2.6-5.39 5.82-5.39zm70.64 21.56h10.2c3.22 0 5.83 2.4 5.83 5.39 0 2.97-2.61 5.38-5.83 5.38h-10.2c-3.21 0-5.82-2.4-5.82-5.38s2.6-5.4 5.82-5.4zM188.43 68.4h21.85c3.22 0 5.83 2.41 5.83 5.39s-2.6 5.39-5.83 5.39h-21.84c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm20.4 21.55h32.04c3.22 0 5.83 2.42 5.83 5.4s-2.61 5.38-5.83 5.38h-32.04c-3.22 0-5.83-2.41-5.83-5.39 0-2.97 2.61-5.39 5.83-5.39zm-139.1 21.56h65.54c3.22 0 5.83 2.41 5.83 5.39s-2.61 5.39-5.83 5.39H69.73c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.6-5.38 5.83-5.38zm87.39 0h10.2c3.21 0 5.82 2.41 5.82 5.39s-2.6 5.39-5.82 5.39h-10.2c-3.22 0-5.83-2.42-5.83-5.4 0-2.97 2.61-5.38 5.83-5.38z\" /><path fill=\"#85ACB0\" d=\"M211.57 99.1v8.44h-25.3l-8.44-8.44h33.74zm-33.74 0l-8.44 8.44h-25.3V99.1h33.74zm33.74-59.04v8.44h-67.48v-8.44h67.48z\" /><path fill=\"#FF444F\" d=\"M203.13 56.93h-21.08v.04a8.4 8.4 0 008.39 8.4h6.75L177.83 84.7l-19.34-19.34a8.43 8.43 0 00-11.93 0l-2.47 2.48v11.92l8.44-8.43 19.34 19.34a8.43 8.43 0 0011.92 0l19.34-19.34v6.74a8.4 8.4 0 008.4 8.38h.04V65.36a8.43 8.43 0 00-8.44-8.43z\" /><path fill=\"#85ACB0\" d=\"M127.57 99.1v8.44H60.09V99.1h67.48zm0-59.04v8.44H93.83l8.43-8.44h25.3zm-42.17 0l8.43 8.44H60.09v-8.44h25.3z\" /><path fill=\"#FF444F\" d=\"M127.52 61.15a8.4 8.4 0 00-8.39 8.39v6.75L99.8 56.93a8.43 8.43 0 00-11.92 0L68.53 76.27l-8.44-8.43v11.92l2.47 2.47a8.43 8.43 0 0011.93 0L93.83 62.9l19.34 19.34h-6.75a8.4 8.4 0 00-8.37 8.4v.04h21.08a8.43 8.43 0 008.44-8.44V61.15h-.05z\" /></g></svg>;","import React from 'react';\nimport { VideoPlayer } from '@deriv/components';\nimport { useStore } from '@deriv/stores';\nimport { getDescriptionVideoId } from 'Modules/Trading/Helpers/video-config';\n\ntype TContractTypeDescriptionVideo = {\n    data_testid?: string;\n    selected_contract_type?: string;\n};\n\nconst ContractTypeDescriptionVideo = ({ data_testid, selected_contract_type }: TContractTypeDescriptionVideo) => {\n    const { ui } = useStore();\n    const { is_dark_mode_on: is_dark_theme, is_mobile } = ui;\n    if (!selected_contract_type) {\n        return null;\n    }\n    return (\n        <div className='contract-type-info__video'>\n            <VideoPlayer\n                src={getDescriptionVideoId(selected_contract_type, is_dark_theme)}\n                is_mobile={is_mobile}\n                data_testid={data_testid}\n                should_show_controls={true}\n                muted={true}\n                hide_volume_control={true}\n            />\n        </div>\n    );\n};\n\nexport default React.memo(ContractTypeDescriptionVideo);\n","import React from 'react';\nimport ImageAsianUpDown from 'Assets/SvgComponents/trade_explanations/img-asian.svg';\nimport ImageCloseToLow from 'Assets/SvgComponents/trade_explanations/img-close-to-low.svg';\nimport ImageEndsInOut from 'Assets/SvgComponents/trade_explanations/img-ends-in-out.svg';\nimport ImageHighToClose from 'Assets/SvgComponents/trade_explanations/img-high-to-close.svg';\nimport ImageHighToLow from 'Assets/SvgComponents/trade_explanations/img-high-to-low.svg';\nimport ImageReset from 'Assets/SvgComponents/trade_explanations/img-reset.svg';\nimport ImageRunHighLow from 'Assets/SvgComponents/trade_explanations/img-run-high-low.svg';\nimport ImageSpread from 'Assets/SvgComponents/trade_explanations/img-spread.svg';\nimport ImageTickHighLow from 'Assets/SvgComponents/trade_explanations/img-tick-high-low.svg';\nimport ImageTurbos from 'Assets/SvgComponents/trade_explanations/img-turbos.svg';\nimport ContractTypeDescriptionVideo from './contract-type-description-video';\nimport { TRADE_TYPES } from '@deriv/shared';\n\nconst TradeCategoriesGIF = ({\n    category,\n    selected_contract_type,\n}: {\n    category?: string;\n    selected_contract_type?: string;\n}) => {\n    if (category !== selected_contract_type) return null;\n    switch (category) {\n        case TRADE_TYPES.ASIAN:\n            return <ImageAsianUpDown />;\n        case TRADE_TYPES.CALL_PUT_SPREAD:\n            return <ImageSpread />;\n        case TRADE_TYPES.END:\n            return <ImageEndsInOut />;\n        case TRADE_TYPES.EVEN_ODD:\n            return <ContractTypeDescriptionVideo selected_contract_type={selected_contract_type} />;\n        case TRADE_TYPES.HIGH_LOW:\n            return <ContractTypeDescriptionVideo selected_contract_type={selected_contract_type} />;\n        case TRADE_TYPES.LB_CALL:\n            return <ImageCloseToLow />;\n        case TRADE_TYPES.LB_PUT:\n            return <ImageHighToClose />;\n        case TRADE_TYPES.LB_HIGH_LOW:\n            return <ImageHighToLow />;\n        case TRADE_TYPES.RISE_FALL:\n        case TRADE_TYPES.RISE_FALL_EQUAL:\n            return <ContractTypeDescriptionVideo selected_contract_type='rise_fall' />;\n        case TRADE_TYPES.MATCH_DIFF:\n            return <ContractTypeDescriptionVideo selected_contract_type={selected_contract_type} />;\n        case TRADE_TYPES.MULTIPLIER:\n            return <ContractTypeDescriptionVideo selected_contract_type={selected_contract_type} />;\n        case TRADE_TYPES.OVER_UNDER:\n            return <ContractTypeDescriptionVideo selected_contract_type={selected_contract_type} />;\n        case TRADE_TYPES.RESET:\n            return <ImageReset />;\n        case TRADE_TYPES.RUN_HIGH_LOW:\n            return <ImageRunHighLow />;\n        case TRADE_TYPES.ACCUMULATOR:\n            return <ContractTypeDescriptionVideo selected_contract_type={selected_contract_type} />;\n        case TRADE_TYPES.TICK_HIGH_LOW:\n            return <ImageTickHighLow />;\n        case TRADE_TYPES.TOUCH:\n            return <ContractTypeDescriptionVideo selected_contract_type={selected_contract_type} />;\n        case TRADE_TYPES.TURBOS.LONG:\n        case TRADE_TYPES.TURBOS.SHORT:\n            return <ContractTypeDescriptionVideo selected_contract_type='turbos' />;\n        case TRADE_TYPES.VANILLA.CALL:\n        case TRADE_TYPES.VANILLA.PUT:\n            return <ContractTypeDescriptionVideo selected_contract_type='vanilla' />;\n        default:\n            return null;\n    }\n};\n\nexport default TradeCategoriesGIF;\n","import React from 'react';\nimport { Text } from '@deriv/components';\nimport { TRADE_TYPES } from '@deriv/shared';\nimport { Localize } from '@deriv/translations';\n\nconst ContractTypeGlossary = ({\n    category,\n    is_vanilla_fx = false,\n    is_multiplier_fx = false,\n}: {\n    category: string;\n    is_vanilla_fx?: boolean;\n    is_multiplier_fx?: boolean;\n}) => {\n    let content;\n    let trade_category = category;\n    if (trade_category === TRADE_TYPES.VANILLA.CALL && is_vanilla_fx) trade_category = TRADE_TYPES.VANILLA.FX;\n    if (category) {\n        switch (trade_category) {\n            case TRADE_TYPES.ACCUMULATOR:\n                content = [\n                    { type: 'heading', text: <Localize i18n_default_text='Growth rate' /> },\n                    {\n                        type: 'paragraph',\n                        text: (\n                            <Localize i18n_default_text='You can choose a growth rate with values of 1%, 2%, 3%, 4%, and 5%.' />\n                        ),\n                    },\n                    { type: 'heading', text: <Localize i18n_default_text='Payout' /> },\n                    {\n                        type: 'paragraph',\n                        text: <Localize i18n_default_text='Payout is the sum of your initial stake and profit.' />,\n                    },\n                    { type: 'heading', text: <Localize i18n_default_text='Range' /> },\n                    {\n                        type: 'paragraph',\n                        text: (\n                            <Localize i18n_default_text='It is a percentage of the previous spot price. The percentage rate is based on your choice of the index and the growth rate.' />\n                        ),\n                    },\n                    { type: 'heading', text: <Localize i18n_default_text='Previous spot price' /> },\n                    {\n                        type: 'paragraph',\n                        text: <Localize i18n_default_text='Spot price on the previous tick.' />,\n                    },\n                    { type: 'heading', text: <Localize i18n_default_text='Take profit' /> },\n                    {\n                        type: 'paragraph',\n                        text: (\n                            <Localize i18n_default_text='If you select this feature, your trade will be closed automatically at the nearest available asset price when your profit reaches or exceeds the take profit amount. Your profit may be more than the amount you entered depending on the market price at closing.' />\n                        ),\n                    },\n                    { type: 'heading', text: <Localize i18n_default_text='Slippage risk' /> },\n                    {\n                        type: 'paragraph',\n                        text: (\n                            <Localize i18n_default_text='The spot price may change by the time your order reaches our servers. When this happens, your payout may be affected.' />\n                        ),\n                    },\n                ];\n                break;\n            case TRADE_TYPES.TURBOS.LONG:\n            case TRADE_TYPES.TURBOS.SHORT:\n                content = [\n                    { type: 'heading', text: <Localize i18n_default_text='Payout' /> },\n                    {\n                        type: 'paragraph',\n                        text: (\n                            <Localize i18n_default_text='The payout at expiry is equal to the payout per point multiplied by the distance between the final price and the barrier.' />\n                        ),\n                    },\n                    { type: 'heading', text: <Localize i18n_default_text='Expiry' /> },\n                    {\n                        type: 'paragraph',\n                        text: (\n                            <Localize i18n_default_text='This is when your contract will expire based on the duration or end time you’ve selected. If the duration is more than 24 hours, the cut-off time and expiry date will apply instead.' />\n                        ),\n                    },\n                    { type: 'heading', text: <Localize i18n_default_text='Barrier' /> },\n                    {\n                        type: 'paragraph',\n                        text: (\n                            <Localize i18n_default_text='This is the corresponding price level based on the payout per point you’ve selected. If this barrier is ever breached, your contract would be terminated.' />\n                        ),\n                    },\n                    { type: 'heading', text: <Localize i18n_default_text='Payout per point' /> },\n                    {\n                        type: 'paragraph',\n                        text: (\n                            <Localize i18n_default_text='The amount you choose to receive at expiry for every point of change between the final price and the barrier.' />\n                        ),\n                    },\n                    { type: 'heading', text: <Localize i18n_default_text='Final price' /> },\n                    {\n                        type: 'paragraph',\n                        text: (\n                            <Localize i18n_default_text='This is the spot price of the last tick at expiry, i.e. the exit spot.' />\n                        ),\n                    },\n                    { type: 'heading', text: <Localize i18n_default_text='Contract value' /> },\n                    {\n                        type: 'paragraph',\n                        text: (\n                            <Localize i18n_default_text='This is the resale value of your contract, based on the prevailing market conditions (e.g, the current spot), including additional commissions if any.' />\n                        ),\n                    },\n                    { type: 'heading', text: <Localize i18n_default_text='Cut-off time' /> },\n                    {\n                        type: 'paragraph',\n                        text: (\n                            <Localize i18n_default_text='Your contract will expire at exactly 23:59:59 GMT +0 on your selected expiry date.' />\n                        ),\n                    },\n                    { type: 'heading', text: <Localize i18n_default_text='Expiry date' /> },\n                    {\n                        type: 'paragraph',\n                        text: (\n                            <Localize i18n_default_text='Your contract will expire on this date (in GMT), based on the end time you’ve selected.' />\n                        ),\n                    },\n                    { type: 'heading', text: <Localize i18n_default_text='Take Profit' /> },\n                    {\n                        type: 'paragraph',\n                        text: (\n                            <Localize i18n_default_text='If you select this feature, your trade will be closed automatically at the nearest available asset price when your profit reaches or exceeds the take profit amount throughout the contract duration. Your profit may be more than the amount you entered depending on the market price at closing. You may change your take profit amount up to 15 seconds before expiry.' />\n                        ),\n                    },\n                ];\n                break;\n            case TRADE_TYPES.VANILLA.CALL:\n            case TRADE_TYPES.VANILLA.PUT:\n                content = [\n                    { type: 'heading', text: <Localize i18n_default_text='Payout' /> },\n                    {\n                        type: 'paragraph',\n                        text: (\n                            <Localize i18n_default_text='Your payout is equal to the payout per point multiplied by the difference between the final price and the strike price.' />\n                        ),\n                    },\n                    { type: 'heading', text: <Localize i18n_default_text='Final price' /> },\n                    {\n                        type: 'paragraph',\n                        text: <Localize i18n_default_text='This is the spot price of the last tick at expiry.' />,\n                    },\n                    { type: 'heading', text: <Localize i18n_default_text='Strike price' /> },\n                    {\n                        type: 'paragraph',\n                        text: (\n                            <Localize i18n_default_text='You must select the strike price before entering the contract.' />\n                        ),\n                    },\n                    {\n                        type: 'list',\n                        text: [\n                            <Localize\n                                i18n_default_text='If you select \"Call\", you’ll earn a payout if the final price is above the strike price at expiry. Otherwise, you won’t receive a payout.'\n                                key='0'\n                            />,\n                            <Localize\n                                i18n_default_text='If you select \"Put\", you’ll earn a payout if the final price is below the strike price at expiry. Otherwise, you won’t receive a payout.'\n                                key='1'\n                            />,\n                        ],\n                    },\n                    { type: 'heading', text: <Localize i18n_default_text='Expiry' /> },\n                    {\n                        type: 'paragraph',\n                        text: (\n                            <Localize i18n_default_text='This is when your contract will expire based on the Duration or End time you’ve selected.' />\n                        ),\n                    },\n                    {\n                        type: 'list',\n                        text: [\n                            <Localize\n                                i18n_default_text='If the duration is more than 24 hours, the Cut-off time and Expiry date will apply instead.'\n                                key='0'\n                            />,\n                        ],\n                    },\n                    { type: 'heading', text: <Localize i18n_default_text='Payout per point' /> },\n                    {\n                        type: 'paragraph',\n                        text: (\n                            <Localize i18n_default_text='We calculate this based on the strike price and duration you’ve selected.' />\n                        ),\n                    },\n                    { type: 'heading', text: <Localize i18n_default_text='Contract value' /> },\n                    {\n                        type: 'paragraph',\n                        text: (\n                            <Localize i18n_default_text='We’ll offer to buy your contract at this price should you choose to sell it before its expiry. This is based on several factors, such as the current spot price, duration, etc. However, we won’t offer a contract value if the remaining duration is below 60 seconds.' />\n                        ),\n                    },\n                    { type: 'heading', text: <Localize i18n_default_text='Cut-off time' /> },\n                    {\n                        type: 'paragraph',\n                        text: (\n                            <Localize i18n_default_text='Contracts will expire at exactly 23:59:59 GMT on your selected expiry date.' />\n                        ),\n                    },\n                    { type: 'heading', text: <Localize i18n_default_text='Expiry date' /> },\n                    {\n                        type: 'paragraph',\n                        text: (\n                            <Localize i18n_default_text='Your contract will expire on this date (in GMT), based on the End time you’ve selected.' />\n                        ),\n                    },\n                ];\n                break;\n            case TRADE_TYPES.MULTIPLIER:\n                content = [\n                    { type: 'heading', text: <Localize i18n_default_text='Stop out' /> },\n                    {\n                        type: 'paragraph',\n                        text: (\n                            <Localize i18n_default_text='Your trade will be closed automatically at the nearest available asset price when your loss reaches a certain percentage of your stake, but your loss never exceeds your stake. This percentage depends on the chosen underlying asset and the Multiplier.' />\n                        ),\n                    },\n                    { type: 'heading', text: <Localize i18n_default_text='Take profit' /> },\n                    {\n                        type: 'paragraph',\n                        text: (\n                            <Localize i18n_default_text='If you select this feature, your trade will be closed automatically at the nearest available asset price when your profit reaches or exceeds the take profit amount. Your profit may be more than the amount you entered depending on the market price at closing.' />\n                        ),\n                    },\n                    { type: 'heading', text: <Localize i18n_default_text='Stop loss' /> },\n                    {\n                        type: 'paragraph',\n                        text: (\n                            <Localize i18n_default_text='If you select this feature, your trade will be closed automatically at the nearest available asset price when your loss reaches or exceeds the stop loss amount. Your loss may be more than the amount you entered depending on the market price at closing.' />\n                        ),\n                    },\n                    {\n                        type: is_multiplier_fx ? '' : 'heading',\n                        text: <Localize i18n_default_text='Deal cancellation' />,\n                    },\n                    {\n                        type: is_multiplier_fx ? '' : 'paragraph',\n                        text: (\n                            <Localize i18n_default_text='If you select this feature, you can cancel your trade within a chosen time frame if the asset price moves against your favour. You will get your stake back without profit/loss. We charge a small fee for this. Take profit and stop loss are disabled when deal cancellation is active.' />\n                        ),\n                    },\n                    { type: 'heading', text: <Localize i18n_default_text='Slippage risk' /> },\n                    {\n                        type: 'paragraph',\n                        text: (\n                            <Localize i18n_default_text='Slippage happens when the asset price changes by the time it reaches our servers.' />\n                        ),\n                    },\n                    { type: 'heading', text: <Localize i18n_default_text='Entry spot' /> },\n                    {\n                        type: 'paragraph',\n                        text: (\n                            <Localize i18n_default_text='We use next-tick-execution mechanism, which is the next asset price when the trade opening is processed by our servers.' />\n                        ),\n                    },\n                    { type: 'heading', text: <Localize i18n_default_text='Exit spot' /> },\n                    {\n                        type: 'paragraph',\n                        text: (\n                            <Localize i18n_default_text='The latest asset price when the trade closure is processed by our servers.' />\n                        ),\n                    },\n                ];\n                break;\n            case TRADE_TYPES.VANILLA.FX:\n                content = [\n                    { type: 'heading', text: <Localize i18n_default_text='Strike price' /> },\n                    {\n                        type: 'paragraph',\n                        text: (\n                            <Localize i18n_default_text='You must select the strike price before entering the contract.' />\n                        ),\n                    },\n                    {\n                        type: 'list',\n                        text: [\n                            <Localize\n                                i18n_default_text='If you select \"Call\", you’ll earn a payout if the final price is above the strike price at expiry. Otherwise, you won’t receive a payout.'\n                                key='0'\n                            />,\n                            <Localize\n                                i18n_default_text='If you select \"Put\", you’ll earn a payout if the final price is below the strike price at expiry. Otherwise, you won’t receive a payout.'\n                                key='1'\n                            />,\n                        ],\n                    },\n                    { type: 'heading', text: <Localize i18n_default_text='Payout' /> },\n                    {\n                        type: 'paragraph',\n                        text: (\n                            <Localize\n                                i18n_default_text='Your payout is equal to the payout per pip multiplied by the difference, <0>in pips</0>, between the final price and the strike price.'\n                                components={[<strong key={0} />]}\n                            />\n                        ),\n                    },\n                    { type: 'heading', text: <Localize i18n_default_text='Payout per pip' /> },\n                    {\n                        type: 'paragraph',\n                        text: (\n                            <Localize i18n_default_text='We calculate this based on the strike price and duration you’ve selected.' />\n                        ),\n                    },\n                    { type: 'heading', text: <Localize i18n_default_text='Final price' /> },\n                    {\n                        type: 'paragraph',\n                        text: <Localize i18n_default_text='Spot price of the last tick upon reaching expiry.' />,\n                    },\n                    { type: 'heading', text: <Localize i18n_default_text='Expiry' /> },\n                    {\n                        type: 'paragraph',\n                        text: (\n                            <Localize i18n_default_text='This is when your contract will expire based on the Duration or End time you’ve selected.' />\n                        ),\n                    },\n                    {\n                        type: 'list',\n                        text: [\n                            <Localize\n                                i18n_default_text='If the duration is more than 24 hours, the Cut-off time and Expiry date will apply instead.'\n                                key='0'\n                            />,\n                        ],\n                    },\n                    { type: 'heading', text: <Localize i18n_default_text='Cut-off time' /> },\n                    {\n                        type: 'paragraph',\n                        text: (\n                            <Localize i18n_default_text='Contracts will expire at exactly 14:00:00 GMT on your selected expiry date.' />\n                        ),\n                    },\n                    { type: 'heading', text: <Localize i18n_default_text='Expiry date' /> },\n                    {\n                        type: 'paragraph',\n                        text: (\n                            <Localize i18n_default_text='Your contract will expire on this date (in GMT), based on the End time you’ve selected.' />\n                        ),\n                    },\n                    { type: 'heading', text: <Localize i18n_default_text='Contract value' /> },\n                    {\n                        type: 'paragraph',\n                        text: (\n                            <Localize i18n_default_text='We’ll offer to buy your contract at this price should you choose to sell it before its expiry. This is based on several factors, such as the current spot price, duration, etc. However, we won’t offer a contract value if the remaining duration is below 24 hours.' />\n                        ),\n                    },\n                ];\n                break;\n            default:\n                content = [];\n                break;\n        }\n    }\n    return (\n        <React.Fragment>\n            {content?.map(({ type, text }: { type: string; text: JSX.Element | JSX.Element[] }) => {\n                if (type === 'heading' && !Array.isArray(text)) {\n                    return (\n                        <Text\n                            as='h2'\n                            key={text.props.i18n_default_text}\n                            weight='bold'\n                            className='contract-type-info__content-glossary--heading'\n                        >\n                            {text}\n                        </Text>\n                    );\n                }\n                if (type === 'paragraph' && !Array.isArray(text)) {\n                    return (\n                        <Text as='p' key={text.props.i18n_default_text}>\n                            {text}\n                        </Text>\n                    );\n                }\n                if (type === 'list' && Array.isArray(text)) {\n                    return (\n                        <ul key={text[0].props.i18n_default_text}>\n                            {text.map(list_item_text => (\n                                <li key={list_item_text.props.i18n_default_text}>{list_item_text}</li>\n                            ))}\n                        </ul>\n                    );\n                }\n            })}\n        </React.Fragment>\n    );\n};\n\nexport default ContractTypeGlossary;\n","import React from 'react';\nimport { Button, ThemedScrollbars, ButtonToggle, Dropdown } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport { clickAndKeyEventHandler, TRADE_TYPES } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport { Analytics } from '@deriv-com/analytics';\nimport TradeCategories from 'Assets/Trading/Categories/trade-categories';\nimport TradeCategoriesGIF from 'Assets/Trading/Categories/trade-categories-gif';\nimport { getContractTypes } from '../../../../Helpers/contract-type';\nimport ContractTypeGlossary from './contract-type-glossary';\nimport classNames from 'classnames';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { TContractType, TList } from '../types';\n\ntype TInfo = {\n    handleSelect: (\n        type: TContractType,\n        e: React.MouseEvent<HTMLDivElement | HTMLButtonElement | HTMLInputElement>\n    ) => void;\n    item: TContractType;\n    list: TList[];\n    info_banner?: React.ReactNode;\n    selected_value: string;\n};\n\nconst TABS = {\n    DESCRIPTION: 'description' as const,\n    GLOSSARY: 'glossary' as const,\n};\n\ntype TSelectedTab = 'description' | 'glossary';\n\nconst Info = observer(({ handleSelect, item, selected_value, list, info_banner }: TInfo) => {\n    const { cached_multiplier_cancellation_list } = useTraderStore();\n    const {\n        ui: { is_mobile },\n        modules: {\n            trade: { is_vanilla_fx },\n        },\n    } = useStore();\n    const { RISE_FALL, RISE_FALL_EQUAL, TURBOS, VANILLA } = TRADE_TYPES;\n    const CONTRACT_TYPE_SUBSTITUTE = {\n        [RISE_FALL_EQUAL]: RISE_FALL,\n        [TURBOS.SHORT]: TURBOS.LONG,\n        [VANILLA.PUT]: VANILLA.CALL,\n    };\n    const [selected_tab, setSelectedTab] = React.useState<TSelectedTab>(TABS.DESCRIPTION);\n    const [selected_contract_type, setSelectedContractType] = React.useState(\n        CONTRACT_TYPE_SUBSTITUTE[selected_value] ?? selected_value\n    );\n    const contract_types: TContractType[] | undefined = getContractTypes(list, item)?.filter(\n        (i: { value: TContractType['value'] }) =>\n            i.value !== RISE_FALL_EQUAL && i.value !== TURBOS.SHORT && i.value !== VANILLA.PUT\n    );\n    const has_toggle_buttons = /accumulator|turbos|vanilla|multiplier/i.test(selected_contract_type);\n    const should_show_video =\n        /accumulator|vanilla|multiplier|high_low|turbos|match_diff|even_odd|over_under|rise_fall|touch/i.test(\n            selected_contract_type\n        );\n    const is_description_tab_selected = selected_tab === TABS.DESCRIPTION || !has_toggle_buttons;\n    const is_glossary_tab_selected = selected_tab === TABS.GLOSSARY && has_toggle_buttons;\n    const width = is_mobile ? '328' : '528';\n    const scroll_bar_height = has_toggle_buttons ? '464px' : '560px';\n    const button_name = contract_types?.find(item => item.value === selected_contract_type)?.text;\n\n    const onClickGlossary = (e?: React.MouseEvent<HTMLElement> | React.KeyboardEvent<HTMLElement>) => {\n        clickAndKeyEventHandler(() => setSelectedTab(TABS.GLOSSARY), e);\n    };\n\n    const is_unavailable = !!list[0].contract_categories?.find(\n        item => item.is_unavailable && item.contract_types.find(type => type.value === selected_contract_type)\n    );\n\n    const should_show_dropdown = Number(contract_types?.length) > 1;\n\n    React.useEffect(() => {\n        return () => {\n            Analytics.trackEvent('ce_trade_types_form', {\n                action: 'info_close',\n            });\n        };\n    }, []);\n\n    React.useEffect(() => {\n        if (has_toggle_buttons) {\n            Analytics.trackEvent('ce_trade_types_form', {\n                action: 'info_switcher',\n                info_switcher_mode: selected_tab,\n                trade_type_name: contract_types?.find(item => item.value === selected_contract_type)?.text,\n            });\n        }\n    }, [selected_tab]);\n\n    const cards = contract_types?.map((type: TContractType) => {\n        if (type.value !== selected_contract_type) return null;\n        return (\n            <div key={type.value} className='contract-type-info__card'>\n                <ThemedScrollbars\n                    className={classNames('contract-type-info__scrollbars', {\n                        'contract-type-info__scrollbars-description--active': is_description_tab_selected,\n                        'contract-type-info__scrollbars-glossary contract-type-info__scrollbars-glossary--active ':\n                            is_glossary_tab_selected,\n                    })}\n                    style={{\n                        left: `${is_description_tab_selected ? '-' : ''}${width}px`,\n                        transform: `translate3d(${is_description_tab_selected ? '' : '-'}${width}px, 0, 0)`,\n                    }}\n                    height={is_mobile ? '' : scroll_bar_height}\n                    autohide={false}\n                >\n                    <div\n                        className={classNames('contract-type-info__content', {\n                            'contract-type-info__gif': is_description_tab_selected,\n                            'contract-type-info__gif--has-toggle-buttons': has_toggle_buttons,\n                            'contract-type-info__gif--has-video': should_show_video && is_description_tab_selected,\n                        })}\n                    >\n                        {is_description_tab_selected ? (\n                            <React.Fragment>\n                                <TradeCategoriesGIF\n                                    category={type.value}\n                                    selected_contract_type={selected_contract_type}\n                                />\n                                <TradeCategories\n                                    category={type.value}\n                                    onClick={onClickGlossary}\n                                    is_vanilla_fx={is_vanilla_fx}\n                                    is_multiplier_fx={!cached_multiplier_cancellation_list?.length}\n                                />\n                            </React.Fragment>\n                        ) : (\n                            <ContractTypeGlossary\n                                category={type.value}\n                                is_vanilla_fx={is_vanilla_fx}\n                                is_multiplier_fx={!cached_multiplier_cancellation_list?.length}\n                            />\n                        )}\n                    </div>\n                </ThemedScrollbars>\n            </div>\n        );\n    });\n\n    return (\n        <React.Fragment>\n            {should_show_dropdown && (\n                <Dropdown\n                    id='dt_contract_type_dropdown'\n                    className='contract-type-info__dropdown'\n                    list={contract_types as React.ComponentProps<typeof Dropdown>['list']}\n                    name='contract_type_dropdown'\n                    value={selected_contract_type}\n                    should_autohide={false}\n                    should_scroll_to_selected\n                    onChange={e => setSelectedContractType(e.target.value)}\n                />\n            )}\n            {is_unavailable && <div className='contract-type-info__banner-wrapper'>{info_banner}</div>}\n            {has_toggle_buttons && (\n                <div className='contract-type-info__button-wrapper'>\n                    <ButtonToggle\n                        buttons_arr={[\n                            { text: localize('Description'), value: TABS.DESCRIPTION },\n                            { text: localize('Glossary'), value: TABS.GLOSSARY },\n                        ]}\n                        name='description_glossary_filter'\n                        is_animated\n                        has_rounded_button\n                        onChange={e => {\n                            setSelectedTab(e.target.value as TSelectedTab);\n                        }}\n                        value={selected_tab}\n                    />\n                </div>\n            )}\n            <div\n                className={classNames('contract-type-info', {\n                    'contract-type-info--has-only-toggle-buttons':\n                        has_toggle_buttons && !is_unavailable && !should_show_dropdown,\n                    'contract-type-info--has-only-dropdown':\n                        !has_toggle_buttons && !is_unavailable && should_show_dropdown,\n                    'contract-type-info--has-dropdown-and-toggle-buttons':\n                        has_toggle_buttons && !is_unavailable && should_show_dropdown,\n                    'contract-type-info--has-dropdown-and-info':\n                        !has_toggle_buttons && is_unavailable && should_show_dropdown,\n                    'contract-type-info--has-all-containers':\n                        has_toggle_buttons && is_unavailable && should_show_dropdown,\n                })}\n                style={{\n                    width: is_mobile ? '328px' : '528px',\n                }}\n            >\n                {cards}\n            </div>\n            <div className='contract-type-info__trade-type-btn-wrapper'>\n                <Button\n                    id={`dt_contract_info_${selected_contract_type}_btn`}\n                    className='contract-type-info__button'\n                    onClick={e =>\n                        handleSelect(\n                            {\n                                value:\n                                    selected_contract_type === CONTRACT_TYPE_SUBSTITUTE[selected_value]\n                                        ? selected_value\n                                        : selected_contract_type,\n                            },\n                            e\n                        )\n                    }\n                    text={localize('Choose {{contract_type}}', {\n                        contract_type: button_name ?? '',\n                        interpolation: { escapeValue: false },\n                    })}\n                    secondary\n                    is_disabled={is_unavailable}\n                />\n            </div>\n        </React.Fragment>\n    );\n});\n\nexport default Info;\n","import React from 'react';\nimport { Icon, Text } from '@deriv/components';\nimport { clickAndKeyEventHandler } from '@deriv/shared';\n\ntype THeader = {\n    onClickBack?: () => void;\n    onClose?: () => void;\n    should_render_arrow?: boolean;\n    should_render_close?: boolean;\n    text_size?: string;\n    title: string;\n};\n\nconst Header = ({\n    onClickBack,\n    onClose,\n    should_render_arrow = true,\n    should_render_close = false,\n    text_size = 's',\n    title,\n}: THeader) => (\n    <div className='contract-type-info__action-bar'>\n        {should_render_arrow && (\n            <span\n                className='contract-type-info__icon'\n                onClick={e => clickAndKeyEventHandler(onClickBack, e)}\n                onKeyDown={e => clickAndKeyEventHandler(onClickBack, e)}\n            >\n                <Icon icon='IcArrowLeftBold' />\n            </span>\n        )}\n        <Text size={text_size} weight='bold' color='prominent' className='contract-type-info__title'>\n            {title}\n        </Text>\n        {should_render_close && (\n            <span\n                className='contract-type-info__icon-cross'\n                onClick={e => clickAndKeyEventHandler(onClose, e)}\n                onKeyDown={e => clickAndKeyEventHandler(onClose, e)}\n            >\n                <Icon icon='IcCross' />\n            </span>\n        )}\n    </div>\n);\n\nexport default Header;\n","import Info from './contract-type-info';\n\nexport { default as Header } from './contract-type-info-header';\n\nexport default Info;\n","import React from 'react';\nimport { Icon, Input } from '@deriv/components';\nimport { localize } from '@deriv/translations';\n\ntype TSearchInput = {\n    onChange: React.ChangeEventHandler<HTMLInputElement | HTMLTextAreaElement | null>;\n    onBlur: React.FocusEventHandler<HTMLInputElement | HTMLTextAreaElement | null> | undefined;\n    onClickClearInput: () => void;\n    value: string;\n};\n\nconst SearchInput = React.forwardRef<HTMLInputElement & HTMLTextAreaElement, TSearchInput>(\n    ({ onChange, onClickClearInput, onBlur, value }, ref) => (\n        <Input\n            ref={ref}\n            data-lpignore='true'\n            leading_icon={<Icon icon='IcSearch' />}\n            trailing_icon={value ? <Icon icon='IcCloseCircle' onClick={onClickClearInput} /> : undefined}\n            placeholder={localize('Search')}\n            type='text'\n            onChange={onChange}\n            onBlur={onBlur}\n            value={value}\n        />\n    )\n);\n\nSearchInput.displayName = 'SearchInput';\n\nexport default React.memo(SearchInput);\n","import React from 'react';\nimport { localize } from '@deriv/translations';\nimport { Text } from '@deriv/components';\n\nconst NoResultsMessage = ({ text }: { text: string }) => (\n    <div className='no-results-found'>\n        <h2 className='no-results-found__title'>\n            {localize('No results for \"{{text}}\"', { text, interpolation: { escapeValue: false } })}\n        </h2>\n        <Text as='p' size='xxs' align='center' color='less-prominent' className='no-results-found__subtitle'>\n            {localize('Try checking your spelling or use a different term')}\n        </Text>\n    </div>\n);\n\nexport default NoResultsMessage;\n","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { Loading, ThemedScrollbars, VerticalTab } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport SearchInput from './search-input';\nimport NoResultsMessage from './no-results-message';\nimport { Header } from '../ContractTypeInfo/index';\nimport { getContractCategoryKey } from '../../../../Helpers/contract-type';\nimport { TList } from '../types';\nimport ContractType from '../contract-type';\n\ntype TDialog = {\n    categories: TList[];\n    info_banner?: React.ReactNode;\n    item: React.ComponentProps<typeof ContractType.Info>['item'];\n    selected?: string;\n    children?: React.ReactNode;\n    is_info_dialog_open?: boolean;\n    is_open?: boolean;\n    onBackButtonClick?: () => void;\n    onCategoryClick?: (e: React.ComponentProps<typeof VerticalTab.Headers>['selected']) => void;\n    onChangeInput?: (e: string) => void;\n    onSearchBlur?: React.FocusEventHandler<HTMLInputElement | HTMLTextAreaElement | null>;\n    onClose?: () => void;\n    show_loading?: boolean;\n    learn_more_banner?: React.ReactNode;\n    hide_back_button?: boolean;\n    title?: string;\n};\n\nconst Dialog = ({\n    categories,\n    children,\n    info_banner,\n    is_info_dialog_open,\n    is_open,\n    item,\n    onBackButtonClick,\n    onCategoryClick,\n    onChangeInput,\n    onSearchBlur,\n    onClose,\n    selected,\n    show_loading,\n    learn_more_banner,\n    hide_back_button,\n    title,\n}: React.PropsWithChildren<TDialog>) => {\n    const input_ref = React.useRef<(HTMLInputElement & HTMLTextAreaElement) | null>(null);\n    const [input_value, setInputValue] = React.useState('');\n    const contract_category = getContractCategoryKey(categories, item);\n    const selected_item = selected ? { key: selected } : { key: contract_category };\n    const selected_category_contract = !categories?.find(category => category.key === selected_item.key)\n        ?.contract_categories?.length;\n    const onChange: React.ComponentProps<typeof VerticalTab.Headers>['onChange'] = e => {\n        if (is_info_dialog_open) {\n            onBackButtonClick?.();\n        }\n        if (input_value) {\n            onClickClearInput();\n        }\n        if (onCategoryClick) {\n            onCategoryClick(e);\n        }\n    };\n\n    const onChangeInputValue = (e: React.ChangeEvent<HTMLInputElement>) => {\n        setInputValue(e.target.value);\n        onChangeInput?.(e.target.value);\n    };\n\n    const onClickClearInput = () => {\n        input_ref?.current?.focus();\n        setInputValue('');\n        onChangeInput?.('');\n    };\n\n    const renderChildren = () => {\n        if (!is_info_dialog_open) {\n            return <ThemedScrollbars height='calc(100vh - 172px)'>{children}</ThemedScrollbars>;\n        }\n        return children;\n    };\n    const action_bar_item = (\n        <SearchInput\n            ref={input_ref}\n            onChange={onChangeInputValue}\n            onClickClearInput={onClickClearInput}\n            onBlur={onSearchBlur}\n            value={input_value}\n        />\n    );\n    return (\n        <CSSTransition\n            in={is_open}\n            timeout={100}\n            classNames={{\n                enter: 'contract-type-dialog--enter',\n                enterDone: 'contract-type-dialog--enterDone',\n                exit: 'contract-type-dialog--exit',\n            }}\n            unmountOnExit\n        >\n            <div className='contract-type-dialog' data-testid='dt_contract_wrapper'>\n                <div className='contract-type-dialog__wrapper'>\n                    {show_loading ? (\n                        <Loading is_fullscreen={false} />\n                    ) : (\n                        <React.Fragment>\n                            {!is_info_dialog_open ? (\n                                <VerticalTab.Layout>\n                                    <VerticalTab.Headers\n                                        header_title={localize('Trade types')}\n                                        items={categories}\n                                        selected={selected_item}\n                                        onChange={onChange}\n                                        selectedKey='key'\n                                    />\n                                    <div className='dc-vertical-tab__content'>\n                                        <div className='dc-vertical-tab__action-bar'>{action_bar_item}</div>\n                                        <div className='dc-vertical-tab__content-container'>\n                                            {selected_category_contract && <NoResultsMessage text={input_value} />}\n                                            {info_banner}\n                                            {learn_more_banner}\n                                            {renderChildren()}\n                                        </div>\n                                    </div>\n                                </VerticalTab.Layout>\n                            ) : (\n                                <React.Fragment>\n                                    <div className='dc-vertical-tab__action-bar dc-vertical-tab__action-bar--contract-type-info-header'>\n                                        <Header\n                                            title={title || item.text || ''}\n                                            onClickBack={onBackButtonClick}\n                                            onClose={onClose}\n                                            should_render_arrow={!hide_back_button}\n                                            should_render_close={hide_back_button}\n                                        />\n                                    </div>\n                                    {renderChildren()}\n                                </React.Fragment>\n                            )}\n                        </React.Fragment>\n                    )}\n                </div>\n            </div>\n        </CSSTransition>\n    );\n};\n\nexport default Dialog;\n","import Dialog from './contract-type-menu';\n\nexport default Dialog;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Icon } from '@deriv/components';\nimport { TRADE_TYPES } from '@deriv/shared';\n\ntype TIconTradeCategory = {\n    category: string;\n    className?: string;\n};\n\nconst IconTradeCategory = ({ category, className }: TIconTradeCategory) => {\n    let IconCategory;\n    if (category) {\n        switch (category) {\n            case TRADE_TYPES.RISE_FALL:\n            case TRADE_TYPES.RISE_FALL_EQUAL:\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeCall' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypePut' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case TRADE_TYPES.HIGH_LOW:\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeCallBarrier' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypePutBarrier' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case TRADE_TYPES.END:\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeExpirymiss' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeExpiryrange' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case TRADE_TYPES.STAY:\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeRange' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeUpordown' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case TRADE_TYPES.MATCH_DIFF:\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeDigitmatch' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeDigitdiff' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case TRADE_TYPES.EVEN_ODD:\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeDigiteven' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeDigitodd' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case TRADE_TYPES.OVER_UNDER:\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeDigitover' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeDigitunder' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case TRADE_TYPES.TOUCH:\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeOnetouch' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeNotouch' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case TRADE_TYPES.ASIAN:\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeAsianu' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeAsiand' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case TRADE_TYPES.LB_CALL:\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <Icon icon='IcTradetypeLbcall' className='category-type' color='brand' />\n                    </div>\n                );\n                break;\n            case TRADE_TYPES.LB_PUT:\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <Icon icon='IcTradetypeLbput' className='category-type' color='brand' />\n                    </div>\n                );\n                break;\n            case TRADE_TYPES.LB_HIGH_LOW:\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <Icon icon='IcTradetypeLbhighlow' className='category-type' color='brand' />\n                    </div>\n                );\n                break;\n            case TRADE_TYPES.RUN_HIGH_LOW:\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeRunhigh' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeRunlow' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case TRADE_TYPES.RESET:\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeResetcall' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeResetput' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case TRADE_TYPES.TICK_HIGH_LOW:\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeTickhigh' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeTicklow' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case TRADE_TYPES.CALL_PUT_SPREAD:\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeCallspread' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypePutspread' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case TRADE_TYPES.MULTIPLIER:\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeMultup' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeMultdown' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case TRADE_TYPES.ACCUMULATOR:\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <Icon icon='IcTradetypeAccu' className='category-type' color='brand' />\n                    </div>\n                );\n                break;\n            case TRADE_TYPES.TURBOS.LONG:\n            case TRADE_TYPES.TURBOS.SHORT:\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeTurboslong' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeTurbosshort' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            case TRADE_TYPES.VANILLA.CALL:\n            case TRADE_TYPES.VANILLA.PUT:\n                IconCategory = (\n                    <React.Fragment>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeVanillaLongCall' className='category-type' color='brand' />\n                        </div>\n                        <div className='category-wrapper'>\n                            <Icon icon='IcTradetypeVanillaLongPut' className='category-type' color='brand' />\n                        </div>\n                    </React.Fragment>\n                );\n                break;\n            default:\n                IconCategory = (\n                    <div className='category-wrapper'>\n                        <Icon icon='IcUnknown' className='category-type' color='brand' />\n                    </div>\n                );\n                break;\n        }\n    }\n    return (\n        <div className={classNames('categories-container', className)} data-testid='dt-categories-container'>\n            {IconCategory}\n        </div>\n    );\n};\n\nexport default IconTradeCategory;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Icon } from '@deriv/components';\nimport IconTradeCategory from 'Assets/Trading/Categories/icon-trade-categories';\nimport { findContractCategory } from '../../../Helpers/contract-type';\nimport { TContractCategory, TContractType, TList } from './types';\nimport { useDevice } from '@deriv-com/ui';\n\ntype TDisplay = {\n    is_open: boolean;\n    name: string;\n    list: TContractCategory[];\n    onClick: () => void;\n    value: string;\n};\n\nconst Display = ({ is_open, name, list, onClick, value }: TDisplay) => {\n    const { isMobile } = useDevice();\n    const getDisplayText = () =>\n        findContractCategory(list as unknown as TList[], { value })?.contract_types?.find((item: TContractType) =>\n            item.value.includes(value)\n        )?.text;\n\n    return (\n        <div\n            data-testid='dt_contract_dropdown'\n            className={classNames('contract-type-widget__display', {\n                'contract-type-widget__display--clicked': is_open,\n            })}\n            onClick={onClick}\n        >\n            <IconTradeCategory category={value} className='contract-type-widget__icon-wrapper' />\n            <span data-name={name} data-value={value}>\n                {getDisplayText()}\n            </span>\n            {isMobile ? (\n                <Icon icon='IcChevronRight' size={20} className='contract-type-widget__select-arrow--right' />\n            ) : (\n                <Icon\n                    icon='IcChevronDown'\n                    className={classNames(\n                        'contract-type-widget__select-arrow',\n                        'contract-type-widget__select-arrow--left'\n                    )}\n                />\n            )}\n        </div>\n    );\n};\n\nexport default Display;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Text } from '@deriv/components';\nimport IconTradeCategory from 'Assets/Trading/Categories/icon-trade-categories';\nimport { TContractType, TFilteredContractType } from './types';\n\ntype TItem = {\n    contract_types: TFilteredContractType[];\n    handleSelect?: (clicked_item: TContractType, e: React.MouseEvent<HTMLDivElement>) => void;\n    value?: string;\n};\n\nconst Item = ({ contract_types, handleSelect, value }: TItem) => (\n    <React.Fragment>\n        {contract_types.map(type => {\n            const tradeType = { ...type, value: Array.isArray(type.value) ? type.value[0] : type.value };\n            return (\n                <div\n                    id={`dt_contract_${tradeType.value}_item`}\n                    data-testid='dt_contract_item'\n                    key={tradeType.value}\n                    className={classNames('contract-type-item', {\n                        'contract-type-item--selected': type.value.includes(value ?? ''),\n                    })}\n                    onClick={e => handleSelect?.(tradeType, e)}\n                >\n                    <IconTradeCategory category={tradeType.value} className='contract-type-item__icon-wrapper' />\n                    <Text size='xs' className='contract-type-item__title'>\n                        {tradeType.text}\n                    </Text>\n                </div>\n            );\n        })}\n    </React.Fragment>\n);\n\nexport default Item;\n","import React from 'react';\nimport Item from './contract-type-item';\nimport { localize } from '@deriv/translations';\nimport { TRADE_TYPES } from '@deriv/shared';\nimport { Text } from '@deriv/components';\nimport classNames from 'classnames';\nimport { TContractType, TContractCategory, TFilteredContractType } from './types';\n\ntype TListProps = {\n    handleSelect?: (\n        clicked_item: TContractType,\n        e: React.MouseEvent<HTMLDivElement | HTMLButtonElement | HTMLInputElement>\n    ) => void;\n    list: TContractCategory[];\n    should_show_info_banner?: boolean;\n    value?: string;\n};\n\nconst List = ({ handleSelect, list, should_show_info_banner, value }: TListProps) => (\n    <React.Fragment>\n        {list.map((contract_category, index) => {\n            const tradeTypes = contract_category.contract_types;\n            const contract_types = tradeTypes?.reduce<TFilteredContractType[]>((acc, contract_type) => {\n                let newValue: string | string[] = contract_type.value;\n                const { RISE_FALL, RISE_FALL_EQUAL, TURBOS, VANILLA } = TRADE_TYPES;\n                if (contract_type.value === RISE_FALL && tradeTypes.some(c => c.value === RISE_FALL_EQUAL)) {\n                    newValue = [RISE_FALL, RISE_FALL_EQUAL];\n                }\n                if (contract_type.value === TURBOS.LONG && tradeTypes.some(c => c.value === TURBOS.SHORT)) {\n                    newValue = [TURBOS.LONG, TURBOS.SHORT];\n                }\n                if (contract_type.value === VANILLA.CALL && tradeTypes.some(c => c.value === VANILLA.PUT)) {\n                    newValue = [VANILLA.CALL, VANILLA.PUT];\n                }\n                if ([TURBOS.SHORT, VANILLA.PUT, RISE_FALL_EQUAL].includes(contract_type.value)) {\n                    return acc;\n                }\n                return [...acc, { ...contract_type, value: newValue }];\n            }, []);\n\n            return (\n                <div\n                    key={contract_category.key}\n                    className={classNames('contract-type-list', {\n                        'contract-type-list--unavailable-category': contract_category.is_unavailable,\n                        'contract-type-list--no-top-padding': should_show_info_banner && index === 0,\n                    })}\n                    data-testid='dt_contract_list'\n                >\n                    <div className='contract-type-item__container'>\n                        <Text size='xs' className='contract-type-list__label'>\n                            {contract_category.label}\n                        </Text>\n                    </div>\n                    <div className='contract-type-list__wrapper'>\n                        <Item\n                            contract_types={contract_types}\n                            handleSelect={contract_category.is_unavailable ? undefined : handleSelect}\n                            value={value}\n                        />\n                    </div>\n                </div>\n            );\n        })}\n    </React.Fragment>\n);\n\nexport default List;\n","import React from 'react';\nimport Dialog from './contract-type-dialog';\nimport Display from './contract-type-display';\nimport List from './contract-type-list';\nimport Info from './ContractTypeInfo';\n\nconst ContractType = ({ children }: React.PropsWithChildren<{ children: React.ReactNode }>) => <>{children}</>;\n\nContractType.Dialog = Dialog;\nContractType.Display = Display;\nContractType.List = List;\nContractType.Info = Info;\n\nexport default ContractType;\n","import React from 'react';\nimport { MobileDialog } from '@deriv/components';\nimport { useDevice } from '@deriv-com/ui';\nimport { Header } from './ContractTypeInfo';\nimport { localize } from '@deriv/translations';\nimport ContractTypeMenu from './ContractTypeMenu';\n\ntype TContractTypeDialog = {\n    is_info_dialog_open: boolean;\n    onClose: () => void;\n    is_open: boolean;\n    learn_more_banner?: React.ReactNode;\n    hide_back_button?: boolean;\n    title?: string;\n};\n\ntype TContractTypeDialogProps = Pick<\n    React.ComponentProps<typeof ContractTypeMenu>,\n    | 'selected'\n    | 'categories'\n    | 'info_banner'\n    | 'onBackButtonClick'\n    | 'onChangeInput'\n    | 'onCategoryClick'\n    | 'onSearchBlur'\n    | 'show_loading'\n    | 'item'\n> &\n    TContractTypeDialog;\n\nconst ContractTypeDialog = ({\n    categories,\n    children,\n    info_banner,\n    is_info_dialog_open,\n    is_open,\n    item,\n    selected,\n    title,\n    onBackButtonClick,\n    onCategoryClick,\n    onChangeInput,\n    onClose,\n    onSearchBlur,\n    show_loading,\n    learn_more_banner,\n    hide_back_button,\n}: React.PropsWithChildren<TContractTypeDialogProps>) => {\n    const { isMobile } = useDevice();\n    const current_mobile_title = is_info_dialog_open ? (\n        <Header\n            title={title || item?.text || ''}\n            onClickBack={onBackButtonClick}\n            text_size='xs'\n            should_render_arrow={!hide_back_button}\n        />\n    ) : (\n        localize('Trade types')\n    );\n\n    if (isMobile) {\n        return (\n            <React.Fragment>\n                <span className='contract-type-widget__select-arrow' />\n                <MobileDialog\n                    info_banner={is_info_dialog_open ? '' : info_banner}\n                    portal_element_id='modal_root'\n                    title={current_mobile_title}\n                    header_classname='contract-type-widget__header'\n                    wrapper_classname={is_info_dialog_open ? 'contracts-modal-info' : 'contracts-modal-list'}\n                    visible={is_open}\n                    onClose={onClose}\n                    has_content_scroll={!is_info_dialog_open}\n                    learn_more_banner={is_info_dialog_open ? '' : learn_more_banner}\n                >\n                    {children}\n                </MobileDialog>\n            </React.Fragment>\n        );\n    }\n\n    return (\n        <ContractTypeMenu\n            info_banner={info_banner}\n            is_info_dialog_open={is_info_dialog_open}\n            is_open={is_open}\n            item={item}\n            selected={selected}\n            categories={categories}\n            onSearchBlur={onSearchBlur}\n            onClose={onClose}\n            onBackButtonClick={onBackButtonClick}\n            onChangeInput={onChangeInput}\n            onCategoryClick={onCategoryClick}\n            show_loading={show_loading}\n            learn_more_banner={learn_more_banner}\n            hide_back_button={hide_back_button}\n            title={title}\n        >\n            {children}\n        </ContractTypeMenu>\n    );\n};\n\nexport default ContractTypeDialog;\n","import React from 'react';\n\nimport { Icon, InlineMessage, Text } from '@deriv/components';\nimport { CONTRACT_STORAGE_VALUES, TRADE_TYPES } from '@deriv/shared';\n\nimport { observer, useStore } from '@deriv/stores';\nimport { Localize, localize } from '@deriv/translations';\nimport { Analytics } from '@deriv-com/analytics';\n\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nimport {\n    findContractCategory,\n    getCategoriesSortedByKey,\n    getContractTypeCategoryIcons,\n    getContractTypes,\n} from '../../../Helpers/contract-type';\n\nimport ContractType from './contract-type';\nimport { TContractCategory, TContractType, TList } from './types';\n\ntype TContractTypeWidget = {\n    name: string;\n    value: TContractType['value'];\n    list: TContractCategory[];\n    onChange: (e: {\n        target: {\n            name: string;\n            value: unknown;\n        };\n    }) => Promise<void>;\n    languageChanged?: boolean;\n    unavailable_trade_types_list?: TContractCategory[];\n};\n\nconst ContractTypeWidget = observer(\n    ({ name, value, list, onChange, languageChanged, unavailable_trade_types_list = [] }: TContractTypeWidget) => {\n        const {\n            active_symbols: { active_symbols },\n            ui: { is_mobile },\n        } = useStore();\n        const { symbol, contract_type } = useTraderStore();\n        const wrapper_ref = React.useRef<HTMLDivElement | null>(null);\n        const [is_dialog_open, setDialogVisibility] = React.useState<boolean | null>();\n        const [is_info_dialog_open, setInfoDialogVisibility] = React.useState(false);\n        const [hide_back_button, setHideBackButton] = React.useState(false);\n        const [selected_category, setSelectedCategory] = React.useState<TList['key']>('All');\n        const [search_query, setSearchQuery] = React.useState('');\n        const [item, setItem] = React.useState<TContractType | null>(null);\n        const animation_timeout = React.useRef<ReturnType<typeof setTimeout>>();\n\n        const handleClickOutside = React.useCallback(\n            (event: MouseEvent) => {\n                if (is_mobile) return;\n                if (wrapper_ref && !wrapper_ref.current?.contains(event.target as Node) && is_dialog_open) {\n                    setDialogVisibility(false);\n                    setItem({ ...item, value });\n                }\n            },\n            [item, value, is_dialog_open, is_mobile]\n        );\n\n        const getCategoryName = (clicked_item: TContractType) =>\n            getContractTypes(list_with_category(), clicked_item)?.find(item => item.value === clicked_item.value)?.text;\n\n        React.useEffect(() => {\n            return () => {\n                clearTimeout(animation_timeout.current);\n            };\n        }, []);\n\n        React.useEffect(() => {\n            document.addEventListener('mousedown', handleClickOutside);\n            return () => {\n                document.removeEventListener('mousedown', handleClickOutside);\n            };\n        }, [handleClickOutside]);\n\n        React.useEffect(() => {\n            if (typeof is_dialog_open === 'boolean') {\n                Analytics.trackEvent('ce_trade_types_form', {\n                    action: is_dialog_open ? 'open' : 'close',\n                    form_source: 'contract_set_up_form',\n                    form_name: 'default',\n                });\n            }\n        }, [is_dialog_open]);\n\n        React.useEffect(() => {\n            if (contract_type) {\n                const contract_type_map = {\n                    [TRADE_TYPES.MULTIPLIER]: CONTRACT_STORAGE_VALUES.MULTIPLIERS,\n                    [TRADE_TYPES.ACCUMULATOR]: CONTRACT_STORAGE_VALUES.ACCUMULATORS,\n                };\n                const stored_value =\n                    contract_type_map[contract_type as keyof typeof contract_type_map] ??\n                    CONTRACT_STORAGE_VALUES.OPTIONS;\n                localStorage.setItem('contract_type_value', stored_value);\n            }\n        }, [contract_type]);\n\n        const handleCategoryClick: React.ComponentProps<typeof ContractType.Dialog>['onCategoryClick'] = ({ key }) => {\n            if (key) setSelectedCategory(key);\n        };\n\n        const handleSelect = (\n            clicked_item: TContractType,\n            e: React.MouseEvent<HTMLDivElement | HTMLButtonElement | HTMLInputElement>\n        ) => {\n            const categories = list_with_category();\n            const { key } = findContractCategory(categories, clicked_item);\n            if ('id' in e.target && e.target.id !== 'info-icon' && clicked_item) {\n                const is_from_info_dialog = /_btn$/.test(e.target.id as string);\n                const subform_name = is_from_info_dialog ? 'info_new' : 'trade_type';\n\n                setDialogVisibility(false);\n                setInfoDialogVisibility(false);\n                setItem(clicked_item);\n                setSelectedCategory(key);\n\n                onChange({ target: { name, value: clicked_item.value } });\n\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                if ((window as any).hj) (window as any).hj('event', `selected_${clicked_item.value}_contract_type`);\n                if (subform_name === 'trade_type') {\n                    Analytics.trackEvent('ce_trade_types_form', {\n                        action: 'choose_trade_type',\n                        subform_name,\n                        tab_name: selected_category,\n                        trade_type_name: getCategoryName(clicked_item),\n                        form_name: 'default',\n                    });\n                } else {\n                    Analytics.trackEvent('ce_trade_types_form', {\n                        action: 'choose_trade_type',\n                        subform_name,\n                        trade_type_name: getCategoryName(clicked_item),\n                        form_name: 'default',\n                    });\n                }\n            }\n        };\n\n        const handleInfoClick = (clicked_item: TContractType) => {\n            setInfoDialogVisibility(!is_info_dialog_open);\n            setItem(clicked_item);\n\n            Analytics.trackEvent('ce_trade_types_form', {\n                action: 'info_open',\n                tab_name: selected_category,\n                trade_type_name: getCategoryName(clicked_item),\n            });\n        };\n\n        const onSearchBlur = () => {\n            if (search_query) {\n                Analytics.trackEvent('ce_trade_types_form', {\n                    action: 'search',\n                    search_string: search_query,\n                });\n            }\n        };\n\n        const onWidgetClick = () => {\n            setDialogVisibility(!is_dialog_open);\n            animation_timeout.current = setTimeout(() => {\n                setHideBackButton(false);\n                setInfoDialogVisibility(false);\n            }, 200);\n            setItem({ ...item, value });\n        };\n\n        const onBackButtonClick = () => {\n            setInfoDialogVisibility(false);\n            setItem({ ...item, value });\n        };\n\n        const onChangeInput = (searchQueryItem: string) => setSearchQuery(searchQueryItem);\n\n        const handleLearnMore = () => {\n            setDialogVisibility(true);\n            setInfoDialogVisibility(true);\n            setItem(item || { value });\n            Analytics.trackEvent('ce_trade_types_form', {\n                action: 'info_open',\n                tab_name: selected_category,\n                trade_type_name: getCategoryName(item || { value }),\n            });\n            setHideBackButton(true);\n        };\n\n        const onClose = () => {\n            onWidgetClick();\n        };\n\n        const list_with_category = () => {\n            const ordered_list = list && getCategoriesSortedByKey(list);\n            const ordered_unavailable_types_list = getCategoriesSortedByKey(unavailable_trade_types_list);\n            const all_trade_types_list = ordered_list?.concat(ordered_unavailable_types_list);\n            const accumulators_category = all_trade_types_list?.filter(\n                ({ label }) => label === localize('Accumulators')\n            );\n            const multipliers_category = all_trade_types_list?.filter(({ label }) => label === localize('Multipliers'));\n            const options_category = all_trade_types_list?.filter(\n                ({ label }) => label !== localize('Multipliers') && label !== localize('Accumulators')\n            );\n            const categories: TList[] = [];\n            const contract_type_category_icon: { [key: string]: string } = getContractTypeCategoryIcons();\n\n            if (list && list.length > 0) {\n                categories.push({\n                    label: localize('All'),\n                    contract_categories: all_trade_types_list,\n                    key: 'All',\n                    icon: '',\n                });\n            }\n\n            if (multipliers_category && multipliers_category.length > 0) {\n                categories.push({\n                    label: localize('Multipliers'),\n                    contract_categories: multipliers_category,\n                    key: 'Multipliers',\n                    icon: '',\n                });\n            }\n\n            if (options_category && options_category.length > 0) {\n                categories.push({\n                    label: localize('Options'),\n                    contract_categories: options_category,\n                    component: null,\n                    key: 'Options',\n                    icon: '',\n                });\n            }\n\n            if (accumulators_category && accumulators_category.length > 0) {\n                categories.push({\n                    label: localize('Accumulators'),\n                    contract_categories: accumulators_category,\n                    component: null,\n                    key: 'Accumulators',\n                    icon: '',\n                });\n            }\n\n            return categories.map(contract_category => {\n                const contract_types = contract_category?.contract_categories?.reduce<TContractType[]>(\n                    (prev, current) => [...prev, ...current.contract_types],\n                    []\n                );\n\n                const icon = contract_category.key\n                    ? contract_type_category_icon[contract_category.key]\n                    : contract_category.icon;\n\n                let contract_categories = contract_category.contract_categories;\n\n                if (search_query) {\n                    contract_categories = contract_category?.contract_categories\n                        ?.filter(category =>\n                            category.contract_types.find(type =>\n                                type.text?.toLowerCase().includes(search_query.toLowerCase())\n                            )\n                        )\n                        .map(category => ({\n                            ...category,\n                            contract_types: category.contract_types.filter(type =>\n                                type.text?.toLowerCase().includes(search_query.toLowerCase())\n                            ),\n                        }));\n                }\n\n                return {\n                    ...contract_category,\n                    contract_types,\n                    icon,\n                    contract_categories,\n                };\n            });\n        };\n\n        const selected_category_contracts = () => {\n            const selected_list_category = list_with_category()?.find(\n                categoryItem => categoryItem.key === selected_category\n            );\n            return (selected_list_category || list_with_category()[0]).contract_categories;\n        };\n        const should_show_info_banner = !!selected_category_contracts()?.some(i => i.is_unavailable);\n\n        const title =\n            Number(list_with_category()[0]?.contract_categories?.length) > 1\n                ? localize('Tutorial')\n                : getCategoryName(item || { value });\n\n        const info_banner = (\n            <InlineMessage\n                size={is_mobile ? 'sm' : 'xs'}\n                type='information'\n                message={\n                    <Localize\n                        i18n_default_text='Some trade types are unavailable for {{symbol}}.'\n                        values={{\n                            symbol: active_symbols.find(s => s.symbol === symbol)?.display_name,\n                        }}\n                        shouldUnescape\n                    />\n                }\n            />\n        );\n\n        return (\n            <React.Fragment>\n                <Text as='button' line_height='s' size='xxxs' className='learn-more_title' onClick={handleLearnMore}>\n                    <Localize i18n_default_text='Learn about this trade type' />\n                </Text>\n                <div\n                    data-testid='dt_contract_widget'\n                    id='dt_contract_dropdown'\n                    className={`contract-type-widget contract-type-widget--${value} dropdown--left`}\n                    ref={wrapper_ref}\n                    tabIndex={0}\n                >\n                    <ContractType.Display\n                        is_open={is_dialog_open || is_info_dialog_open}\n                        list={list}\n                        name={name ?? ''}\n                        onClick={onWidgetClick}\n                        value={value}\n                    />\n                    <ContractType.Dialog\n                        is_info_dialog_open={is_info_dialog_open}\n                        is_open={!!is_dialog_open}\n                        item={item || { value }}\n                        categories={list_with_category()}\n                        selected={selected_category || list_with_category()[0]?.key}\n                        onBackButtonClick={onBackButtonClick}\n                        onSearchBlur={onSearchBlur}\n                        onClose={onClose}\n                        onChangeInput={onChangeInput}\n                        onCategoryClick={handleCategoryClick}\n                        show_loading={languageChanged}\n                        title={title}\n                        hide_back_button={hide_back_button}\n                        info_banner={should_show_info_banner && info_banner}\n                        learn_more_banner={\n                            <button onClick={() => handleInfoClick(item || { value })} className='learn-more'>\n                                <Text size={is_mobile ? 'xxs' : 'xs'} line_height={is_mobile ? 'l' : 'xl'}>\n                                    <Localize i18n_default_text='Learn more about trade types' />\n                                </Text>\n                                <Icon icon='IcChevronRight' size={16} />\n                            </button>\n                        }\n                    >\n                        {is_info_dialog_open ? (\n                            <ContractType.Info\n                                handleSelect={handleSelect}\n                                item={item || { value }}\n                                selected_value={value}\n                                list={list_with_category()}\n                                info_banner={info_banner}\n                            />\n                        ) : (\n                            <ContractType.List\n                                handleSelect={handleSelect}\n                                list={selected_category_contracts() as TContractCategory[]}\n                                should_show_info_banner={should_show_info_banner}\n                                value={value}\n                            />\n                        )}\n                    </ContractType.Dialog>\n                </div>\n            </React.Fragment>\n        );\n    }\n);\n\nexport default ContractTypeWidget;\n","import ContractTypeWidget from './contract-type-widget';\n\nexport default ContractTypeWidget;\n","import React from 'react';\nimport { MobileWrapper, usePrevious } from '@deriv/components';\nimport { getMarketNamesMap, unsupported_contract_types_list } from '@deriv/shared';\nimport { isDigitTradeType } from 'Modules/Trading/Helpers/digits';\nimport { Localize } from '@deriv/translations';\nimport { ToastPopup } from 'Modules/Trading/Containers/toast-popup';\nimport ContractTypeWidget from '../Components/Form/ContractType';\nimport { getAvailableContractTypes } from '../Helpers/contract-type';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { observer, useStore } from '@deriv/stores';\n\nconst Contract = observer(() => {\n    const {\n        contract_type,\n        contract_types_list,\n        is_mobile_digit_view_selected: is_digit_view,\n        non_available_contract_types_list,\n        onChange,\n        symbol,\n    } = useTraderStore();\n    const {\n        common: { current_language },\n    } = useStore();\n\n    const list = getAvailableContractTypes(\n        contract_types_list as unknown as Parameters<typeof getAvailableContractTypes>[0],\n        unsupported_contract_types_list\n    );\n    const unavailable_trade_types_list = getAvailableContractTypes(\n        non_available_contract_types_list,\n        unsupported_contract_types_list\n    ).map(item => ({ ...item, is_unavailable: true }));\n    const prev_lang = usePrevious(current_language);\n    return (\n        <React.Fragment>\n            <MobileWrapper>\n                {isDigitTradeType(contract_type) && (\n                    <ToastPopup className='digits__toast-info' is_open={is_digit_view} type='info' timeout={3000}>\n                        <Localize\n                            i18n_default_text='Last digit stats for latest 1000 ticks for {{underlying_name}}'\n                            values={{\n                                underlying_name:\n                                    getMarketNamesMap()[\n                                        symbol?.toUpperCase() as keyof ReturnType<typeof getMarketNamesMap>\n                                    ],\n                            }}\n                        />\n                    </ToastPopup>\n                )}\n            </MobileWrapper>\n            <ContractTypeWidget\n                list={list}\n                name='contract_type'\n                onChange={onChange}\n                value={contract_type}\n                languageChanged={!!(prev_lang && prev_lang !== current_language)}\n                unavailable_trade_types_list={unavailable_trade_types_list}\n            />\n        </React.Fragment>\n    );\n});\n\nexport default Contract;\n","import React from 'react';\nimport { getCardLabels, isValidToSell } from '@deriv/shared';\nimport { Button, Money, Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport Fieldset from 'App/Components/Form/fieldset';\nimport { observer, useStore } from '@deriv/stores';\nimport { TContractInfo } from '@deriv/shared/src/utils/contract/contract-types';\n\ntype TAccumSellButton = {\n    contract_info?: TContractInfo;\n    current_stake: number | null;\n    currency?: string;\n    is_disabled: boolean;\n    is_sell_requested?: boolean;\n    onClick: (e: React.MouseEvent<HTMLElement>) => void;\n};\nconst AccumulatorsSellButton = observer(\n    ({ contract_info, current_stake, currency, is_disabled, is_sell_requested, onClick }: TAccumSellButton) => {\n        const { ui } = useStore();\n        const { is_dark_mode_on } = ui;\n        const is_valid_to_sell = contract_info && isValidToSell(contract_info);\n        return (\n            <Fieldset className='trade-container__fieldset purchase-container__sell-button'>\n                <Button\n                    className='dc-btn--sell dc-btn__large'\n                    is_disabled={is_disabled || !is_valid_to_sell || is_sell_requested}\n                    onClick={onClick}\n                    secondary\n                >\n                    <span className='purchase-container__sell-button__stake'>{getCardLabels().SELL}</span>\n                    {current_stake && <Money amount={current_stake} currency={currency} show_currency />}\n                </Button>\n                <Text\n                    size='xxxs'\n                    line_height='s'\n                    as='p'\n                    color={is_dark_mode_on ? 'less-prominent' : 'disabled'}\n                    className='purchase-container__notification'\n                >\n                    <Localize\n                        i18n_default_text='<0>Note:</0> You can close your trade anytime. Be aware of slippage risk.'\n                        components={[\n                            <Text\n                                key={0}\n                                weight='bold'\n                                size='xxxs'\n                                line_height='s'\n                                color={is_dark_mode_on ? 'less-prominent' : 'disabled'}\n                            />,\n                        ]}\n                    />\n                </Text>\n            </Fieldset>\n        );\n    }\n);\n\nexport default AccumulatorsSellButton;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Money } from '@deriv/components';\nimport { isDesktop, isMobile, getDecimalPlaces } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport { observer } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { TProposalTypeInfo } from 'Types';\n\nconst CancelDealInfo = observer(\n    ({ proposal_info, data_testid }: { proposal_info: TProposalTypeInfo; data_testid?: string }) => {\n        const { currency, has_cancellation } = useTraderStore();\n        const { id, cancellation, has_error } = proposal_info;\n        const error = has_error ?? !id;\n        const [is_row_layout, setIsRowLayout] = React.useState(false);\n\n        const ref = React.useRef<HTMLDivElement>(null);\n\n        React.useEffect(() => {\n            if (ref.current) {\n                const el_height = Number(ref.current.parentElement?.clientHeight);\n                if (\n                    (el_height > 21 && isDesktop()) ||\n                    ((el_height > 21 || getDecimalPlaces(currency) > 2) && isMobile())\n                ) {\n                    setIsRowLayout(true);\n                } else {\n                    setIsRowLayout(false);\n                }\n            }\n        }, [cancellation, currency, is_row_layout, setIsRowLayout]);\n\n        if (!has_cancellation) return null;\n\n        return (\n            <div\n                className={classNames('trade-container__cancel-deal-info', {\n                    'trade-container__cancel-deal-info--row-layout': is_row_layout,\n                })}\n                data-testid={data_testid}\n            >\n                {cancellation && (\n                    <React.Fragment>\n                        <div className='trade-container__price-info-basis' ref={ref}>\n                            {localize('Deal cancel. fee')}\n                        </div>\n                        <div className='trade-container__price-info-value'>\n                            {!error && (\n                                <Money\n                                    amount={cancellation.ask_price}\n                                    className='trade-container__price-info-currency'\n                                    currency={currency}\n                                    show_currency\n                                />\n                            )}\n                        </div>\n                    </React.Fragment>\n                )}\n            </div>\n        );\n    }\n);\n\nexport default CancelDealInfo;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Money, Popover, Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport { getCurrencyDisplayCode, getLocalizedBasis, getGrowthRatePercentage } from '@deriv/shared';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport CancelDealInfo from './cancel-deal-info';\nimport ValueMovement from './value-movement';\nimport { TProposalTypeInfo } from 'Types';\nimport { useDevice } from '@deriv-com/ui';\n\ntype TContractInfo = Pick<\n    ReturnType<typeof useTraderStore>,\n    'basis' | 'growth_rate' | 'is_accumulator' | 'is_turbos' | 'is_vanilla' | 'is_multiplier' | 'currency'\n> & {\n    is_loading: boolean;\n    is_vanilla_fx?: boolean;\n    proposal_info: TProposalTypeInfo;\n    should_fade: boolean;\n    type: string;\n};\n\nconst ContractInfo = ({\n    basis,\n    currency,\n    growth_rate,\n    is_accumulator,\n    is_loading,\n    is_multiplier,\n    is_turbos,\n    is_vanilla_fx,\n    is_vanilla,\n    proposal_info,\n    should_fade,\n    type,\n}: TContractInfo) => {\n    const { isMobile } = useDevice();\n\n    const localized_basis = getLocalizedBasis();\n    const vanilla_payout_text = is_vanilla_fx ? localized_basis.payout_per_pip : localized_basis.payout_per_point;\n    const turbos_payout_message = (\n        <Localize i18n_default_text='This is the amount you’ll receive at expiry for every point of change in the underlying price, if the spot price never touches or breaches the barrier throughout the contract duration.' />\n    );\n    const vanilla_payout_message = is_vanilla_fx ? (\n        <Localize\n            i18n_default_text='The payout at expiry is equal to the payout per pip multiplied by the difference, <0>in pips</0>, between the final price and the strike price.'\n            components={[<strong key={0} />]}\n        />\n    ) : (\n        <Localize i18n_default_text='The payout at expiry is equal to the payout per point multiplied by the difference between the final price and the strike price.' />\n    );\n\n    const stakeOrPayout = () => {\n        switch (basis) {\n            case 'stake': {\n                if (is_vanilla) {\n                    return vanilla_payout_text;\n                }\n                return localized_basis.payout;\n            }\n            case 'payout': {\n                return localized_basis.stake;\n            }\n            default:\n                return basis;\n        }\n    };\n\n    const getBasisText = () => {\n        if (is_vanilla) {\n            return vanilla_payout_text;\n        }\n\n        return has_error_or_not_loaded ? stakeOrPayout() : proposal_info?.obj_contract_basis?.text || '';\n    };\n\n    const has_error_or_not_loaded = proposal_info.has_error || !proposal_info.id;\n    const basis_text = getBasisText();\n    const { message, obj_contract_basis, stake } = proposal_info;\n\n    const setHintMessage = () => {\n        if (is_vanilla) return vanilla_payout_message;\n        return message;\n    };\n\n    return (\n        <div className='trade-container__price'>\n            <div\n                id={`dt_purchase_${type.toLowerCase()}_price`}\n                data-testid={`dt_purchase_${type.toLowerCase()}_price`}\n                className={classNames('trade-container__price-info', {\n                    'trade-container__price-info--disabled': has_error_or_not_loaded,\n                    'trade-container__price-info--slide': is_loading && !should_fade,\n                    'trade-container__price-info--fade': is_loading && should_fade,\n                })}\n            >\n                {is_multiplier || is_accumulator ? (\n                    <React.Fragment>\n                        {!is_accumulator && !isMobile && <CancelDealInfo proposal_info={proposal_info} />}\n                        {isMobile && (\n                            <div className='trade-container__price-info-wrapper'>\n                                <div className='btn-purchase__text_wrapper'>\n                                    <Text size='xs' weight='bold' color='colored-background'>\n                                        {!is_accumulator ? (\n                                            <Money amount={stake} currency={currency} show_currency />\n                                        ) : (\n                                            !is_loading && `${getGrowthRatePercentage(growth_rate)}%`\n                                        )}\n                                    </Text>\n                                </div>\n                            </div>\n                        )}\n                    </React.Fragment>\n                ) : (\n                    !is_multiplier &&\n                    !is_accumulator &&\n                    !is_turbos &&\n                    obj_contract_basis && (\n                        <React.Fragment>\n                            <div className='trade-container__price-info-basis'>{basis_text}</div>\n                            {isMobile ? (\n                                <div className='trade-container__price-info-wrapper'>\n                                    <ValueMovement\n                                        has_error_or_not_loaded={has_error_or_not_loaded}\n                                        proposal_info={proposal_info}\n                                        currency={getCurrencyDisplayCode(currency)}\n                                        is_vanilla={is_vanilla}\n                                    />\n                                </div>\n                            ) : (\n                                <ValueMovement\n                                    has_error_or_not_loaded={has_error_or_not_loaded}\n                                    proposal_info={proposal_info}\n                                    currency={getCurrencyDisplayCode(currency)}\n                                    is_vanilla={is_vanilla}\n                                />\n                            )}\n                        </React.Fragment>\n                    )\n                )}\n            </div>\n            {!is_multiplier && !is_accumulator && !isMobile && (\n                <Popover\n                    alignment='left'\n                    icon='info'\n                    id={`dt_purchase_${type.toLowerCase()}_info`}\n                    is_bubble_hover_enabled\n                    margin={216}\n                    message={has_error_or_not_loaded ? '' : setHintMessage()}\n                    relative_render\n                />\n            )}\n        </div>\n    );\n};\n\nexport default ContractInfo;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Money, IconTradeTypes, Text } from '@deriv/components';\nimport { useMFAccountStatus } from '@deriv/hooks';\nimport { useDevice } from '@deriv-com/ui';\nimport { useStore } from '@deriv/stores';\nimport ContractInfo from 'Modules/Trading/Components/Form/Purchase/contract-info';\nimport { MT5_ACCOUNT_STATUS, getContractTypeDisplay } from '@deriv/shared';\nimport { TProposalTypeInfo, TTradeStore } from 'Types';\n\ntype TPurchaseButton = {\n    basis: string;\n    buy_info: TTradeStore['purchase_info'];\n    currency: string;\n    growth_rate: number;\n    has_deal_cancellation: boolean;\n    index: number;\n    info: TProposalTypeInfo;\n    is_accumulator: boolean;\n    is_disabled: boolean;\n    is_high_low: boolean;\n    is_loading: boolean;\n    is_multiplier: boolean;\n    is_proposal_empty: boolean;\n    is_vanilla_fx?: boolean;\n    is_vanilla: boolean;\n    is_turbos: boolean;\n    onClickPurchase: (proposal_id: string, price: string | number, type: string, isMobile: boolean) => void;\n    purchased_states_arr: boolean[];\n    should_fade: boolean;\n    setPurchaseState: (index: number) => void;\n    type: string;\n};\n\ntype TButtonTextWrapper = {\n    should_fade: boolean;\n    is_loading: boolean;\n    type: string;\n    is_high_low: boolean;\n};\n\n// TODO [lazy-loading-required] Responsive related components\nconst ButtonTextWrapper = ({ should_fade, is_loading, type, is_high_low }: TButtonTextWrapper) => {\n    return (\n        <div className='btn-purchase__text_wrapper'>\n            <Text size='xs' weight='bold' color='colored-background'>\n                {!should_fade && is_loading\n                    ? ''\n                    : getContractTypeDisplay(type, { isHighLow: is_high_low, showButtonName: true })}\n            </Text>\n        </div>\n    );\n};\n\nconst IconComponentWrapper = ({ type }: { type: string }) => (\n    <div className='btn-purchase__icon_wrapper'>\n        <IconTradeTypes type={type} className='btn-purchase__icon' color='active' />\n    </div>\n);\n\nconst PurchaseButton = ({\n    basis, // mobile-only\n    buy_info,\n    currency,\n    growth_rate,\n    has_deal_cancellation,\n    index,\n    info,\n    is_accumulator,\n    is_disabled,\n    is_high_low,\n    is_loading,\n    is_multiplier,\n    is_proposal_empty,\n    is_turbos,\n    is_vanilla_fx,\n    is_vanilla,\n    onClickPurchase,\n    purchased_states_arr,\n    setPurchaseState,\n    should_fade,\n    type,\n}: TPurchaseButton) => {\n    const {\n        ui: { setIsMFVericationPendingModal },\n    } = useStore();\n    const mf_account_status = useMFAccountStatus();\n    const { isMobile } = useDevice();\n    const getIconType = () => {\n        if (!should_fade && is_loading) return '';\n        return is_high_low ? `${type.toLowerCase()}_barrier` : type.toLowerCase();\n    };\n    const is_button_disabled = (is_disabled && !is_loading) || is_proposal_empty;\n\n    let button_value;\n\n    if (is_multiplier) {\n        button_value = (\n            <Text size='xs' weight='bold' color='colored-background'>\n                <Money amount={info.stake} currency={currency} show_currency />\n            </Text>\n        );\n    } else if (!is_vanilla && !is_turbos && !is_accumulator) {\n        button_value = (\n            <Text size='xs' weight='bold' color='colored-background'>\n                {!(is_loading || is_disabled) ? info.returns : ''}\n            </Text>\n        );\n    }\n\n    return (\n        <button\n            disabled={is_disabled}\n            id={`dt_purchase_${type.toLowerCase()}_button`}\n            className={classNames('btn-purchase', {\n                'btn-purchase--disabled': is_button_disabled || !!buy_info.error,\n                'btn-purchase--animated--slide': is_loading && !should_fade,\n                'btn-purchase--animated--fade': is_loading && should_fade,\n                'btn-purchase--swoosh': !!purchased_states_arr[index],\n                'btn-purchase--1': index === 0,\n                'btn-purchase--2': index === 1,\n                'btn-purchase--accumulator': is_accumulator,\n                'btn-purchase--multiplier': is_multiplier,\n                'btn-purchase--multiplier-deal-cancel': has_deal_cancellation,\n                'btn-purchase--turbos': is_turbos,\n                'btn-purchase--has-bottom-gradient-1': index === 0 && (is_accumulator || is_vanilla || is_turbos),\n                'btn-purchase--has-bottom-gradient-2': index === 1 && (is_vanilla || is_turbos),\n            })}\n            onClick={() => {\n                if (is_multiplier && mf_account_status === MT5_ACCOUNT_STATUS.PENDING) {\n                    setIsMFVericationPendingModal(true);\n                } else {\n                    setPurchaseState(index);\n                    onClickPurchase(info.id, info.stake, type, isMobile);\n                }\n            }}\n        >\n            {isMobile ? (\n                <React.Fragment>\n                    <div\n                        className={classNames('btn-purchase__top', {\n                            'btn-purchase__top--accumulator': is_accumulator,\n                            'btn-purchase--vanilla': is_vanilla,\n                        })}\n                    >\n                        <IconComponentWrapper type={getIconType()} />\n                        <ButtonTextWrapper\n                            should_fade={should_fade}\n                            is_loading={is_loading}\n                            type={type}\n                            is_high_low={is_high_low}\n                        />\n                    </div>\n                    {!is_turbos && !is_vanilla && !is_accumulator && (\n                        <div className='btn-purchase__bottom'>\n                            <ContractInfo\n                                basis={basis}\n                                currency={currency}\n                                growth_rate={growth_rate}\n                                is_accumulator={is_accumulator}\n                                is_loading={is_loading}\n                                is_multiplier={is_multiplier}\n                                is_turbos={is_turbos}\n                                is_vanilla_fx={is_vanilla_fx}\n                                is_vanilla={is_vanilla}\n                                should_fade={should_fade}\n                                proposal_info={info}\n                                type={type}\n                            />\n                        </div>\n                    )}\n                </React.Fragment>\n            ) : (\n                <React.Fragment>\n                    <div className='btn-purchase__info btn-purchase__info--left'>\n                        <div className='btn-purchase__type-wrapper'>\n                            <IconComponentWrapper type={getIconType()} />\n                            <ButtonTextWrapper\n                                should_fade={should_fade}\n                                is_loading={is_loading}\n                                type={type}\n                                is_high_low={is_high_low}\n                            />\n                        </div>\n                    </div>\n                    <div className='btn-purchase__effect-detail' />\n                    <div className='btn-purchase__effect-detail--arrow' />\n                    <div className='btn-purchase__info btn-purchase__info--right'>\n                        <div className='btn-purchase__text_wrapper'>{button_value}</div>\n                    </div>\n                </React.Fragment>\n            )}\n        </button>\n    );\n};\n\nexport default PurchaseButton;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Popover } from '@deriv/components';\nimport Fieldset from 'App/Components/Form/fieldset';\nimport ContractInfo from 'Modules/Trading/Components/Form/Purchase/contract-info';\nimport PurchaseButton from 'Modules/Trading/Components/Elements/purchase-button';\nimport CancelDealInfo from '../Form/Purchase/cancel-deal-info';\nimport { TProposalTypeInfo, TTradeStore } from 'Types';\nimport { useDevice } from '@deriv-com/ui';\nimport { isTabletOs } from '@deriv/shared';\n\ntype TPurchaseFieldset = {\n    basis: string;\n    buy_info: TTradeStore['purchase_info'];\n    currency: string;\n    growth_rate: number;\n    has_cancellation: boolean;\n    index: number;\n    info: TProposalTypeInfo;\n    is_accumulator: boolean;\n    is_disabled: boolean;\n    is_high_low: boolean;\n    is_loading: boolean;\n    is_market_closed?: boolean;\n    is_multiplier: boolean;\n    is_proposal_empty: boolean;\n    is_proposal_error: boolean;\n    is_vanilla_fx?: boolean;\n    is_vanilla: boolean;\n    is_turbos: boolean;\n    onClickPurchase: (proposal_id: string, price: string | number, type: string, isMobile: boolean) => void;\n    onHoverPurchase: (is_over: boolean, contract_type: string) => void;\n    purchased_states_arr: boolean[];\n    setPurchaseState: (index: number) => void;\n    type: string;\n};\n\nconst PurchaseFieldset = ({\n    basis,\n    buy_info,\n    currency,\n    growth_rate,\n    has_cancellation,\n    index,\n    info,\n    is_accumulator,\n    is_disabled,\n    is_high_low,\n    is_loading,\n    is_market_closed,\n    is_multiplier,\n    is_proposal_empty,\n    is_proposal_error,\n    is_turbos,\n    is_vanilla_fx,\n    is_vanilla,\n    onClickPurchase,\n    onHoverPurchase,\n    purchased_states_arr,\n    setPurchaseState,\n    type,\n}: TPurchaseFieldset) => {\n    const [should_fade, setShouldFade] = React.useState(false);\n    const { isMobile } = useDevice();\n\n    React.useEffect(() => {\n        setShouldFade(true);\n    }, []);\n\n    const purchase_button = (\n        <React.Fragment>\n            {is_multiplier && has_cancellation && isMobile && <CancelDealInfo proposal_info={info} />}\n            <PurchaseButton\n                buy_info={buy_info}\n                currency={currency}\n                info={info}\n                index={index}\n                growth_rate={growth_rate}\n                has_deal_cancellation={is_multiplier && has_cancellation}\n                is_accumulator={is_accumulator}\n                is_disabled={is_disabled}\n                is_high_low={is_high_low}\n                is_loading={is_loading}\n                is_multiplier={is_multiplier}\n                is_vanilla={is_vanilla}\n                is_vanilla_fx={is_vanilla_fx}\n                is_proposal_empty={is_proposal_empty}\n                is_turbos={is_turbos}\n                purchased_states_arr={purchased_states_arr}\n                onClickPurchase={onClickPurchase}\n                setPurchaseState={setPurchaseState}\n                should_fade={should_fade}\n                type={type}\n                basis={basis} // mobile-only\n            />\n        </React.Fragment>\n    );\n\n    return (\n        <Fieldset\n            className={classNames('trade-container__fieldset', 'purchase-container__option', {\n                'purchase-container__option--has-cancellation': has_cancellation,\n                'purchase-container__option--turbos': is_turbos,\n            })}\n        >\n            {!isMobile && (\n                <div\n                    className={classNames('trade-container__fieldset-wrapper', {\n                        'trade-container__fieldset-wrapper--disabled': is_proposal_error || is_disabled,\n                    })}\n                >\n                    {(has_cancellation || !is_multiplier) && !is_accumulator && !is_turbos && (\n                        <ContractInfo\n                            basis={basis}\n                            currency={currency}\n                            is_loading={is_loading}\n                            is_multiplier={is_multiplier}\n                            is_turbos={is_turbos}\n                            is_vanilla={is_vanilla}\n                            is_vanilla_fx={is_vanilla_fx}\n                            proposal_info={info}\n                            should_fade={should_fade}\n                            type={type}\n                            is_accumulator={is_accumulator}\n                            growth_rate={growth_rate}\n                        />\n                    )}\n                    <div\n                        className={classNames('btn-purchase__shadow-wrapper', {\n                            'btn-purchase__shadow-wrapper--disabled': is_proposal_error || is_disabled,\n                        })}\n                        onMouseEnter={() => {\n                            if (!is_disabled) {\n                                onHoverPurchase(true, type);\n                            }\n                        }}\n                        onMouseLeave={() => {\n                            if (!is_disabled) {\n                                onHoverPurchase(false, type);\n                            }\n                        }}\n                        onClick={() => {\n                            if (!is_disabled) {\n                                onHoverPurchase(false, type);\n                            }\n                        }}\n                    >\n                        <div className='btn-purchase__box-shadow' />\n                        {is_proposal_error && !is_market_closed ? (\n                            <Popover\n                                has_error\n                                alignment='left'\n                                message={info.message}\n                                is_open={is_proposal_error && !is_market_closed}\n                                relative_render\n                                margin={6}\n                            >\n                                {purchase_button}\n                            </Popover>\n                        ) : (\n                            <React.Fragment>\n                                {is_multiplier && !isTabletOs ? (\n                                    <Popover\n                                        alignment='left'\n                                        is_bubble_hover_enabled\n                                        margin={8}\n                                        message={info.message}\n                                        relative_render\n                                    >\n                                        {purchase_button}\n                                    </Popover>\n                                ) : (\n                                    purchase_button\n                                )}\n                            </React.Fragment>\n                        )}\n                    </div>\n                </div>\n            )}\n            {isMobile && (\n                <React.Fragment>\n                    {is_proposal_error && <div className='btn-purchase__error'>{info.message}</div>}\n                    {purchase_button}\n                </React.Fragment>\n            )}\n        </Fieldset>\n    );\n};\n\nexport default React.memo(PurchaseFieldset);\n","import React from 'react';\nimport {\n    isAccumulatorContract,\n    isEmptyObject,\n    isOpen,\n    hasContractEntered,\n    getContractTypePosition,\n    getSupportedContracts,\n    getIndicativePrice,\n} from '@deriv/shared';\nimport AccumulatorsSellButton from '../Components/Form/TradeParams/Accumulator/accumulators-sell-button';\nimport PurchaseFieldset from 'Modules/Trading/Components/Elements/purchase-fieldset';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { observer, useStore } from '@deriv/stores';\nimport { TTradeStore } from 'Types';\n\ntype TGetSupportedContractsKey = keyof ReturnType<typeof getSupportedContracts>;\n\nconst getSortedIndex = (type: string, index: number) => {\n    switch (getContractTypePosition(type as TGetSupportedContractsKey)) {\n        case 'top':\n            return 0;\n        case 'bottom':\n            return 1;\n        default:\n            return index;\n    }\n};\n\nconst Purchase = observer(({ is_market_closed }: { is_market_closed?: boolean }) => {\n    const {\n        portfolio: { all_positions, onClickSell },\n        ui: {\n            purchase_states: purchased_states_arr,\n            is_mobile,\n            setPurchaseState,\n            setIsTradingDisabledByResidenceModal,\n        },\n        client: { is_account_to_be_closed_by_residence },\n    } = useStore();\n    const {\n        basis,\n        contract_type,\n        currency,\n        growth_rate,\n        has_cancellation,\n        has_open_accu_contract,\n        is_accumulator,\n        is_multiplier,\n        is_purchase_enabled,\n        is_trade_enabled,\n        is_turbos,\n        is_vanilla_fx,\n        is_vanilla,\n        onHoverPurchase,\n        onPurchase,\n        proposal_info,\n        purchase_info,\n        symbol,\n        trade_types,\n        validation_errors,\n    } = useTraderStore();\n\n    const is_high_low = /^high_low$/.test(contract_type.toLowerCase());\n    const isLoading = (info: TTradeStore['proposal_info'][string] | Record<string, never>) => {\n        const has_validation_error = Object.values(validation_errors).some(e => e.length);\n        return !has_validation_error && !info?.has_error && !info.id;\n    };\n    const is_proposal_empty = isEmptyObject(proposal_info);\n    const active_accu_contract = is_accumulator\n        ? all_positions.find(\n              ({ contract_info, type }) =>\n                  isAccumulatorContract(type) && contract_info.underlying === symbol && !contract_info.is_sold\n          )\n        : undefined;\n    const is_valid_to_sell = active_accu_contract?.contract_info\n        ? hasContractEntered(active_accu_contract.contract_info) && isOpen(active_accu_contract.contract_info)\n        : false;\n    const indicative =\n        (is_valid_to_sell && active_accu_contract && getIndicativePrice(active_accu_contract.contract_info)) || null;\n    const onClickSellButton = (e: React.MouseEvent<HTMLElement, MouseEvent>) => {\n        if (active_accu_contract && onClickSell) {\n            onClickSell(active_accu_contract.contract_info.contract_id);\n            e.stopPropagation();\n            e.preventDefault();\n        }\n    };\n\n    const components: JSX.Element[] = [];\n\n    const onClickPurchase = is_account_to_be_closed_by_residence\n        ? () => setIsTradingDisabledByResidenceModal(true)\n        : onPurchase;\n\n    Object.keys(trade_types).forEach((type, index) => {\n        const info = proposal_info?.[type] || {};\n        const is_disabled = !is_trade_enabled || !info.id || !is_purchase_enabled;\n        const is_accum_or_mult_error = info?.has_error && !!info?.message;\n        const is_proposal_error =\n            is_multiplier || (is_accumulator && !is_mobile) ? is_accum_or_mult_error : info?.has_error;\n        const purchase_fieldset = (\n            <PurchaseFieldset\n                basis={basis}\n                buy_info={purchase_info}\n                currency={currency}\n                info={info}\n                key={type}\n                index={getSortedIndex(type, index)}\n                growth_rate={growth_rate}\n                has_cancellation={has_cancellation}\n                is_accumulator={is_accumulator}\n                is_disabled={is_disabled}\n                is_high_low={is_high_low}\n                is_loading={isLoading(info)}\n                is_market_closed={is_market_closed}\n                is_multiplier={is_multiplier}\n                is_turbos={is_turbos}\n                is_vanilla={is_vanilla}\n                is_vanilla_fx={is_vanilla_fx}\n                is_proposal_empty={is_proposal_empty}\n                is_proposal_error={!!is_proposal_error}\n                purchased_states_arr={purchased_states_arr}\n                onHoverPurchase={onHoverPurchase}\n                onClickPurchase={onClickPurchase}\n                setPurchaseState={setPurchaseState}\n                type={type}\n            />\n        );\n\n        if (!is_vanilla && (!is_accumulator || !has_open_accu_contract)) {\n            switch (getContractTypePosition(type as TGetSupportedContractsKey)) {\n                case 'top':\n                    components.unshift(purchase_fieldset);\n                    break;\n                case 'bottom':\n                    components.push(purchase_fieldset);\n                    break;\n                default:\n                    components.push(purchase_fieldset);\n                    break;\n            }\n        } else if (contract_type.toUpperCase() === type) {\n            components.push(purchase_fieldset);\n        } else if (is_accumulator && has_open_accu_contract) {\n            components.push(\n                <AccumulatorsSellButton\n                    is_disabled={!is_valid_to_sell}\n                    onClick={onClickSellButton}\n                    contract_info={active_accu_contract?.contract_info}\n                    is_sell_requested={active_accu_contract?.is_sell_requested}\n                    current_stake={indicative}\n                    currency={currency}\n                    key={type}\n                />\n            );\n        }\n    });\n\n    return components as unknown as JSX.Element;\n});\n\nexport default Purchase;\n","import { TTradeStore } from 'Types';\n\ntype TData = Partial<\n    Pick<\n        TTradeStore,\n        'cancellation_duration' | 'has_cancellation' | 'has_stop_loss' | 'has_take_profit' | 'stop_loss' | 'take_profit'\n    >\n>;\n\ntype TOnToggleCancellation = {\n    has_cancellation: TTradeStore['has_cancellation'];\n    onChangeMultiple: (data: TData) => void;\n};\n\ntype TOnChangeCancellationDuration = {\n    event: { target: { name: string; value: string } };\n    onChangeMultiple: (data: TData) => void;\n};\n\nexport const onToggleCancellation = ({ has_cancellation, onChangeMultiple }: TOnToggleCancellation) => {\n    // e.target.checked is not reliable, we have to toggle its previous value\n    const new_val = !has_cancellation;\n    onChangeMultiple({\n        has_cancellation: new_val,\n        ...(!new_val\n            ? {\n                  // reset deal cancellation price\n                  cancellation_price: undefined,\n              }\n            : {\n                  // unchecked Stop loss\n                  has_stop_loss: false,\n                  has_take_profit: false,\n              }),\n    });\n};\n\nexport const onChangeCancellationDuration = ({ event, onChangeMultiple }: TOnChangeCancellationDuration) => {\n    const { value } = event.target;\n    onChangeMultiple({\n        has_cancellation: true,\n        has_take_profit: false,\n        has_stop_loss: false,\n        cancellation_duration: value,\n    });\n};\n"],"names":["forwardRef","title","titleId","props","ref","xmlns","width","height","viewBox","role","id","d","_ref","children","className","header","header_tooltip","is_center","is_tooltip_disabled","popover_wrapper_class","onMouseEnter","onMouseLeave","fieldset_header_class","classNames","fieldset_info_class","React","_defineProperty","Popover","alignment","icon","is_bubble_hover_enabled","message","margin","relative_render","arr_arr_numbers","name","onChange","selected_number","should_show_in_percents","is_disabled","handleSelect","event","Number","currentTarget","getAttribute","target","value","map","arr_numbers","idx","key","toString","i","onClick","concat","LabeledQuantityInputMobile","input_label","_objectWithoutProperties","_excluded","wrapper_classname","Fieldset","InputField","_proposal_info$obj_co","_proposal_info$obj_co2","has_error_or_not_loaded","proposal_info","currency","_ref$is_vanilla","is_vanilla","_ref$show_currency","show_currency","Money","amount","obj_contract_basis","should_format","ArrowIndicator","observer","_useTraderStore","useTraderStore","maximum_payout","maximum_ticks","content","label","localize","tooltip_text","Text","size","weight","line_height","align","as","isMobile","classNameBubble","zIndex","min","max","duration_unit_text","Localize","i18n_default_text","values","addComma","expiry_epoch","has_error","fixed_date","formatted_date","Date","toUTCString","replace","substring","date","is_text_only","text_size","expiration","start_time","useStore","common","server_time","_formatDuration","formatDuration","getDiffDuration","unix","days","timestamp","getDateFromNow","_props$multiplier","_props$amount","_props$commission","_props$stop_out","commission_text_size","stop_out_text_size","is_tooltip_relative","should_show_tooltip","trade","has_stop_loss","multiplier","commission","stop_out","commission_text","components","stop_out_text","commission_tooltip","commission_percentage","toFixed","stop_out_tooltip","stop_out_percentage","Math","floor","abs","getInfo","_ref2","text","tooltip_params","_extends","_props$validation_err","_props$stop_loss","_props$has_stop_loss","_props$onChangeMultip","_props$onChange","_useStore","ui","client","addToast","removeToast","current_focus","setCurrentFocus","is_single_currency","validation_errors","stop_loss","onChangeMultiple","InputWithCheckbox","classNameInlinePrefix","classNameInput","isDesktop","defaultChecked","error_messages","undefined","is_negative_disabled","is_input_hidden","max_value","e","new_val","_objectSpread","has_cancellation","tooltip_label","tooltip_alignment","error_message_alignment","_props$take_profit","_props$has_take_profi","is_accumulator","has_open_accu_contract","take_profit","has_take_profit","take_profit_tooltip","transition","duration","ease","variants","enter","direction","x","y","opacity","center","exit","options","defaultValue","_useState2","_slicedToArray","useState","length","selectedIndex","setSelectedIndex","_useState4","setDirection","useEffect","indexOf","handleIndexChange","newIndex","newDirection","visibleValues","hasUndefinedValues","some","option","index","motion","div","custom","initial","animate","color","Button","disabled","small","Icon","payoutOptions","onPayoutClick","selectedBarrier","defaultPayout","tooltipText","is_desktop","useDevice","turbos_payout_message","WheelPicker","disable_target_icon","LabelPairedChevronsDownCaptionRegularIcon","stroke","LabelPairedChevronsUpCaptionRegularIcon","barrier_1","payout_choices","setPayoutPerPoint","togglePayoutWheelPicker","payout_per_point","header_tooltip_text","PayoutPerPointInput","_contract_info","_contract_info2","_contract_info3","_contract_info4","contract_info","is_minimized","is_absolute_only","barrier_2","barrier_count","barrier_pipsize","duration_unit","trade_types","_React$useState2","show_modal","setShowModal","type_with_current_spot","Object","keys","find","type","_proposal_info$type","spot","current_spot","current_barrier_price","barrier","barrier_title","input_class","is_absolute_barrier","format","float_value","parseFloat","sign","DesktopWrapper","is_float","is_signed","MobileWrapper","Modal","is_open","should_header_stick_body","toggleModal","ValueMovement","is_incrementable","is_incrementable_on_long_press","is_read_only","last_digit","arr_five","_toConsumableArray","Array","NumberSelector","max_stake","min_stake","is_mobile","isNaN","toLowerCase","BarriersListBody","barriers_list","onHover","selected_item","subheader","ThemedScrollbars","autohide","BarriersList","onClickCross","show_table","CSSTransition","appear","in","timeout","enterDone","unmountOnExit","data_testid","contract_type","strike","strike_price_list","is_title_centered","Div100vhContainer","max_autoheight_offset","trade_type","TRADE_TYPES","VANILLA","CALL","payout_status","RadioGroup","onToggle","selected","item","Item","String","Strike","strike_price_choices","barrier_choices","expiry_type","expiry_date","advanced_duration_unit","setIsOpen","_React$useState4","should_open_dropdown","setShouldOpenDropdown","_React$useState6","selected_value","setSelectedValue","toggleWidget","clickAndKeyEventHandler","is_24_hours_contract","toMoment","isSame","is_relative_strike_applicable","strike_price","should_show_spot","onKeyDown","StrikeParamModal","Dropdown","classNameDisplay","is_alignment_left","is_nativepicker","list","no_border","_tab_list$find$value","_tab_list$find","is_turbos","isTurbosContract","isVanillaContract","tab_list","TURBOS","LONG","is_displayed","SHORT","PUT","ButtonToggle","buttons_arr","filter","is_animated","_ref3","paragraph","is_multiplier_fx","_paragraph$content","_paragraph$content2","is_vanilla_fx","TradeTypeTemplate","category","_ref$is_vanilla_fx","_ref$is_multiplier_fx","ACCUMULATOR","AccumulatorTradeDescription","RISE_FALL","RISE_FALL_EQUAL","RiseFallTradeDescription","HIGH_LOW","HighLowTradeDescription","END","EndTradeDescription","STAY","StayTradeDescription","MATCH_DIFF","MatchDiffTradeDescription","EVEN_ODD","EvenOddTradeDescription","OVER_UNDER","OverUnderTradeDescription","TOUCH","TouchTradeDescription","ASIAN","AsianTradeDescription","RUN_HIGH_LOW","RunHighLowTradeDescription","RESET","ResetTradeDescription","CALL_PUT_SPREAD","CallPutSpreadTradeDescription","TICK_HIGH_LOW","TickHighLowTradeDescription","LB_HIGH_LOW","LbHighLowTradeDescription","LB_PUT","LbPutTradeDescription","LB_CALL","LbCallTradeDescription","MULTIPLIER","MultiplierTradeDescription","TurbosTradeDescription","VanillaTradeDescription","styles","fill","rx","ContractTypeDescriptionVideo","selected_contract_type","is_dark_theme","is_dark_mode_on","VideoPlayer","src","getDescriptionVideoId","should_show_controls","muted","hide_volume_control","ImageAsianUpDown","ImageSpread","ImageEndsInOut","ImageCloseToLow","ImageHighToClose","ImageHighToLow","ImageReset","ImageRunHighLow","ImageTickHighLow","_content","trade_category","FX","isArray","list_item_text","TABS","Info","_CONTRACT_TYPE_SUBSTI2","_getContractTypes","_contract_types$find","_list$0$contract_cate","info_banner","cached_multiplier_cancellation_list","modules","CONTRACT_TYPE_SUBSTITUTE","selected_tab","setSelectedTab","setSelectedContractType","contract_types","getContractTypes","has_toggle_buttons","test","should_show_video","is_description_tab_selected","is_glossary_tab_selected","scroll_bar_height","button_name","onClickGlossary","is_unavailable","contract_categories","should_show_dropdown","Analytics","trackEvent","action","_contract_types$find2","info_switcher_mode","trade_type_name","cards","style","left","transform","TradeCategoriesGIF","TradeCategories","ContractTypeGlossary","should_autohide","should_scroll_to_selected","has_rounded_button","interpolation","escapeValue","secondary","onClickBack","onClose","_ref$should_render_ar","should_render_arrow","_ref$should_render_cl","should_render_close","_ref$text_size","SearchInput","onClickClearInput","onBlur","Input","leading_icon","trailing_icon","placeholder","displayName","_categories$find","_categories$find$cont","categories","is_info_dialog_open","onBackButtonClick","onCategoryClick","onChangeInput","onSearchBlur","show_loading","learn_more_banner","hide_back_button","input_ref","input_value","setInputValue","contract_category","getContractCategoryKey","selected_category_contract","_input_ref$current","current","focus","renderChildren","action_bar_item","Loading","is_fullscreen","Header","VerticalTab","Layout","Headers","header_title","items","selectedKey","NoResultsMessage","IconCategory","_findContractCategory","_findContractCategory2","_findContractCategory3","IconTradeCategory","findContractCategory","includes","tradeType","should_show_info_banner","tradeTypes","reduce","acc","newValue","c","ContractType","Dialog","current_mobile_title","MobileDialog","portal_element_id","header_classname","visible","has_content_scroll","ContractTypeMenu","Display","List","ContractTypeWidget","_selected_category_co","_list_with_category$","_list_with_category$$","_active_symbols$find","_list_with_category$2","languageChanged","_ref$unavailable_trad","unavailable_trade_types_list","active_symbols","symbol","wrapper_ref","is_dialog_open","setDialogVisibility","setInfoDialogVisibility","setHideBackButton","_React$useState8","selected_category","setSelectedCategory","_React$useState10","search_query","setSearchQuery","_React$useState12","setItem","animation_timeout","handleClickOutside","_wrapper_ref$current","contains","getCategoryName","clicked_item","_getContractTypes$fin","list_with_category","clearTimeout","document","addEventListener","removeEventListener","form_source","form_name","_contract_type_map2","stored_value","CONTRACT_STORAGE_VALUES","MULTIPLIERS","ACCUMULATORS","OPTIONS","localStorage","subform_name","window","hj","tab_name","onWidgetClick","setTimeout","ordered_list","getCategoriesSortedByKey","ordered_unavailable_types_list","all_trade_types_list","accumulators_category","multipliers_category","_ref4","options_category","_ref5","contract_type_category_icon","getContractTypeCategoryIcons","push","component","_contract_category$co","_contract_category$co2","prev","_type$text","_type$text2","selected_category_contracts","_list_with_category","categoryItem","InlineMessage","s","display_name","shouldUnescape","tabIndex","search_string","searchQueryItem","Contract","contract_types_list","is_digit_view","is_mobile_digit_view_selected","non_available_contract_types_list","current_language","getAvailableContractTypes","unsupported_contract_types_list","prev_lang","usePrevious","isDigitTradeType","ToastPopup","underlying_name","getMarketNamesMap","toUpperCase","AccumulatorsSellButton","current_stake","is_sell_requested","is_valid_to_sell","isValidToSell","getCardLabels","SELL","cancellation","error","is_row_layout","setIsRowLayout","_ref$current$parentEl","el_height","parentElement","clientHeight","getDecimalPlaces","ask_price","basis","growth_rate","is_loading","is_multiplier","should_fade","localized_basis","getLocalizedBasis","vanilla_payout_text","payout_per_pip","vanilla_payout_message","basis_text","payout","stake","stakeOrPayout","CancelDealInfo","getGrowthRatePercentage","getCurrencyDisplayCode","ButtonTextWrapper","is_high_low","getContractTypeDisplay","isHighLow","showButtonName","IconComponentWrapper","IconTradeTypes","button_value","buy_info","has_deal_cancellation","info","is_proposal_empty","onClickPurchase","purchased_states_arr","setPurchaseState","setIsMFVericationPendingModal","mf_account_status","useMFAccountStatus","getIconType","is_button_disabled","returns","MT5_ACCOUNT_STATUS","PENDING","ContractInfo","PurchaseFieldset","is_market_closed","is_proposal_error","onHoverPurchase","setShouldFade","purchase_button","PurchaseButton","isTabletOs","getSortedIndex","getContractTypePosition","Purchase","_useStore$portfolio","portfolio","all_positions","onClickSell","_useStore$ui","purchase_states","setIsTradingDisabledByResidenceModal","is_account_to_be_closed_by_residence","is_purchase_enabled","is_trade_enabled","onPurchase","purchase_info","isLoading","isEmptyObject","active_accu_contract","isAccumulatorContract","underlying","is_sold","hasContractEntered","isOpen","indicative","getIndicativePrice","onClickSellButton","contract_id","stopPropagation","preventDefault","forEach","is_accum_or_mult_error","purchase_fieldset","unshift","onToggleCancellation","cancellation_price","onChangeCancellationDuration","cancellation_duration"],"sourceRoot":""}