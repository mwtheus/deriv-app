{"version":3,"file":"trader/js/trader.trader-app.efa11294e40652c978d0.js","mappings":"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","sources":["webpack://@deriv/trader/./src/App/Components/Elements/ContentLoader/positions-card.tsx","webpack://@deriv/trader/./src/App/Components/Elements/ContentLoader/trade-params.tsx","webpack://@deriv/trader/./src/_common/components/loading.tsx","webpack://@deriv/trader/./src/App/Components/Elements/chart-loader.tsx","webpack://@deriv/trader/./src/App/Components/Routes/helpers.ts","webpack://@deriv/trader/./src/App/Components/Elements/EmptyPortfolioMessage/empty-portfolio-message.tsx","webpack://@deriv/trader/./src/App/Components/Elements/EmptyPortfolioMessage/index.ts","webpack://@deriv/trader/./src/App/Components/Elements/PositionsDrawer/positions-drawer.tsx","webpack://@deriv/trader/./src/App/Components/Elements/PositionsDrawer/index.ts","webpack://@deriv/trader/./src/App/Components/Elements/market-is-closed-overlay.tsx","webpack://@deriv/trader/./src/Modules/SmartChart/Helpers/symbol.ts","webpack://@deriv/trader/./src/Modules/Trading/Containers/chart-widgets.tsx","webpack://@deriv/trader/./src/Modules/Trading/Components/Form/form-layout.tsx","webpack://@deriv/trader/./src/Modules/Trading/Containers/trade-chart.tsx","webpack://@deriv/trader/./src/Modules/Trading/Containers/trade.tsx","webpack://@deriv/trader/./src/Modules/Trading/index.ts","webpack://@deriv/trader/./src/App/Constants/routes-config.ts","webpack://@deriv/trader/./src/App/Components/Routes/binary-link.tsx","webpack://@deriv/trader/./src/App/Components/Routes/route-with-sub-routes.tsx","webpack://@deriv/trader/./src/App/Components/Routes/binary-routes.tsx","webpack://@deriv/trader/./src/App/Components/Routes/index.ts","webpack://@deriv/trader/./src/App/Containers/Routes/routes.tsx","webpack://@deriv/trader/./src/App/Components/Elements/PositionsDrawer/positions-result-mobile.tsx","webpack://@deriv/trader/./src/App/Components/Elements/PositionsDrawer/positions-modal-card.tsx","webpack://@deriv/trader/./src/App/Components/Elements/TogglePositions/toggle-positions.tsx","webpack://@deriv/trader/./src/App/Components/Elements/TogglePositions/toggle-positions-mobile.tsx","webpack://@deriv/trader/./src/App/Containers/populate-header.tsx","webpack://@deriv/trader/./src/App/Containers/trade-header-extensions.tsx","webpack://@deriv/trader/./src/App/Containers/trade-footer-extensions.tsx","webpack://@deriv/trader/./src/App/Containers/trade-settings-extensions.tsx","webpack://@deriv/trader/./src/App/app.tsx","webpack://@deriv/trader/./src/App/index.tsx","webpack://@deriv/trader/./src/Modules/Contract/Components/AccumulatorsStats/ticks-history-counter.tsx","webpack://@deriv/trader/./src/Modules/Contract/Components/AccumulatorsStats/expanded-ticks-history.tsx","webpack://@deriv/trader/./src/Modules/Contract/Components/AccumulatorsStats/accumulators-stats-manual-modal.tsx","webpack://@deriv/trader/./src/Modules/Contract/Components/AccumulatorsStats/accumulators-stats.tsx","webpack://@deriv/trader/./src/Modules/Contract/Components/AccumulatorsStats/index.ts","webpack://@deriv/trader/./src/Modules/Trading/Containers/toast-popup.tsx"],"sourcesContent":["import ContentLoader from 'react-content-loader';\nimport React from 'react';\n\nconst PositionsCardLoader = ({ speed }: { speed: number }) => (\n    <ContentLoader\n        height={173}\n        width={218}\n        speed={speed}\n        backgroundColor={'var(--general-section-1)'}\n        foregroundColor={'var(--general-hover)'}\n    >\n        <rect x='43' y='19' rx='0' ry='0' width='56' height='8' />\n        <rect x='147' y='19' rx='0' ry='0' width='56' height='8' />\n        <rect x='12' y='50' rx='0' ry='0' width='44' height='8' />\n        <rect x='13' y='68' rx='0' ry='0' width='192' height='8' />\n        <rect x='5' y='89' rx='0' ry='0' width='208' height='1' />\n        <rect x='12' y='104' rx='0' ry='0' width='44' height='8' />\n        <rect x='12' y='9' rx='0' ry='0' width='24' height='24' />\n        <rect x='116' y='11' rx='0' ry='0' width='24' height='24' />\n        <rect x='12' y='118' rx='0' ry='0' width='88' height='8' />\n        <rect x='116' y='104' rx='0' ry='0' width='44' height='8' />\n        <rect x='116' y='118' rx='0' ry='0' width='88' height='8' />\n        <rect x='12' y='139' rx='0' ry='0' width='44' height='8' />\n        <rect x='12' y='153' rx='0' ry='0' width='88' height='8' />\n        <rect x='116' y='139' rx='0' ry='0' width='44' height='8' />\n        <rect x='116' y='153' rx='0' ry='0' width='88' height='8' />\n    </ContentLoader>\n);\n\nexport { PositionsCardLoader };\n","import ContentLoader from 'react-content-loader';\nimport React from 'react';\nimport { useDevice } from '@deriv-com/ui';\n\nconst TradeParamsLoader = ({ speed }: { speed: number }) => {\n    const { isMobile } = useDevice();\n\n    if (isMobile) {\n        return (\n            <ContentLoader\n                height={214}\n                width={344}\n                speed={speed}\n                backgroundColor={'var(--general-section-1)'}\n                foregroundColor={'var(--general-hover)'}\n                viewBox='0 0 344 176'\n            >\n                <rect x='148' y='24' rx='3' ry='3' width='40' height='4' />\n                <rect x='8' y='40' rx='4' ry='4' width='328' height='40' />\n                <rect x='8' y='88' rx='4' ry='4' width='328' height='40' />\n                <rect x='8' y='136' rx='4' ry='4' width='160' height='70' />\n                <rect x='176' y='136' rx='4' ry='4' width='160' height='70' />\n            </ContentLoader>\n        );\n    }\n\n    return (\n        <ContentLoader\n            height={548}\n            width={240}\n            speed={speed}\n            backgroundColor={'var(--general-section-1)'}\n            foregroundColor={'var(--general-hover)'}\n        >\n            <rect x='0' y='0' rx='4' ry='4' width='240' height='76' />\n            <rect x='0' y='84' rx='4' ry='4' width='240' height='132' />\n            <rect x='0' y='224' rx='4' ry='4' width='240' height='120' />\n            <rect x='0' y='352' rx='4' ry='4' width='240' height='194' />\n        </ContentLoader>\n    );\n};\n\nexport { TradeParamsLoader };\n","import classNames from 'classnames';\nimport React from 'react';\n\ntype LoadingProps = {\n    className?: string;\n    data_testid?: string;\n    is_invisible?: boolean;\n    theme?: string;\n    id?: string;\n};\n\nconst Loading = ({ className, data_testid, is_invisible, theme, id }: LoadingProps) => (\n    <div\n        id={id}\n        data-testid={data_testid}\n        className={classNames('barspinner', `barspinner--${theme || 'dark'}`, { invisible: is_invisible }, className)}\n    >\n        {Array.from(new Array(5)).map((_x, inx) => (\n            <div key={inx} className={`barspinner__rect barspinner__rect--${inx + 1} rect${inx + 1}`} />\n        ))}\n    </div>\n);\n\nexport default Loading;\n","import React from 'react';\nimport Loading from '_common/components/loading';\n\ntype TChartLoader = {\n    is_dark?: boolean;\n    is_visible: boolean;\n};\n\nconst ChartLoader = ({ is_dark, is_visible }: TChartLoader) =>\n    is_visible ? (\n        <div className='chart-container__loader'>\n            <Loading theme={is_dark ? 'dark' : 'light'} data_testid='dt_barspinner' />\n        </div>\n    ) : null;\n\nexport default ChartLoader;\n","import { matchPath, RouteProps } from 'react-router';\nimport { routes } from '@deriv/shared';\nimport { TRouteConfig } from 'Types';\n\nexport const normalizePath = (path = '') => (path.startsWith('/') ? path : `/${path || ''}`); // Default to '/'\n\nexport const findRouteByPath = (path: string, routes_config?: TRouteConfig[]): RouteProps | undefined => {\n    let result: RouteProps | undefined;\n\n    routes_config?.some(route_info => {\n        let match_path;\n        try {\n            match_path = matchPath(path, route_info);\n        } catch (e: unknown) {\n            if (/undefined/.test((e as Error).message)) {\n                return undefined;\n            }\n        }\n\n        if (match_path) {\n            result = route_info;\n            return true;\n        } else if (route_info.routes) {\n            result = findRouteByPath(path, route_info.routes);\n            return result;\n        }\n        return false;\n    });\n\n    return result;\n};\n\nexport const isRouteVisible = (route?: TRouteConfig, is_logged_in?: boolean) =>\n    !(route?.is_authenticated && !is_logged_in);\n\nexport const getPath = (route_path: string, params: { [key: string]: string } = {}) =>\n    Object.keys(params).reduce((p, name) => p.replace(`:${name}`, params[name]), route_path);\n\nexport const getContractPath = (contract_id = '') => getPath(routes.contract, { contract_id });\n","import React from 'react';\nimport { Icon, Text } from '@deriv/components';\nimport { localize } from '@deriv/translations';\n\ntype TEmptyPortfolioMessage = {\n    error?: string;\n};\n\nconst EmptyPortfolioMessage = ({ error }: TEmptyPortfolioMessage) => (\n    <div className='portfolio-empty'>\n        <div className='portfolio-empty__wrapper'>\n            {error ? (\n                <Text color='disabled' size='xs'>\n                    {error}\n                </Text>\n            ) : (\n                <React.Fragment>\n                    <Icon icon='IcPortfolio' className='portfolio-empty__icon' size={96} color='disabled' />\n                    <Text align='center' className='portfolio-empty__text' color='disabled' size='xs'>\n                        {localize('You have no open positions.')}\n                    </Text>\n                </React.Fragment>\n            )}\n        </div>\n    </div>\n);\n\nexport default EmptyPortfolioMessage;\n","import EmptyPortfolioMessage from './empty-portfolio-message';\n\nexport default EmptyPortfolioMessage;\n","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport classNames from 'classnames';\n\nimport { DataList, Icon, Money, PositionsDrawerCard, Text } from '@deriv/components';\nimport { useNewRowTransition } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\n\nimport { useTraderStore } from 'Stores/useTraderStores';\n\nimport EmptyPortfolioMessage from '../EmptyPortfolioMessage';\n\ntype TUiStore = Pick<\n    ReturnType<typeof useStore>['ui'],\n    | 'addToast'\n    | 'current_focus'\n    | 'is_mobile'\n    | 'removeToast'\n    | 'setCurrentFocus'\n    | 'should_show_cancellation_warning'\n    | 'toggleCancellationWarning'\n>;\ntype TPortfolioStore = Pick<\n    ReturnType<typeof useStore>['portfolio'],\n    'onHoverPosition' | 'onClickCancel' | 'onClickSell'\n>;\ntype TPositionDrawerCardItem = TPortfolioStore &\n    TUiStore & {\n        currency: ReturnType<typeof useStore>['client']['currency'];\n        getContractById: ReturnType<typeof useStore>['contract_trade']['getContractById'];\n        is_new_row?: boolean;\n        measure?: () => void;\n        onClickRemove: ReturnType<typeof useStore>['portfolio']['removePositionById'];\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        row?: TPortfolioPosition | { [key: string]: any };\n        server_time: ReturnType<typeof useStore>['common']['server_time'];\n        symbol: ReturnType<typeof useTraderStore>['symbol'];\n    };\ntype TPortfolioPosition = ReturnType<typeof useStore>['portfolio']['active_positions'][0];\n\nconst PositionsDrawerCardItem = ({\n    row: portfolio_position,\n    measure,\n    onHoverPosition,\n    symbol,\n    is_new_row,\n    onClickRemove,\n    ...props\n}: TPositionDrawerCardItem) => {\n    const { in_prop } = useNewRowTransition(is_new_row as boolean);\n\n    React.useEffect(() => {\n        if (measure) {\n            setTimeout(() => {\n                measure();\n            }, 0);\n        }\n    }, [portfolio_position?.contract_info.is_sold, measure, portfolio_position?.id]);\n\n    React.useEffect(() => {\n        if (portfolio_position?.contract_info.is_sold) {\n            const timeout = setTimeout(() => {\n                onClickRemove(portfolio_position.id);\n            }, 8000);\n\n            return () => clearTimeout(timeout);\n        }\n    }, [portfolio_position?.contract_info.is_sold, portfolio_position?.id, onClickRemove]);\n\n    return (\n        <CSSTransition\n            in={in_prop}\n            timeout={150}\n            classNames={{\n                appear: 'dc-contract-card__wrapper--enter',\n                enter: 'dc-contract-card__wrapper--enter',\n                enterDone: 'dc-contract-card__wrapper--enter-done',\n                exit: 'dc-contract-card__wrapper--exit',\n            }}\n            onEntered={measure}\n            unmountOnExit\n        >\n            <div className='dc-contract-card__wrapper'>\n                <PositionsDrawerCard\n                    {...portfolio_position}\n                    {...props}\n                    onMouseEnter={() => {\n                        onHoverPosition(true, portfolio_position as TPortfolioPosition, symbol);\n                    }}\n                    onMouseLeave={() => {\n                        onHoverPosition(false, portfolio_position as TPortfolioPosition, symbol);\n                    }}\n                    onFooterEntered={measure}\n                    should_show_transition={is_new_row}\n                    onClickRemove={onClickRemove}\n                />\n            </div>\n        </CSSTransition>\n    );\n};\n\nconst PositionsDrawer = observer(({ ...props }) => {\n    const { symbol, contract_type: trade_contract_type } = useTraderStore();\n    const { client, common, contract_trade, portfolio, ui } = useStore();\n    const { currency } = client;\n    const { server_time } = common;\n    const { getContractById } = contract_trade;\n    const {\n        all_positions,\n        error,\n        onHoverPosition,\n        onMount,\n        onClickCancel,\n        onClickSell,\n        removePositionById: onClickRemove,\n    } = portfolio;\n    const {\n        is_mobile,\n        is_positions_drawer_on,\n        togglePositionsDrawer: toggleDrawer,\n        addToast,\n        current_focus,\n        removeToast,\n        setCurrentFocus,\n        should_show_cancellation_warning,\n        toggleCancellationWarning,\n    } = ui;\n    const drawer_ref = React.useRef(null);\n    const list_ref = React.useRef<HTMLDivElement>(null);\n    const scrollbar_ref = React.useRef<HTMLElement>(null);\n\n    React.useEffect(() => {\n        onMount();\n    }, [onMount]);\n\n    React.useEffect(() => {\n        list_ref?.current?.scrollTo({ top: 0 });\n        if (scrollbar_ref.current) scrollbar_ref.current.scrollTop = 0;\n    }, [symbol, trade_contract_type]);\n\n    const getTotalProfit = (active_positions: TPortfolioPosition[]) => {\n        return active_positions.reduce((total: number, position: TPortfolioPosition) => {\n            return total + (position.contract_info.profit || 0);\n        }, 0);\n    };\n\n    const body_content = (\n        <DataList\n            data_source={all_positions}\n            rowRenderer={args => (\n                <PositionsDrawerCardItem\n                    onHoverPosition={onHoverPosition}\n                    symbol={symbol}\n                    currency={currency}\n                    addToast={addToast}\n                    onClickCancel={onClickCancel}\n                    onClickSell={onClickSell}\n                    onClickRemove={onClickRemove}\n                    server_time={server_time}\n                    getContractById={getContractById}\n                    is_mobile={is_mobile}\n                    current_focus={current_focus}\n                    removeToast={removeToast}\n                    setCurrentFocus={setCurrentFocus}\n                    should_show_cancellation_warning={should_show_cancellation_warning}\n                    toggleCancellationWarning={toggleCancellationWarning}\n                    {...args}\n                    {...props}\n                />\n            )}\n            keyMapper={row => row.id}\n            row_gap={8}\n        />\n    );\n\n    return (\n        <React.Fragment>\n            <div\n                className={classNames('positions-drawer__bg', {\n                    'positions-drawer__bg--open': is_positions_drawer_on,\n                })}\n            />\n            <div\n                id='dt_positions_drawer'\n                className={classNames('positions-drawer', {\n                    'positions-drawer--open': is_positions_drawer_on,\n                })}\n            >\n                <div className='positions-drawer__header'>\n                    <Text color='prominent' weight='bold' size='xs'>\n                        {localize('Open positions')}\n                    </Text>\n                    <div\n                        data-testid='dt_positions_drawer_close_icon'\n                        id='dt_positions_drawer_close_icon'\n                        className='positions-drawer__icon-close'\n                        onClick={toggleDrawer}\n                    >\n                        <Icon data-testid='dt_positions_drawer_close_icon' icon='IcMinusBold' />\n                    </div>\n                </div>\n                <div className='positions-drawer__body' ref={drawer_ref}>\n                    {all_positions.length === 0 || error ? <EmptyPortfolioMessage error={error} /> : body_content}\n                </div>\n                <div className='positions-drawer__footer'>\n                    {all_positions.length > 0 && (\n                        <div className='positions-drawer__summary'>\n                            <Text size='xxs' color='less-prominent' className='positions-drawer__count'>\n                                {all_positions.length}{' '}\n                                {`${all_positions.length > 1 ? localize('open positions') : localize('open position')}`}\n                            </Text>\n                            <div className='positions-drawer__total'>\n                                <Text size='xs' weight='bold'>\n                                    {localize('Total P/L:')}\n                                </Text>\n                                <Text\n                                    size='xs'\n                                    weight='bold'\n                                    color={getTotalProfit(all_positions) > 0 ? 'profit-success' : 'loss-danger'}\n                                >\n                                    <React.Fragment>\n                                        <Money amount={getTotalProfit(all_positions)} currency={currency} has_sign />{' '}\n                                        {currency}\n                                    </React.Fragment>\n                                </Text>\n                            </div>\n                        </div>\n                    )}\n                </div>\n            </div>\n        </React.Fragment>\n    );\n});\n\nexport default PositionsDrawer;\n","import PositionsDrawer from './positions-drawer';\n\nexport default PositionsDrawer;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Button, Text, UILoader } from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\nimport { useStore } from '@deriv/stores';\nimport { useTraderStore } from '../../../Stores/useTraderStores';\n\nconst MarketCountdownTimer = React.lazy(\n    () => import(/* webpackChunkName: \"market-countdown-timer\" */ './market-countdown-timer')\n);\n\ntype TMarketIsClosedOverlay = {\n    is_eu: ReturnType<typeof useStore>['client']['is_eu'];\n    is_synthetics_trading_market_available: ReturnType<typeof useTraderStore>['is_synthetics_trading_market_available'];\n    onClick: () => void;\n    onMarketOpen: React.ComponentProps<typeof MarketCountdownTimer>['onMarketOpen'];\n    symbol: ReturnType<typeof useTraderStore>['symbol'];\n};\n\nconst MarketIsClosedOverlay = ({\n    is_eu,\n    is_synthetics_trading_market_available,\n    onClick,\n    onMarketOpen,\n    symbol,\n}: TMarketIsClosedOverlay) => {\n    const [is_timer_loading, setIsTimerLoading] = React.useState(true);\n\n    let message: JSX.Element | null = (\n        <Localize i18n_default_text='In the meantime, try our synthetic indices. They simulate real-market volatility and are open 24/7.' />\n    );\n    let btn_lbl = localize('Try Synthetic Indices');\n\n    if (!is_synthetics_trading_market_available) {\n        message = null;\n        btn_lbl = localize('See open markets');\n    }\n\n    return (\n        <div\n            className={classNames('market-is-closed-overlay', {\n                'market-is-closed-overlay--loading': is_timer_loading,\n            })}\n        >\n            <Text as='p' className='market-is-closed-overlay__main-heading' color='prominent' weight='bold'>\n                <Localize i18n_default_text='This market is closed' />\n            </Text>\n            <React.Suspense fallback={<UILoader />}>\n                <MarketCountdownTimer\n                    is_main_page\n                    setIsTimerLoading={setIsTimerLoading}\n                    onMarketOpen={onMarketOpen}\n                    symbol={symbol}\n                />\n            </React.Suspense>\n            {message && (\n                <Text align='center' as='p' className='market-is-closed-overlay__main-message' size='xs'>\n                    {message}\n                </Text>\n            )}\n            {(!is_eu || (is_eu && is_synthetics_trading_market_available)) && (\n                <Button className='market-is-closed-overlay__button' onClick={onClick} text={btn_lbl} primary />\n            )}\n        </div>\n    );\n};\n\nexport default MarketIsClosedOverlay;\n","export const symbolChange = (\n    onSymbolChange: (e: {\n        target: {\n            name: string;\n            value: unknown;\n        };\n    }) => Promise<void>\n) =>\n    onSymbolChange &&\n    ((symbol: unknown) => {\n        onSymbolChange({\n            target: {\n                name: 'symbol',\n                value: symbol,\n            },\n        });\n    });\n","import React from 'react';\nimport Digits from 'Modules/Contract/Components/Digits';\nimport AccumulatorsStats from 'Modules/Contract/Components/AccumulatorsStats';\nimport BottomWidgets from '../../SmartChart/Components/bottom-widgets';\nimport TopWidgets from '../../SmartChart/Components/top-widgets';\nimport { symbolChange } from '../../SmartChart/Helpers/symbol';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { observer, useStore } from '@deriv/stores';\nimport { useDevice } from '@deriv-com/ui';\n\ntype TDigits = React.ComponentProps<typeof Digits>;\n\ntype TChartTopWidgets = {\n    open_market: React.ComponentProps<typeof TopWidgets>['open_market'];\n    open: React.ComponentProps<typeof TopWidgets>['open'];\n};\n\ntype TChartBottomWidgets = {\n    digits: TDigits['digits_array'];\n    tick: TDigits['tick'];\n    show_accumulators_stats: boolean;\n};\n\nexport const DigitsWidget = observer(({ digits, tick }: { digits: TDigits['digits_array']; tick: TDigits['tick'] }) => {\n    const { contract_trade, ui } = useStore();\n    const {\n        onChange: onDigitChange,\n        symbol: underlying,\n        contract_type: trade_type,\n        last_digit: selected_digit,\n    } = useTraderStore();\n    const { is_mobile } = ui;\n    const { last_contract } = contract_trade;\n    const { contract_info = {}, digits_info = {}, display_status, is_digit_contract, is_ended } = last_contract;\n    return (\n        <Digits\n            contract_info={contract_info}\n            digits_array={digits}\n            digits_info={digits_info}\n            display_status={display_status}\n            is_digit_contract={is_digit_contract}\n            is_ended={is_ended}\n            is_mobile={is_mobile}\n            onDigitChange={onDigitChange}\n            is_trade_page\n            tick={tick}\n            trade_type={trade_type}\n            selected_digit={selected_digit}\n            underlying={underlying}\n        />\n    );\n});\n\n// Chart widgets passed into SmartCharts\nexport const ChartTopWidgets = observer(({ open_market, open }: TChartTopWidgets) => {\n    const { ui } = useStore();\n    const { is_digits_widget_active, onChange: onSymbolChange } = useTraderStore();\n    const { is_dark_mode_on } = ui;\n    const theme = is_dark_mode_on ? 'dark' : 'light';\n    const { isMobile } = useDevice();\n\n    return (\n        <TopWidgets\n            open_market={open_market}\n            open={open}\n            is_mobile={isMobile}\n            is_digits_widget_active={is_digits_widget_active}\n            onSymbolChange={symbolChange(onSymbolChange) as ReturnType<typeof useTraderStore>['onChange']}\n            theme={theme}\n        />\n    );\n});\n\nexport const ChartBottomWidgets = ({ digits, tick, show_accumulators_stats }: TChartBottomWidgets) => (\n    <BottomWidgets\n        Widget={show_accumulators_stats ? <AccumulatorsStats /> : <DigitsWidget digits={digits} tick={tick} />}\n    />\n);\n","import React from 'react';\nimport Loadable from 'react-loadable';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores.js';\nimport { useDevice } from '@deriv-com/ui';\n\ntype TFormLayout = {\n    is_market_closed: ReturnType<typeof useTraderStore>['is_market_closed'];\n    is_trade_enabled: boolean;\n};\n\nconst FormLayout = observer(({ is_market_closed, is_trade_enabled }: TFormLayout) => {\n    const { common, client } = useStore();\n    const { current_language } = common;\n    const { is_single_logging_in } = client;\n    const { isMobile } = useDevice();\n\n    const Screen = React.useMemo(() => {\n        return Loadable({\n            loader: () =>\n                isMobile\n                    ? import(/* webpackChunkName: \"screen-small\" */ './screen-small')\n                    : import(/* webpackChunkName: \"screen-large\" */ './screen-large'),\n            loading: () => null,\n            render(loaded, props) {\n                const Component = loaded.default;\n                return <Component {...props} />;\n            },\n        });\n    }, [isMobile]);\n\n    return (\n        <React.Fragment key={current_language}>\n            <Screen\n                is_trade_enabled={is_trade_enabled}\n                is_market_closed={isMobile ? undefined : is_market_closed}\n                is_single_logging_in={is_single_logging_in}\n            />\n        </React.Fragment>\n    );\n});\n\nexport default React.memo(FormLayout);\n","import React from 'react';\nimport { ActiveSymbols } from '@deriv/api-types';\nimport { useDevice } from '@deriv-com/ui';\nimport { ChartBarrierStore } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { ChartBottomWidgets } from './chart-widgets';\nimport AccumulatorsChartElements from '../../SmartChart/Components/Markers/accumulators-chart-elements';\nimport ToolbarWidgets from '../../SmartChart/Components/toolbar-widgets';\nimport type { TBottomWidgetsParams } from './trade';\nimport { SmartChart } from 'Modules/SmartChart';\n\ntype TTradeChartProps = {\n    bottomWidgets?: (props: TBottomWidgetsParams) => React.ReactElement;\n    has_barrier?: boolean;\n    is_accumulator: boolean;\n    topWidgets: (() => JSX.Element) | null | undefined;\n    children?: React.ReactNode;\n};\n\nconst TradeChart = observer((props: TTradeChartProps) => {\n    const { has_barrier, is_accumulator, topWidgets } = props;\n    const { ui, common, contract_trade, portfolio } = useStore();\n    const { isMobile } = useDevice();\n    const {\n        accumulator_barriers_data,\n        accumulator_contract_barriers_data,\n        chart_type,\n        granularity,\n        has_crossed_accu_barriers,\n        markers_array,\n        updateChartType,\n        updateGranularity,\n    } = contract_trade;\n    const ref = React.useRef<{ hasPredictionIndicators(): void; triggerPopup(arg: () => void): void }>(null);\n    const { all_positions } = portfolio;\n    const { is_chart_countdown_visible, is_chart_layout_default, is_dark_mode_on, is_positions_drawer_on } = ui;\n    const { current_language, is_socket_opened } = common;\n    const {\n        active_symbols,\n        barriers_flattened: extra_barriers,\n        chartStateChange,\n        chart_layout,\n        exportLayout,\n        has_alternative_source,\n        is_trade_enabled,\n        main_barrier_flattened: main_barrier,\n        setChartStatus,\n        show_digits_stats,\n        symbol,\n        onChange,\n        prev_contract_type,\n        wsForget,\n        wsForgetStream,\n        wsSendRequest,\n        wsSubscribe,\n    } = useTraderStore();\n\n    const settings = {\n        countdown: is_chart_countdown_visible,\n        isHighestLowestMarkerEnabled: false, // TODO: Pending UI,\n        language: current_language.toLowerCase(),\n        position: is_chart_layout_default ? 'bottom' : 'left',\n        theme: is_dark_mode_on ? 'dark' : 'light',\n        ...(is_accumulator ? { whitespace: 190, minimumLeftBars: isMobile ? 3 : undefined } : {}),\n        ...(has_barrier ? { whitespace: 110 } : {}),\n    };\n\n    const { current_spot, current_spot_time } = accumulator_barriers_data || {};\n\n    const bottomWidgets = React.useCallback(\n        ({ digits, tick }: TBottomWidgetsParams) => (\n            <ChartBottomWidgets digits={digits} tick={tick} show_accumulators_stats={is_accumulator} />\n        ),\n        [is_accumulator]\n    );\n\n    React.useEffect(() => {\n        if ((is_accumulator || show_digits_stats) && ref.current?.hasPredictionIndicators()) {\n            const cancelCallback = () => onChange({ target: { name: 'contract_type', value: prev_contract_type } });\n            ref.current?.triggerPopup(cancelCallback);\n        }\n    }, [is_accumulator, onChange, prev_contract_type, show_digits_stats]);\n\n    const getMarketsOrder = (active_symbols: ActiveSymbols): string[] => {\n        const synthetic_index = 'synthetic_index';\n        const has_synthetic_index = active_symbols.some(s => s.market === synthetic_index);\n        return active_symbols\n            .slice()\n            .sort((a, b) => (a.display_name < b.display_name ? -1 : 1))\n            .map(s => s.market)\n            .reduce(\n                (arr, market) => {\n                    if (arr.indexOf(market) === -1) arr.push(market);\n                    return arr;\n                },\n                has_synthetic_index ? [synthetic_index] : []\n            );\n    };\n\n    const barriers: ChartBarrierStore[] = main_barrier ? [main_barrier, ...extra_barriers] : extra_barriers;\n\n    // max ticks to display for mobile view for tick chart\n    const max_ticks = granularity === 0 ? 8 : 24;\n\n    if (!symbol || !active_symbols.length) return null;\n    return (\n        <SmartChart\n            ref={ref}\n            barriers={barriers}\n            contracts_array={markers_array}\n            bottomWidgets={(is_accumulator || show_digits_stats) && !isMobile ? bottomWidgets : props.bottomWidgets}\n            crosshair={isMobile ? 0 : undefined}\n            crosshairTooltipLeftAllow={560}\n            showLastDigitStats={show_digits_stats}\n            chartControlsWidgets={null}\n            chartStatusListener={(v: boolean) => setChartStatus(!v, true)}\n            chartType={chart_type}\n            initialData={{\n                activeSymbols: JSON.parse(JSON.stringify(active_symbols)),\n            }}\n            chartData={{\n                activeSymbols: JSON.parse(JSON.stringify(active_symbols)),\n            }}\n            feedCall={{\n                activeSymbols: false,\n            }}\n            enabledNavigationWidget={!isMobile}\n            enabledChartFooter={false}\n            id='trade'\n            isMobile={isMobile}\n            maxTick={isMobile ? max_ticks : undefined}\n            granularity={show_digits_stats || is_accumulator ? 0 : granularity}\n            requestAPI={wsSendRequest}\n            requestForget={wsForget}\n            requestForgetStream={wsForgetStream}\n            requestSubscribe={wsSubscribe}\n            settings={settings}\n            allowTickChartTypeOnly={show_digits_stats || is_accumulator}\n            stateChangeListener={chartStateChange}\n            symbol={symbol}\n            topWidgets={is_trade_enabled ? topWidgets : null}\n            isConnectionOpened={is_socket_opened}\n            clearChart={false}\n            toolbarWidget={() => {\n                return <ToolbarWidgets updateChartType={updateChartType} updateGranularity={updateGranularity} />;\n            }}\n            importedLayout={chart_layout}\n            onExportLayout={exportLayout}\n            shouldFetchTradingTimes={false}\n            hasAlternativeSource={has_alternative_source}\n            getMarketsOrder={getMarketsOrder}\n            should_zoom_out_on_yaxis={is_accumulator}\n            yAxisMargin={{\n                top: isMobile ? 76 : 106,\n            }}\n            isLive\n            leftMargin={!isMobile && is_positions_drawer_on ? 328 : 80}\n        >\n            {is_accumulator && (\n                <AccumulatorsChartElements\n                    all_positions={all_positions}\n                    current_spot={current_spot}\n                    current_spot_time={current_spot_time}\n                    has_crossed_accu_barriers={has_crossed_accu_barriers}\n                    should_show_profit_text={!!accumulator_contract_barriers_data.accumulators_high_barrier}\n                    symbol={symbol}\n                    is_mobile={isMobile}\n                />\n            )}\n        </SmartChart>\n    );\n});\nexport default TradeChart;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Div100vhContainer, SwipeableWrapper } from '@deriv/components';\nimport { TickSpotData } from '@deriv/api-types';\nimport { TRADE_TYPES, isTabletOs } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport ChartLoader from 'App/Components/Elements/chart-loader';\nimport PositionsDrawer from 'App/Components/Elements/PositionsDrawer';\nimport MarketIsClosedOverlay from 'App/Components/Elements/market-is-closed-overlay';\nimport { ChartTopWidgets, DigitsWidget } from './chart-widgets';\nimport FormLayout from '../Components/Form/form-layout';\nimport TradeChart from './trade-chart';\nimport { Loader, useDevice } from '@deriv-com/ui';\n\nexport type TBottomWidgetsParams = {\n    digits: number[];\n    tick: TickSpotData | null;\n};\ntype TBottomWidgetsMobile = TBottomWidgetsParams & {\n    setTick: (tick: TickSpotData | null) => void;\n    setDigits: (digits: number[]) => void;\n};\n\nconst BottomWidgetsMobile = ({ tick, digits, setTick, setDigits }: TBottomWidgetsMobile) => {\n    React.useEffect(() => {\n        setTick(tick);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [tick]);\n\n    React.useEffect(() => {\n        setDigits(digits);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [digits]);\n\n    // render nothing for bottom widgets on chart in mobile\n    return null;\n};\n\nconst Trade = observer(() => {\n    const { client, common, ui } = useStore();\n    const {\n        contract_type,\n        form_components,\n        getFirstOpenMarket,\n        has_barrier,\n        is_accumulator,\n        is_chart_loading,\n        is_market_closed,\n        is_synthetics_available,\n        is_synthetics_trading_market_available,\n        is_trade_enabled,\n        is_trade_params_expanded,\n        is_turbos,\n        is_vanilla,\n        onMount,\n        onUnmount,\n        prepareTradeStore,\n        setIsDigitsWidgetActive,\n        setMobileDigitView,\n        should_show_active_symbols_loading,\n        show_digits_stats,\n        symbol,\n    } = useTraderStore();\n    const {\n        has_only_forward_starting_contracts: is_market_unavailable_visible,\n        is_dark_mode_on: is_dark_theme,\n        notification_messages_ui: NotificationMessages,\n    } = ui;\n    const { is_eu, is_logged_in, is_single_logging_in } = client;\n    const { network_status } = common;\n    const { isDesktop, isMobile, isTabletPortrait } = useDevice();\n\n    const [digits, setDigits] = React.useState<number[]>([]);\n    const [tick, setTick] = React.useState<null | TickSpotData>(null);\n    const [try_synthetic_indices, setTrySyntheticIndices] = React.useState(false);\n    const [try_open_markets, setTryOpenMarkets] = React.useState(false);\n    const [category, setCategory] = React.useState<string>();\n    const [subcategory, setSubcategory] = React.useState<string>();\n    const [swipe_index, setSwipeIndex] = React.useState<number | undefined>(0);\n    const [shouldShowPortraitLoader, setShouldShowPortraitLoader] = React.useState(false);\n    const rotateTimeout = React.useRef<ReturnType<typeof setTimeout> | null>(null);\n    const portraitLoaderTimeout = React.useRef<ReturnType<typeof setTimeout> | null>(null);\n\n    const should_elevate_navigation =\n        is_trade_params_expanded &&\n        (contract_type === TRADE_TYPES.MATCH_DIFF || contract_type === TRADE_TYPES.OVER_UNDER);\n\n    const open_market = React.useMemo(() => {\n        if (try_synthetic_indices) {\n            return { category: 'synthetics' };\n        } else if (try_open_markets && category) {\n            return { category, subcategory };\n        }\n        return null;\n    }, [try_synthetic_indices, try_open_markets, category, subcategory]);\n\n    React.useEffect(() => {\n        const has_session_storage = !!sessionStorage.getItem('tradershub_redirect_to');\n\n        if (has_session_storage && is_logged_in) {\n            sessionStorage.removeItem('tradershub_redirect_to');\n        }\n    }, []);\n\n    React.useEffect(() => {\n        const html = document.querySelector('html');\n        if (isTabletPortrait && isTabletOs) {\n            setShouldShowPortraitLoader(true);\n            if (!is_chart_loading && !should_show_active_symbols_loading) {\n                rotateTimeout.current = setTimeout(() => {\n                    html?.classList.add('tablet-landscape');\n                    portraitLoaderTimeout.current = setTimeout(() => {\n                        setShouldShowPortraitLoader(false);\n                    }, 600);\n                }, 500);\n            }\n        }\n\n        return () => {\n            html?.classList.remove('tablet-landscape');\n            if (rotateTimeout.current) {\n                clearTimeout(rotateTimeout.current);\n            }\n            if (portraitLoaderTimeout.current) {\n                clearTimeout(portraitLoaderTimeout.current);\n            }\n        };\n    }, [isTabletPortrait, is_chart_loading, should_show_active_symbols_loading]);\n\n    React.useEffect(() => {\n        onMount();\n        if (!is_synthetics_available) {\n            const setMarket = async () => {\n                const markets_to_search = ['forex', 'indices', 'commodities']; // none-synthetic\n                const { category: market_cat, subcategory: market_subcat } =\n                    (await getFirstOpenMarket(markets_to_search)) ?? {};\n                if (market_cat) {\n                    setCategory(market_cat);\n                    setSubcategory(market_subcat);\n                }\n            };\n\n            setMarket();\n        }\n        return () => onUnmount();\n    }, [onMount, onUnmount, getFirstOpenMarket, is_synthetics_available]);\n\n    React.useEffect(() => {\n        if (isMobile) {\n            setDigits([]);\n        }\n        setTrySyntheticIndices(false);\n        setTryOpenMarkets(false);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [symbol, setDigits, setTrySyntheticIndices, is_synthetics_available]);\n\n    const bottomWidgets = React.useCallback(({ digits: d, tick: t }: TBottomWidgetsParams) => {\n        return <BottomWidgetsMobile digits={d} tick={t} setTick={setTick} setDigits={setDigits} />;\n    }, []);\n\n    const onChangeSwipeableIndex = (index?: number) => {\n        setMobileDigitView(index === 0);\n        setIsDigitsWidgetActive(index === 0);\n        setSwipeIndex(index);\n    };\n\n    const onTryOtherMarkets = async () => {\n        if (!is_synthetics_available) {\n            setTryOpenMarkets(true);\n            setTimeout(() => setTryOpenMarkets(false));\n        } else {\n            setTrySyntheticIndices(true);\n            setTimeout(() => setTrySyntheticIndices(false));\n        }\n    };\n\n    const topWidgets = React.useCallback(\n        () => <ChartTopWidgets open_market={open_market} open={try_synthetic_indices || try_open_markets} />,\n        [open_market, try_synthetic_indices, try_open_markets]\n    );\n\n    const form_wrapper_class = isMobile ? 'mobile-wrapper' : 'sidebar__container';\n    const chart_height_offset = React.useMemo(() => {\n        if (is_accumulator) return '295px';\n        if (is_turbos) return '300px';\n        return '259px';\n    }, [is_turbos, is_accumulator]);\n\n    return (\n        <div\n            className={classNames('trade-container', {\n                [`trade-container--${is_accumulator ? 'accumulators' : 'turbos'}`]: is_accumulator || is_turbos,\n            })}\n            id='trade_container'\n        >\n            {isDesktop && <PositionsDrawer />}\n            {/* Div100vhContainer is workaround for browsers on devices\n                    with toolbars covering screen height,\n                    using css vh is not returning correct screen height */}\n            <Div100vhContainer\n                className='chart-container'\n                height_offset={chart_height_offset}\n                id='chart_container'\n                is_disabled={!isMobile}\n            >\n                <NotificationMessages show_trade_notifications={isMobile} />\n                <React.Suspense\n                    fallback={\n                        <ChartLoader\n                            is_dark={is_dark_theme}\n                            is_visible={!symbol || !!is_chart_loading || !!is_single_logging_in}\n                        />\n                    }\n                >\n                    {isMobile ? (\n                        <React.Fragment>\n                            <ChartLoader\n                                is_visible={\n                                    is_chart_loading || is_single_logging_in || should_show_active_symbols_loading\n                                }\n                            />\n                            <SwipeableWrapper\n                                className={classNames({ 'vanilla-trade-chart': is_vanilla })}\n                                is_disabled={\n                                    !show_digits_stats ||\n                                    !is_trade_enabled ||\n                                    !form_components.length ||\n                                    is_chart_loading ||\n                                    is_single_logging_in ||\n                                    should_show_active_symbols_loading\n                                }\n                                is_swipe_disabled={swipe_index === 1}\n                                onChange={onChangeSwipeableIndex}\n                                should_elevate_navigation={should_elevate_navigation}\n                            >\n                                {show_digits_stats && <DigitsWidget digits={digits} tick={tick} />}\n                                <TradeChart\n                                    bottomWidgets={show_digits_stats ? bottomWidgets : undefined}\n                                    has_barrier={has_barrier}\n                                    is_accumulator={is_accumulator}\n                                    topWidgets={topWidgets}\n                                />\n                            </SwipeableWrapper>\n                        </React.Fragment>\n                    ) : (\n                        <div\n                            className={classNames('chart-container__wrapper', {\n                                'vanilla-trade-chart': is_vanilla,\n                            })}\n                        >\n                            <ChartLoader\n                                is_visible={\n                                    is_chart_loading ||\n                                    is_single_logging_in ||\n                                    should_show_active_symbols_loading ||\n                                    shouldShowPortraitLoader\n                                }\n                            />\n                            <TradeChart topWidgets={topWidgets} is_accumulator={is_accumulator} />\n                        </div>\n                    )}\n                </React.Suspense>\n            </Div100vhContainer>\n            {!shouldShowPortraitLoader && (\n                <div className={form_wrapper_class}>\n                    {is_market_closed && !is_market_unavailable_visible && (\n                        <MarketIsClosedOverlay\n                            is_eu={is_eu}\n                            is_synthetics_trading_market_available={is_synthetics_trading_market_available}\n                            onClick={onTryOtherMarkets}\n                            onMarketOpen={prepareTradeStore}\n                            symbol={symbol}\n                        />\n                    )}\n                    <FormLayout\n                        is_market_closed={is_market_closed}\n                        is_trade_enabled={\n                            is_trade_enabled && form_components.length > 0 && network_status.class === 'online'\n                        }\n                    />\n                </div>\n            )}\n            {shouldShowPortraitLoader && <Loader isFullScreen />}\n        </div>\n    );\n});\n\nexport default Trade;\n","import Trade from './Containers/trade';\n\nexport default Trade;\n","import React from 'react';\nimport { RouteComponentProps } from 'react-router';\nimport { routes, moduleLoader } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport Trade from 'Modules/Trading';\nimport { TRouteConfig } from 'Types';\n\nconst ContractDetails = React.lazy(\n    () =>\n        moduleLoader(() => import(/* webpackChunkName: \"contract\" */ 'Modules/Contract')) as Promise<{\n            default: React.ComponentType<RouteComponentProps>;\n        }>\n);\n\n// Error Routes\nconst Page404 = React.lazy(\n    () =>\n        moduleLoader(() => import(/* webpackChunkName: \"404\" */ 'Modules/Page404')) as Promise<{\n            default: React.ComponentType<Record<string, never>>;\n        }>\n);\n\n// Order matters\nconst initRoutesConfig = () => {\n    return [\n        {\n            path: routes.contract,\n            component: ContractDetails,\n            // Don't use `Localize` component since native html tag like `option` cannot render them\n            getTitle: () => localize('Contract Details'),\n            is_authenticated: true,\n        },\n        { path: routes.trade, component: Trade, getTitle: () => localize('Trader'), exact: true },\n    ];\n};\n\nlet routesConfig: TRouteConfig[] | undefined;\n\n// For default page route if page/path is not found, must be kept at the end of routes_config array\nconst route_default = { component: Page404, getTitle: () => localize('Error 404') };\n\nconst getRoutesConfig = () => {\n    if (!routesConfig) {\n        routesConfig = initRoutesConfig();\n        routesConfig.push(route_default);\n    }\n    return routesConfig;\n};\n\nexport default getRoutesConfig;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { findRouteByPath, normalizePath } from './helpers';\nimport getRoutesConfig from '../../Constants/routes-config';\n\ntype TBinaryLinkProps = Omit<React.HTMLProps<HTMLAnchorElement>, 'title' | 'ref'> &\n    React.PropsWithChildren<{\n        active_class?: string;\n        className?: string;\n        to?: string;\n        onClick?: () => void;\n    }>;\n\n// TODO: solve circular dependency problem\n// when binary link is imported into components present in routes config\n// or into their descendants\nconst BinaryLink = React.forwardRef<HTMLAnchorElement, TBinaryLinkProps>(\n    ({ active_class = '', to, children, ...props }, ref) => {\n        const path = normalizePath(to);\n        const route = findRouteByPath(path, getRoutesConfig());\n\n        if (!route) {\n            throw new Error(`Route not found: ${to}`);\n        }\n\n        return to ? (\n            <NavLink\n                data-testid='dt_binary_link'\n                to={path}\n                activeClassName={active_class || 'active'}\n                exact={route.exact}\n                ref={ref}\n                {...props}\n            >\n                {children}\n            </NavLink>\n        ) : (\n            <a data-testid='dt_binary_link' ref={ref} {...props}>\n                {children}\n            </a>\n        );\n    }\n);\n\nBinaryLink.displayName = 'BinaryLink';\n\nexport default BinaryLink;\n","import React from 'react';\nimport { Redirect, Route, RouteComponentProps } from 'react-router-dom';\nimport { redirectToLogin, removeBranchName, routes, isEmptyObject, default_title } from '@deriv/shared';\nimport { getLanguage } from '@deriv/translations';\nimport Page404 from 'Modules/Page404';\nimport { TBinaryRoutesProps, TRouteConfig } from 'Types';\n\ntype TRouteWithSubRoutesProps = TRouteConfig & TBinaryRoutesProps;\n\nconst RouteWithSubRoutes = (route: TRouteWithSubRoutesProps) => {\n    const validateRoute = (pathname: string) => {\n        if (pathname === '') return true;\n        if (route.path?.includes(':')) {\n            const static_pathname = pathname.substring(0, pathname.lastIndexOf('/') + 1);\n            return static_pathname === route.path.substring(0, route.path.indexOf(':'));\n        }\n        return route.path === pathname || !!route.routes?.find(r => pathname === r.path);\n    };\n\n    const renderFactory = (props: RouteComponentProps) => {\n        let result = null;\n\n        const pathname = removeBranchName(location.pathname).replace(/\\/$/, '');\n        const is_valid_route = validateRoute(pathname);\n\n        if (route.component === Redirect) {\n            let to = route.to;\n\n            // This if clause has been added just to remove '/index' from url in localhost env.\n            if (route.path === routes.index) {\n                const { location } = props;\n                to = location.pathname.toLowerCase().replace(route.path, '');\n            }\n            result = <Redirect to={to} />;\n        } else if (is_valid_route && route.is_authenticated && !route.is_logging_in && !route.is_logged_in) {\n            redirectToLogin(route.is_logged_in, getLanguage());\n        } else {\n            const default_subroute = route.routes ? route.routes.find(r => r.default) : {};\n            const has_default_subroute = !isEmptyObject(default_subroute);\n            const RouteComponent = route.component as React.ElementType;\n            result = (\n                <React.Fragment>\n                    {has_default_subroute && pathname === route.path && <Redirect to={default_subroute?.path} />}\n                    {is_valid_route ? <RouteComponent {...props} routes={route.routes} /> : <Page404 />}\n                </React.Fragment>\n            );\n        }\n\n        const title = route.getTitle?.() ?? '';\n        document.title = `${title} | ${default_title}`;\n\n        return result;\n    };\n\n    return <Route exact={route.exact} path={route.path} render={renderFactory} />;\n};\n\nexport default RouteWithSubRoutes;\n","import React from 'react';\nimport { Switch } from 'react-router-dom';\nimport getRoutesConfig from 'App/Constants/routes-config';\nimport { TBinaryRoutesProps, TRouteConfig } from 'Types';\nimport RouteWithSubRoutes from './route-with-sub-routes';\n\nconst BinaryRoutes = (props: TBinaryRoutesProps) => (\n    <React.Suspense fallback={<div />}>\n        <Switch>\n            {getRoutesConfig().map((route: TRouteConfig, index) => (\n                /* Index is the only thing that can be used for the key here because the only other property\n                that can be used as a key and available in every route is a localized title returned from getTitle() which,\n                when used, causes severe bugs upon switching between languages! */\n                <RouteWithSubRoutes key={index} {...route} {...props} />\n            ))}\n        </Switch>\n    </React.Suspense>\n);\n\nexport default BinaryRoutes;\n","import BinaryLink from './binary-link';\nimport RouteWithSubRoutes from './route-with-sub-routes';\nimport BinaryRoutes from './binary-routes';\n\nexport * from './helpers';\nexport { BinaryLink, RouteWithSubRoutes };\nexport default BinaryRoutes;\n","import React from 'react';\nimport { withRouter, matchPath, RouteComponentProps } from 'react-router';\nimport Loadable from 'react-loadable';\nimport { UILoader } from '@deriv/components';\nimport { routes } from '@deriv/shared';\nimport BinaryRoutes from 'App/Components/Routes';\nimport getRoutesConfig from 'App/Constants/routes-config';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\ntype TMatchPattern = { from: Array<string | undefined>; to: Array<string> };\n\ntype TRoutesProps = RouteComponentProps & { passthrough?: React.ComponentProps<typeof BinaryRoutes>['passthrough'] };\n\ntype TTradePageMountingMiddlewareParams = {\n    action: string;\n    callback: (has_match: boolean) => void;\n    match_patterns: TMatchPattern[];\n    path_from: string;\n    path_to: string;\n};\n\nexport const checkRoutingMatch = (route_list: Array<string | undefined>, path = '/dtrader') => {\n    return route_list.some(route => !!matchPath(path, { path: route, exact: true }));\n};\n\nexport const tradePageMountingMiddleware = ({\n    path_from,\n    path_to,\n    action,\n    match_patterns,\n    callback,\n}: TTradePageMountingMiddlewareParams) => {\n    if (action === 'PUSH' || action === 'POP') {\n        // We use matchPath here because on route, there will be extra\n        // parameters which matchPath takes into account.\n        const has_match = match_patterns.some(\n            pattern => checkRoutingMatch(pattern.from, path_from) && checkRoutingMatch(pattern.to, path_to)\n        );\n\n        callback(has_match);\n    }\n\n    return true;\n};\n\nconst ErrorComponent = Loadable({\n    loader: () => import(/* webpackChunkName: \"error-component\" */ 'App/Components/Elements/Errors'),\n    loading: () => <UILoader />,\n    render(loaded, props) {\n        const Component = loaded.default;\n        return <Component {...props} />;\n    },\n});\n\nconst Routes = observer(({ history, passthrough }: TRoutesProps) => {\n    const { client, common, ui, portfolio } = useStore();\n    const { setSkipPrePostLifecycle: setTradeMountingPolicy } = useTraderStore();\n    const { error, has_error } = common;\n    const { onUnmount: onUnmountPortfolio } = portfolio;\n    const { is_logged_in, is_logging_in } = client;\n    const { setPromptHandler } = ui;\n\n    React.useEffect(() => {\n        if (setPromptHandler) {\n            setPromptHandler(true, (route_to: RouteComponentProps['location'], action: string) => {\n                // clears portfolio when we navigate to mt5 dashboard\n                tradePageMountingMiddleware({\n                    path_from: history.location.pathname,\n                    path_to: route_to.pathname,\n                    match_patterns: [\n                        {\n                            from: getRoutesConfig()\n                                .flatMap(route => {\n                                    if (route.routes) {\n                                        return route.routes.map(subroute => subroute.path);\n                                    }\n                                    return [route.path];\n                                })\n                                .filter(path => path && path !== routes.mt5 && path !== routes.dxtrade),\n                            to: [routes.mt5, routes.dxtrade],\n                        },\n                    ],\n                    action,\n                    callback: (has_match: boolean) => {\n                        if (has_match) {\n                            onUnmountPortfolio();\n                        }\n                    },\n                });\n\n                return tradePageMountingMiddleware({\n                    path_from: history.location.pathname,\n                    path_to: route_to.pathname,\n                    match_patterns: [\n                        { from: [routes.contract], to: [routes.trade] },\n                        { from: [routes.trade], to: [routes.contract] },\n                    ],\n                    action,\n                    callback: setTradeMountingPolicy,\n                });\n            });\n        }\n\n        return () => {\n            setPromptHandler?.(false);\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    React.useEffect(() => {\n        return () => onUnmountPortfolio();\n    }, [onUnmountPortfolio]);\n\n    if (has_error) return <ErrorComponent {...error} />;\n\n    return <BinaryRoutes is_logged_in={is_logged_in} is_logging_in={is_logging_in} passthrough={passthrough} />;\n});\n\nexport default withRouter(Routes);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { Icon } from '@deriv/components';\nimport { getCardLabels } from '@deriv/shared';\n\ntype TPositionsResultMobile = {\n    is_visible: boolean;\n    result: 'won' | 'lost';\n};\n\nconst PositionsResultMobile = ({ is_visible, result }: TPositionsResultMobile) => {\n    const is_contract_won = result === 'won';\n    return (\n        <React.Fragment>\n            <CSSTransition\n                in={is_visible}\n                timeout={250}\n                classNames={{\n                    enter: 'positions-modal-card__result--enter',\n                    enterDone: 'positions-modal-card__result--enter-done',\n                    exit: 'positions-modal-card__result--exit',\n                }}\n                unmountOnExit\n            >\n                <div className='positions-modal-card__caption-wrapper' data-testid='result_mobile'>\n                    <span\n                        className={classNames('positions-modal-card__caption', {\n                            'positions-modal-card__caption--won': is_contract_won,\n                            'positions-modal-card__caption--lost': !is_contract_won,\n                        })}\n                    >\n                        <Icon\n                            icon='IcPositionClosed'\n                            className='positions-modal-card__icon'\n                            color={is_contract_won ? 'green' : 'red'}\n                        />\n                        <span>{getCardLabels().CLOSED}</span>\n                    </span>\n                </div>\n            </CSSTransition>\n        </React.Fragment>\n    );\n};\n\nexport default PositionsResultMobile;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { ArrowIndicator, ContractCard, CurrencyBadge, Money, ProgressSliderMobile, Text } from '@deriv/components';\nimport {\n    addComma,\n    getContractPath,\n    getContractTypeDisplay,\n    getCardLabels,\n    getMarketInformation,\n    getSymbolDisplayName,\n    getEndTime,\n    isAccumulatorContract,\n    isCryptoContract,\n    isMultiplierContract,\n    isTurbosContract,\n    isCryptocurrency,\n    isVanillaContract,\n} from '@deriv/shared';\nimport { BinaryLink } from 'App/Components/Routes';\nimport { PositionsCardLoader } from 'App/Components/Elements/ContentLoader';\nimport PositionsResultMobile from './positions-result-mobile';\nimport { observer, useStore } from '@deriv/stores';\nimport { useTraderStore } from 'Stores/useTraderStores';\n\ntype TPortfolioStore = ReturnType<typeof useStore>['portfolio'];\ntype TPortfolioPosition = Pick<\n    TPortfolioStore['active_positions'][0],\n    'contract_info' | 'id' | 'indicative' | 'is_sell_requested' | 'profit_loss'\n>;\ntype TPickPortfolioStore = Pick<TPortfolioStore, 'onClickSell' | 'onClickCancel'>;\ntype TUiStore = ReturnType<typeof useStore>['ui'];\n\ntype TPositionsModalCard = TPickPortfolioStore &\n    TPortfolioPosition & {\n        className?: string;\n        contract_info: TPortfolioPosition['contract_info'];\n        contract_update: TPortfolioPosition['contract_info']['contract_update'];\n        currency: ReturnType<typeof useStore>['client']['currency'];\n        current_tick?: React.ComponentProps<typeof ProgressSliderMobile>['current_tick'];\n        is_loading?: boolean;\n        result?: React.ComponentProps<typeof PositionsResultMobile>['result'];\n        togglePositions: TUiStore['togglePositionsDrawer'];\n    };\n\nconst PositionsModalCard = observer(\n    ({\n        className,\n        contract_info,\n        contract_update,\n        currency,\n        current_tick,\n        id,\n        is_loading,\n        is_sell_requested,\n        onClickSell,\n        profit_loss,\n        onClickCancel,\n        result,\n        togglePositions,\n    }: TPositionsModalCard) => {\n        const { ui, common, contract_trade } = useStore();\n        const { active_symbols } = useTraderStore();\n        const { server_time } = common;\n        const { getContractById } = contract_trade;\n        const {\n            addToast,\n            current_focus,\n            is_mobile,\n            removeToast,\n            setCurrentFocus,\n            should_show_cancellation_warning,\n            toggleCancellationWarning,\n        } = ui;\n        const loader_el = (\n            <div className='positions-modal-card__content-loader'>\n                <PositionsCardLoader speed={2} />\n            </div>\n        );\n        const {\n            barrier,\n            bid_price,\n            buy_price,\n            contract_type,\n            date_expiry,\n            date_start,\n            entry_spot_display_value,\n            is_sold,\n            profit,\n            sell_price,\n            shortcode,\n            tick_count,\n            underlying,\n        } = contract_info;\n        const { STAKE, CONTRACT_VALUE, ENTRY_SPOT, STRIKE, TOTAL_PROFIT_LOSS } = getCardLabels();\n        const is_multiplier = isMultiplierContract(contract_type);\n        const is_accumulator = isAccumulatorContract(contract_type);\n        const is_turbos = isTurbosContract(contract_type);\n        const is_vanilla = isVanillaContract(contract_type);\n        const is_crypto = isCryptoContract(underlying);\n        const has_progress_slider = !is_multiplier || (is_crypto && is_multiplier);\n        const has_ended = !!getEndTime(contract_info);\n        const fallback_result = profit_loss >= 0 ? 'won' : 'lost';\n\n        const display_name = getSymbolDisplayName(active_symbols, getMarketInformation(shortcode || '').underlying);\n\n        const contract_vanilla_el = (\n            <React.Fragment>\n                <ContractCard.Header\n                    contract_info={contract_info}\n                    display_name={display_name}\n                    getCardLabels={getCardLabels}\n                    getContractTypeDisplay={getContractTypeDisplay}\n                    has_progress_slider={!is_mobile && has_progress_slider}\n                    is_mobile={is_mobile}\n                    is_sell_requested={is_sell_requested}\n                    onClickSell={onClickSell}\n                    server_time={server_time as moment.Moment}\n                />\n                <CurrencyBadge currency={contract_info?.currency ?? ''} />\n                <div className={classNames('positions-modal-card__grid', 'positions-modal-card__grid-body')}>\n                    <div className={classNames('positions-modal-card__grid-profit-payout')}>\n                        <div className='positions-modal-card__purchase-price'>\n                            <Text size='xxxs' className='positions-modal-card__purchase-label'>\n                                {STAKE}\n                            </Text>\n                            <Text weight='bold' size='xxs' className='positions-modal-card__purchase-value'>\n                                <Money amount={buy_price} currency={currency} />\n                            </Text>\n                        </div>\n                        <div className='positions-modal-card__payout-price'>\n                            <Text size='xxxs' className='positions-modal-card__payout-label'>\n                                {CONTRACT_VALUE}\n                            </Text>\n                            <Text weight='bold' size='xxs' className='positions-modal-card__payout-value'>\n                                <div\n                                    className={classNames({\n                                        'dc-contract-card--loss': Number(profit) < 0,\n                                        'dc-contract-card--profit': Number(profit) > 0,\n                                    })}\n                                >\n                                    <Money amount={is_sold ? sell_price : bid_price} currency={currency} />\n                                </div>\n                            </Text>\n                        </div>\n                    </div>\n\n                    <div className={classNames('positions-modal-card__grid-price-payout')}>\n                        <div className='positions-modal-card__purchase-price'>\n                            <Text size='xxxs' className='positions-modal-card__purchase-label'>\n                                {ENTRY_SPOT}\n                            </Text>\n                            <Text weight='bold' size='xxs' className='positions-modal-card__purchase-value'>\n                                {addComma(entry_spot_display_value)}\n                            </Text>\n                        </div>\n                        <div className='positions-modal-card__payout-price'>\n                            <Text size='xxxs' className='positions-modal-card__payout-label'>\n                                {STRIKE}\n                            </Text>\n                            <Text weight='bold' size='xxs' className='positions-modal-card__payout-value'>\n                                {addComma(barrier)}\n                            </Text>\n                        </div>\n                    </div>\n\n                    {result || !!is_sold ? (\n                        <PositionsResultMobile is_visible={!!is_sold} result={result || fallback_result} />\n                    ) : (\n                        <ProgressSliderMobile\n                            className='positions-modal-card__progress'\n                            current_tick={current_tick}\n                            getCardLabels={getCardLabels}\n                            is_loading={is_loading}\n                            start_time={date_start}\n                            expiry_time={date_expiry}\n                            server_time={server_time as moment.Moment}\n                            ticks_count={tick_count}\n                        />\n                    )}\n                </div>\n                <div className={classNames('positions-modal-card__item', className)}>\n                    <div className='dc-contract-card-item__header'>{TOTAL_PROFIT_LOSS}</div>\n                    <div\n                        className={classNames('dc-contract-card-item__body', {\n                            'dc-contract-card-item__body--crypto': isCryptocurrency(currency),\n                            'dc-contract-card-item__body--loss': Number(profit) < 0,\n                            'dc-contract-card-item__body--profit': Number(profit) > 0,\n                        })}\n                    >\n                        <Money amount={profit} currency={currency} />\n                        {!is_sold && (\n                            <ArrowIndicator className='dc-contract-card__indicative--movement' value={profit} />\n                        )}\n                    </div>\n                </div>\n                <ContractCard.Footer\n                    contract_info={contract_info}\n                    getCardLabels={getCardLabels}\n                    is_multiplier={is_multiplier}\n                    is_sell_requested={is_sell_requested}\n                    onClickCancel={onClickCancel}\n                    onClickSell={onClickSell}\n                    server_time={server_time as moment.Moment}\n                />\n            </React.Fragment>\n        );\n\n        const common_card_header = (\n            <ContractCard.Header\n                contract_info={contract_info}\n                display_name={display_name}\n                getCardLabels={getCardLabels}\n                getContractTypeDisplay={getContractTypeDisplay}\n                has_progress_slider={(!is_mobile && has_progress_slider) || is_accumulator}\n                is_mobile={is_mobile}\n                is_sell_requested={is_sell_requested}\n                onClickSell={onClickSell}\n                server_time={server_time as moment.Moment}\n            />\n        );\n\n        const common_card_body = (\n            <ContractCard.Body\n                addToast={addToast}\n                contract_info={contract_info}\n                contract_update={contract_update}\n                currency={currency}\n                current_focus={current_focus}\n                getCardLabels={getCardLabels}\n                getContractById={getContractById}\n                is_accumulator={is_accumulator}\n                is_mobile={is_mobile}\n                is_multiplier={is_multiplier}\n                is_positions\n                is_sold={!!is_sold}\n                is_turbos={is_turbos}\n                has_progress_slider={is_mobile && has_progress_slider && !has_ended}\n                removeToast={removeToast}\n                server_time={server_time as moment.Moment}\n                setCurrentFocus={setCurrentFocus}\n                should_show_cancellation_warning={should_show_cancellation_warning}\n                toggleCancellationWarning={toggleCancellationWarning}\n            />\n        );\n\n        const common_card_footer = (\n            <ContractCard.Footer\n                contract_info={contract_info}\n                getCardLabels={getCardLabels}\n                is_multiplier={is_multiplier}\n                is_sell_requested={is_sell_requested}\n                onClickCancel={onClickCancel}\n                onClickSell={onClickSell}\n                server_time={server_time as moment.Moment}\n            />\n        );\n\n        const common_contract_el = (\n            <React.Fragment>\n                <ContractCard\n                    contract_info={contract_info}\n                    getCardLabels={getCardLabels}\n                    is_multiplier={is_multiplier}\n                    profit_loss={profit_loss}\n                    should_show_result_overlay={false}\n                >\n                    {common_card_header}\n                    {common_card_body}\n                    {common_card_footer}\n                </ContractCard>\n            </React.Fragment>\n        );\n\n        const contract_el = is_vanilla ? contract_vanilla_el : common_contract_el;\n\n        return (\n            <div id={`dt_drawer_card_${id}`} className={classNames('positions-modal-card__wrapper', className)}>\n                <BinaryLink\n                    onClick={togglePositions}\n                    className={classNames('positions-modal-card', 'dc-contract-card', {\n                        'positions-modal-card--multiplier': is_multiplier,\n                        'dc-contract-card--green': profit_loss > 0,\n                        'dc-contract-card--red': profit_loss < 0,\n                    })}\n                    to={getContractPath(id)}\n                >\n                    {underlying ? contract_el : loader_el}\n                </BinaryLink>\n            </div>\n        );\n    }\n);\n\nexport default PositionsModalCard;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Icon } from '@deriv/components';\nimport 'Sass/app/_common/components/positions-toggle.scss';\n\ntype TTogglePositions = {\n    positions_count: number;\n    is_open: boolean;\n    togglePositions: () => void;\n};\n\nconst TogglePositions = ({ positions_count, is_open, togglePositions }: TTogglePositions) => {\n    const positions_toggle_class = classNames('positions-toggle', {\n        'positions-toggle--active': is_open,\n        'positions-toggle--has-count': positions_count > 0,\n    });\n    return (\n        <a\n            id='dt_positions_toggle'\n            data-testid='dt_positions_toggle'\n            className={positions_toggle_class}\n            onClick={togglePositions}\n            data-count={positions_count}\n        >\n            <Icon data_testid='dt_icon' icon='IcPortfolio' className='positions-toggle__icon' />\n        </a>\n    );\n};\n\nexport default TogglePositions;\n","import React from 'react';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\nimport { Icon, Div100vhContainer, Modal, Text } from '@deriv/components';\nimport { isDisabledLandscapeBlockerRoute, isMobileOs, isTabletOs, routes } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport EmptyPortfolioMessage from '../EmptyPortfolioMessage';\nimport PositionsModalCard from 'App/Components/Elements/PositionsDrawer/positions-modal-card';\nimport TogglePositions from './toggle-positions';\nimport { observer, useStore } from '@deriv/stores';\nimport { useDevice } from '@deriv-com/ui';\n\ntype TTogglePositionsMobile = Pick<\n    ReturnType<typeof useStore>['portfolio'],\n    'active_positions_count' | 'error' | 'onClickSell' | 'onClickCancel'\n> & {\n    currency: ReturnType<typeof useStore>['client']['currency'];\n    filtered_positions: ReturnType<typeof useStore>['portfolio']['all_positions'];\n    is_empty: boolean;\n};\n\ntype THiddenPositionsId = TTogglePositionsMobile['filtered_positions'][0]['id'];\n\nconst TogglePositionsMobile = observer(\n    ({\n        active_positions_count,\n        currency,\n        error,\n        filtered_positions,\n        is_empty,\n        onClickSell,\n        onClickCancel,\n    }: TTogglePositionsMobile) => {\n        const { togglePositionsDrawer, is_positions_drawer_on } = useStore().ui;\n        const [hidden_positions_ids, setHiddenPositionsIds] = React.useState<THiddenPositionsId[]>([]);\n        const { isMobile, isTablet } = useDevice();\n\n        const location = useLocation();\n        const pathname = location?.pathname;\n        const is_hidden_landscape_blocker = isDisabledLandscapeBlockerRoute(pathname);\n        const should_show_dtrader_tablet_view = pathname === routes.trade && isTabletOs;\n\n        const show_blocker_dtrader_mobile_landscape_view =\n            !isMobile &&\n            isMobileOs() &&\n            (pathname.startsWith(routes.trade) ||\n                pathname.startsWith(routes.reports) ||\n                pathname.startsWith('/contract'));\n\n        const hide_landscape_blocker =\n            !show_blocker_dtrader_mobile_landscape_view &&\n            (is_hidden_landscape_blocker || should_show_dtrader_tablet_view);\n\n        const displayed_positions = filtered_positions\n            .filter(p =>\n                hidden_positions_ids.every(hidden_position_id => hidden_position_id !== p.contract_info.contract_id)\n            )\n            .slice(0, 5);\n        const closed_positions_ids = displayed_positions\n            .filter(position => position.contract_info?.is_sold)\n            .map(p => p.contract_info.contract_id);\n\n        const closeModal = () => {\n            setHiddenPositionsIds([...new Set([...hidden_positions_ids, ...closed_positions_ids])]);\n            togglePositionsDrawer();\n        };\n        // Show only 5 most recent open contracts\n        const body_content = (\n            <React.Fragment>\n                <TransitionGroup component='div'>\n                    {displayed_positions.map(portfolio_position => (\n                        <CSSTransition\n                            appear\n                            key={portfolio_position.id}\n                            in={true}\n                            timeout={150}\n                            classNames={{\n                                appear: 'dc-contract-card__wrapper--enter',\n                                enter: 'dc-contract-card__wrapper--enter',\n                                enterDone: 'dc-contract-card__wrapper--enter-done',\n                                exit: 'dc-contract-card__wrapper--exit',\n                            }}\n                            unmountOnExit\n                        >\n                            <PositionsModalCard\n                                onClickSell={onClickSell}\n                                onClickCancel={onClickCancel}\n                                key={portfolio_position.id}\n                                currency={currency}\n                                togglePositions={togglePositionsDrawer}\n                                {...portfolio_position}\n                            />\n                        </CSSTransition>\n                    ))}\n                </TransitionGroup>\n            </React.Fragment>\n        );\n\n        return (\n            <React.Fragment>\n                <TogglePositions\n                    is_open={is_positions_drawer_on}\n                    togglePositions={togglePositionsDrawer}\n                    positions_count={active_positions_count}\n                />\n                {hide_landscape_blocker && (\n                    <Modal\n                        is_open={is_positions_drawer_on}\n                        toggleModal={closeModal}\n                        id='dt_mobile_positions'\n                        is_vertical_top\n                        has_close_icon\n                        width={isMobile ? 'calc(100vw - 32px)' : undefined}\n                        className='toggle-positions'\n                    >\n                        <Div100vhContainer className='positions-modal' height_offset={isTablet ? '16rvh' : '48px'}>\n                            <div className='positions-modal__header'>\n                                <Text size='xxxs' className='positions-modal__title'>\n                                    <Icon icon='IcPortfolio' className='positions-modal__title-icon' />\n                                    {localize('Recent positions')}\n                                </Text>\n                                <div className='positions-modal__close-btn' onClick={closeModal}>\n                                    <Icon data_testid='dt_modal_header_close' icon='IcMinusBold' />\n                                </div>\n                            </div>\n                            <div className='positions-modal__body'>\n                                {is_empty || !displayed_positions.length || error ? (\n                                    <EmptyPortfolioMessage error={error} />\n                                ) : (\n                                    body_content\n                                )}\n                            </div>\n                            <div className='positions-modal__footer'>\n                                <NavLink\n                                    onClick={closeModal}\n                                    className='dc-btn dc-btn--secondary dc-btn__large positions-modal__footer-btn'\n                                    to={routes.positions}\n                                >\n                                    <Text size='xs' weight='bold'>\n                                        {localize('Go to Reports')}\n                                    </Text>\n                                </NavLink>\n                            </div>\n                        </Div100vhContainer>\n                    </Modal>\n                )}\n            </React.Fragment>\n        );\n    }\n);\n\nexport default TogglePositionsMobile;\n","import React from 'react';\nimport TogglePositionsMobile from 'App/Components/Elements/TogglePositions/toggle-positions-mobile';\nimport { filterByContractType } from 'App/Components/Elements/PositionsDrawer/helpers';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { observer, useStore } from '@deriv/stores';\nimport { TRADE_TYPES, isTurbosContract, isVanillaContract, isContractSupportedAndStarted } from '@deriv/shared';\n\nconst PopulateHeader = observer(() => {\n    const { portfolio, client } = useStore();\n    const { symbol, contract_type: trade_contract_type } = useTraderStore();\n    const { currency: positions_currency } = client;\n    const {\n        active_positions_count,\n        all_positions: positions,\n        error: positions_error,\n        onClickSell: onPositionsSell,\n        onClickCancel: onPositionsCancel,\n    } = portfolio;\n\n    const filtered_positions = positions.filter(\n        p =>\n            isContractSupportedAndStarted(symbol, p.contract_info) &&\n            (isTurbosContract(trade_contract_type) || isVanillaContract(trade_contract_type)\n                ? filterByContractType(\n                      p.contract_info,\n                      isTurbosContract(trade_contract_type) ? TRADE_TYPES.TURBOS.SHORT : TRADE_TYPES.VANILLA.CALL\n                  ) ||\n                  filterByContractType(\n                      p.contract_info,\n                      isTurbosContract(trade_contract_type) ? TRADE_TYPES.TURBOS.LONG : TRADE_TYPES.VANILLA.PUT\n                  )\n                : filterByContractType(p.contract_info, trade_contract_type))\n    );\n\n    return (\n        <TogglePositionsMobile\n            active_positions_count={active_positions_count}\n            currency={positions_currency}\n            error={positions_error}\n            filtered_positions={filtered_positions}\n            is_empty={!filtered_positions.length}\n            onClickSell={onPositionsSell}\n            onClickCancel={onPositionsCancel}\n        />\n    );\n});\n\nexport default PopulateHeader;\n","import React from 'react';\nimport { when } from 'mobx';\nimport { routes, WS } from '@deriv/shared';\nimport PopulateHeader from './populate-header';\nimport { observer, useStore } from '@deriv/stores';\nimport TraderProviders from '../../trader-providers';\nimport { TCoreStores } from '@deriv/stores/types';\nimport { useDevice } from '@deriv-com/ui';\n\ntype TradeHeaderExtensionsProps = {\n    store: TCoreStores;\n};\n\nconst TradeHeaderExtensions = observer(({ store }: TradeHeaderExtensionsProps) => {\n    const { client, modules, ui, portfolio } = useStore();\n    const { populateHeaderExtensions } = ui;\n    const { onMount: onMountPositions } = portfolio;\n    const { is_logged_in, is_populating_account_list } = client;\n    const { onMountCommon: onMountCashier, setAccountSwitchListener } = modules.cashier.general_store;\n    const { isDesktop } = useDevice();\n\n    const show_positions_toggle = location.pathname !== routes.mt5;\n    const show_component = is_logged_in && show_positions_toggle && !isDesktop;\n\n    const populateHeaderfunction = React.useCallback(() => {\n        const header_items = show_component ? (\n            <TraderProviders store={store}>\n                <PopulateHeader />\n            </TraderProviders>\n        ) : null;\n\n        populateHeaderExtensions(header_items);\n    }, [show_component, store, populateHeaderExtensions]);\n\n    React.useEffect(() => {\n        const waitForLogin = async () => {\n            if (!isDesktop && show_positions_toggle) {\n                await when(() => !is_populating_account_list); // Waits for login to complete\n                if (is_logged_in) {\n                    await WS.wait('authorize');\n                    onMountPositions();\n                    onMountCashier(true);\n                    setAccountSwitchListener();\n                }\n            }\n\n            populateHeaderfunction();\n        };\n\n        waitForLogin().catch(() => {\n            // Do nothing: This is to remove the bug reported by SonarCloud about not having a catch statement here.\n        });\n\n        return () => populateHeaderExtensions(null);\n    }, [\n        onMountCashier,\n        onMountPositions,\n        populateHeaderfunction,\n        populateHeaderExtensions,\n        setAccountSwitchListener,\n        store,\n        show_positions_toggle,\n        isDesktop,\n        is_logged_in,\n        is_populating_account_list,\n    ]);\n\n    React.useEffect(() => {\n        populateHeaderfunction();\n    }, [populateHeaderfunction]);\n\n    return null;\n});\n\nexport default TradeHeaderExtensions;\n","import React from 'react';\nimport { RouteComponentProps, withRouter } from 'react-router-dom';\nimport { routes } from '@deriv/shared';\nimport TogglePositions from '../Components/Elements/TogglePositions/toggle-positions';\nimport { observer, useStore } from '@deriv/stores';\n\nconst TradeFooterExtensions = observer((props: RouteComponentProps) => {\n    const { location } = props;\n    const { client, portfolio, ui } = useStore();\n    const { is_logged_in } = client;\n    const { active_positions_count } = portfolio;\n    const { is_positions_drawer_on, populateFooterExtensions, togglePositionsDrawer } = ui;\n    React.useEffect(() => populateFooter());\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n    React.useEffect(() => () => populateFooterExtensions([]), []);\n\n    const TogglePositionsIcon = () => (\n        <TogglePositions\n            is_open={is_positions_drawer_on}\n            togglePositions={togglePositionsDrawer}\n            positions_count={active_positions_count}\n        />\n    );\n\n    const populateFooter = () => {\n        const show_positions_toggle = location.pathname === routes.trade;\n\n        if (is_logged_in && show_positions_toggle) {\n            populateFooterExtensions([\n                {\n                    position: 'left',\n                    Component: TogglePositionsIcon,\n                },\n            ]);\n        } else {\n            populateFooterExtensions([]);\n        }\n    };\n\n    return null;\n});\n\nexport default withRouter(TradeFooterExtensions);\n","import React from 'react';\nimport Loadable from 'react-loadable';\nimport { UILoader } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { observer, useStore } from '@deriv/stores';\nimport TraderProviders from '../../trader-providers';\nimport type { TCoreStores } from '@deriv/stores/types';\n\ntype TTradeSettingsExtensionsProps = {\n    store: TCoreStores;\n};\n\nconst ChartSettingContainer = Loadable({\n    loader: () =>\n        import(\n            /* webpackChunkName: \"settings-chart\", webpackPrefetch: true */ 'App/Containers/SettingsModal/settings-chart'\n        ),\n    loading: () => <UILoader />,\n});\n\nconst renderItemValue = <T extends object>(props: T, store: TCoreStores) => (\n    <TraderProviders store={store}>\n        <ChartSettingContainer {...props} />\n    </TraderProviders>\n);\n\nconst TradeSettingsExtensions = observer(({ store }: TTradeSettingsExtensionsProps) => {\n    const { ui } = useStore();\n    const { populateSettingsExtensions } = ui;\n    const populateSettings = () => {\n        const menu_items: Parameters<typeof populateSettingsExtensions>[0] = [\n            {\n                icon: 'IcChart',\n                label: localize('Charts'),\n                value: props => renderItemValue(props, store),\n            },\n        ];\n        populateSettingsExtensions(menu_items);\n    };\n\n    React.useEffect(() => {\n        return () => populateSettingsExtensions(null);\n    }, [populateSettingsExtensions]);\n\n    React.useEffect(() => populateSettings());\n\n    return null;\n});\n\nexport default TradeSettingsExtensions;\n","import React from 'react';\nimport Loadable from 'react-loadable';\nimport Routes from 'App/Containers/Routes/routes';\nimport TradeHeaderExtensions from 'App/Containers/trade-header-extensions';\nimport TradeFooterExtensions from 'App/Containers/trade-footer-extensions';\nimport TradeSettingsExtensions from 'App/Containers/trade-settings-extensions';\nimport { NetworkStatusToastErrorPopup } from 'Modules/Trading/Containers/toast-popup';\nimport type { TWebSocket } from 'Types';\nimport initStore from './init-store';\nimport 'Sass/app.scss';\nimport type { TCoreStores } from '@deriv/stores/types';\nimport TraderProviders from '../trader-providers';\nimport ModulesProvider from 'Stores/Providers/modules-providers';\n\ntype Apptypes = {\n    passthrough: {\n        root_store: TCoreStores;\n        WS: TWebSocket;\n    };\n};\n\nconst TradeModals = Loadable({\n    loader: () => import(/* webpackChunkName: \"trade-modals\", webpackPrefetch: true */ './Containers/Modals'),\n    loading: () => null,\n});\n\nconst App = ({ passthrough }: Apptypes) => {\n    const root_store = initStore(passthrough.root_store, passthrough.WS);\n\n    React.useEffect(() => {\n        return () => root_store.ui.setPromptHandler(false);\n    }, [root_store]);\n\n    return (\n        <TraderProviders store={root_store}>\n            <ModulesProvider store={root_store}>\n                <Routes />\n                <TradeModals />\n                <NetworkStatusToastErrorPopup />\n                <TradeHeaderExtensions store={root_store} />\n                <TradeFooterExtensions />\n                <TradeSettingsExtensions store={root_store} />\n            </ModulesProvider>\n        </TraderProviders>\n    );\n};\n\nexport default App;\n","import App from './app';\n\nexport default App;\n","import React from 'react';\nimport classNames from 'classnames';\n\ntype TTicksHistoryCounter = {\n    has_progress_dots: boolean;\n    progress_dots_testid?: string;\n    should_emphasize_last_counter?: boolean;\n    ticks_history_counter_testid?: string;\n    value: number;\n};\n\nconst TicksHistoryCounter = ({\n    has_progress_dots,\n    progress_dots_testid,\n    should_emphasize_last_counter,\n    ticks_history_counter_testid,\n    value,\n}: TTicksHistoryCounter) => {\n    const should_highlight_last_counter = should_emphasize_last_counter && has_progress_dots && value === 0;\n    return (\n        <div\n            data-testid={ticks_history_counter_testid}\n            className={classNames('accumulators-stats__history-counter', {\n                'accumulators-stats__history-counter--emphasized': should_highlight_last_counter,\n            })}\n        >\n            {value}\n            {has_progress_dots && (\n                <div className='accumulators-stats__progress-dots' data-testid={progress_dots_testid}>\n                    {[1, 2, 3].map(dot => {\n                        return <span key={`ticks-dot-counter${dot}`} className={`dot-${dot}`} />;\n                    })}\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default React.memo(TicksHistoryCounter);\n","import React from 'react';\nimport { Text } from '@deriv/components';\nimport TicksHistoryCounter from './ticks-history-counter';\n\ntype TExpandedTicksHistoryProps = {\n    history_text_size: string;\n    rows: number[][];\n};\n\nconst ExpandedTicksHistory = ({ history_text_size, rows }: TExpandedTicksHistoryProps) => (\n    <Text size={history_text_size} className='accumulators-stats__history--expanded'>\n        {rows.map((row, i) => (\n            <div\n                key={i.toString() + row[0]}\n                data-testid='dt_accu_stats_history_row'\n                className='accumulators-stats__row'\n            >\n                {row.map((counter, idx) => (\n                    <TicksHistoryCounter\n                        ticks_history_counter_testid='dt_accu_stats_history_counter'\n                        key={idx.toString() + counter}\n                        value={counter}\n                        has_progress_dots={i === 0 && idx === 0}\n                    />\n                ))}\n            </div>\n        ))}\n    </Text>\n);\n\nexport default React.memo(ExpandedTicksHistory);\n","import React from 'react';\nimport { Icon, Loading, Modal, Text } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { getUrlBase, isMobile } from '@deriv/shared';\nimport 'Sass/app/modules/contract/accumulators-stats.scss';\n\ntype TAccumulatorsStatsManualModal = {\n    icon_classname: string;\n    is_dark_theme?: boolean;\n    is_manual_open: boolean;\n    title: string;\n    toggleManual: () => void;\n};\n\nconst AccumulatorsStatsManualModal = ({\n    icon_classname,\n    is_dark_theme,\n    is_manual_open,\n    title,\n    toggleManual,\n}: TAccumulatorsStatsManualModal) => {\n    const [is_loading, setIsLoading] = React.useState(true);\n    const is_mobile = isMobile();\n    // memoize file paths for videos and open the modal only after we get them\n    const getVideoSource = React.useCallback(\n        (extension: string) => {\n            return getUrlBase(\n                `/public/videos/accumulators_manual_${is_mobile ? 'mobile' : 'desktop'}${\n                    is_dark_theme ? '_dark' : ''\n                }.${extension}`\n            );\n        },\n        [is_mobile, is_dark_theme]\n    );\n    const mp4_src = React.useMemo(() => getVideoSource('mp4'), [getVideoSource]);\n    const webm_src = React.useMemo(() => getVideoSource('webm'), [getVideoSource]);\n\n    return (\n        <React.Fragment>\n            <Icon\n                icon='IcInfoOutline'\n                onClick={toggleManual}\n                size={16}\n                className={icon_classname}\n                data_testid='dt_ic_info_icon'\n            />\n            <Modal\n                is_open={is_manual_open && !!mp4_src && !!webm_src}\n                should_header_stick_body={false}\n                title={title}\n                toggleModal={toggleManual}\n                width={is_mobile ? '328px' : '596px'}\n                className='accumulators-stats-manual-modal'\n            >\n                <Modal.Body className='accumulators-stats-modal-body'>\n                    <div className='accumulators-stats-modal-body__video'>\n                        {is_loading && <Loading is_fullscreen={false} />}\n                        <video\n                            autoPlay\n                            data-testid='dt_accumulators_stats_manual_video'\n                            loop\n                            onLoadedData={() => setIsLoading(false)}\n                            playsInline\n                            preload='auto'\n                            width={is_mobile ? 296 : 563}\n                        >\n                            {/* a browser will select a source with extension it recognizes */}\n                            <source src={mp4_src} type='video/mp4' />\n                            <source src={webm_src} type='video/webm' />\n                            {localize('Unfortunately, your browser does not support the video.')}\n                        </video>\n                    </div>\n                    <Text\n                        as='p'\n                        size={is_mobile ? 'xs' : 's'}\n                        color='prominent'\n                        className='accumulators-stats-modal-body__text'\n                    >\n                        {localize(\n                            'Stats show the history of consecutive tick counts, i.e. the number of ticks the price remained within range continuously.'\n                        )}\n                    </Text>\n                </Modal.Body>\n            </Modal>\n        </React.Fragment>\n    );\n};\n\nexport { AccumulatorsStatsManualModal };\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Icon, MobileDialog, Text } from '@deriv/components';\nimport { useDevice } from '@deriv-com/ui';\nimport { localize } from '@deriv/translations';\nimport ExpandedTicksHistory from './expanded-ticks-history';\nimport TicksHistoryCounter from './ticks-history-counter';\nimport { AccumulatorsStatsManualModal } from './accumulators-stats-manual-modal';\nimport 'Sass/app/modules/contract/accumulators-stats.scss';\nimport { useTraderStore } from 'Stores/useTraderStores';\nimport { observer, useStore } from '@deriv/stores';\n\ntype TAccumulatorStats = {\n    is_expandable?: boolean;\n};\nexport const ROW_SIZES = {\n    DESKTOP_COLLAPSED: 10,\n    DESKTOP_EXPANDED: 10,\n    MOBILE_COLLAPSED: 15,\n    MOBILE_EXPANDED: 5,\n};\n\nconst AccumulatorsStats = observer(({ is_expandable = true }: TAccumulatorStats) => {\n    const { ui } = useStore();\n    const { ticks_history_stats = {} } = useTraderStore();\n    const { is_dark_mode_on: is_dark_theme } = ui;\n    const { isDesktop, isMobile } = useDevice();\n\n    const [is_collapsed, setIsCollapsed] = React.useState(true);\n    const [is_manual_open, setIsManualOpen] = React.useState(false);\n    const widget_title = localize('Stats');\n    const ticks_history = ticks_history_stats?.ticks_stayed_in ?? [];\n    const history_text_size = isDesktop || !is_collapsed ? 'xxs' : 'xxxs';\n\n    const rows = ticks_history.reduce((acc: number[][], _el, index) => {\n        const desktop_row_size = is_collapsed ? ROW_SIZES.DESKTOP_COLLAPSED : ROW_SIZES.DESKTOP_EXPANDED;\n        const mobile_row_size = is_collapsed ? ROW_SIZES.MOBILE_COLLAPSED : ROW_SIZES.MOBILE_EXPANDED;\n        const row_size = isMobile ? mobile_row_size : desktop_row_size;\n        if (index % row_size === 0) {\n            acc.push(ticks_history.slice(index, index + row_size));\n        }\n        return acc;\n    }, []);\n\n    if (!ticks_history.length) return null;\n\n    return (\n        <div className='accumulators-stats'>\n            <div className={classNames('accumulators-stats__container--collapsed')}>\n                <div className='accumulators-stats__title'>\n                    <AccumulatorsStatsManualModal\n                        is_dark_theme={is_dark_theme}\n                        icon_classname='info'\n                        is_manual_open={is_manual_open}\n                        title={widget_title}\n                        toggleManual={() => setIsManualOpen(!is_manual_open)}\n                    />\n                    <Text weight='bold' size={isMobile ? 'xxxs' : 'xxs'} className='accumulators-stats__title-text'>\n                        {widget_title}\n                    </Text>\n                </div>\n                <Text size={history_text_size} className='accumulators-stats__history'>\n                    {!is_collapsed ? (\n                        <div className='accumulators-stats__history-heading'>{localize('Number of ticks')}</div>\n                    ) : (\n                        rows[0]?.map((el, i) => (\n                            <TicksHistoryCounter\n                                ticks_history_counter_testid='dt_accu_stats_history_counter'\n                                key={i}\n                                value={el}\n                                has_progress_dots={i === 0}\n                            />\n                        ))\n                    )}\n                </Text>\n            </div>\n            {is_expandable &&\n                !is_collapsed &&\n                (isDesktop ? (\n                    <ExpandedTicksHistory history_text_size={history_text_size} rows={rows} />\n                ) : (\n                    <MobileDialog\n                        onClose={() => setIsCollapsed(!is_collapsed)}\n                        portal_element_id='modal_root'\n                        title={widget_title}\n                        visible={!is_collapsed}\n                        wrapper_classname='accumulators-stats'\n                    >\n                        <ExpandedTicksHistory history_text_size={history_text_size} rows={rows} />\n                    </MobileDialog>\n                ))}\n            {is_expandable && (\n                <Icon\n                    icon={is_collapsed ? 'IcArrowUp' : 'IcArrowDown'}\n                    onClick={() => setIsCollapsed(!is_collapsed)}\n                    className='accordion-toggle-arrow'\n                    data_testid='dt_accordion-toggle-arrow'\n                />\n            )}\n        </div>\n    );\n});\n\nexport default AccumulatorsStats;\n","import AccumulatorsStats from './accumulators-stats';\n\nexport default AccumulatorsStats;\n","import classNames from 'classnames';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { MobileWrapper, Toast } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\n\ntype TToastPopUp = {\n    portal_id?: string;\n    className: string;\n} & React.ComponentProps<typeof Toast>;\n\ntype TNetworkStatusToastError = {\n    status: string;\n    portal_id: string;\n    message: string;\n};\n\nexport const ToastPopup = ({\n    portal_id = 'popup_root',\n    children,\n    className,\n    ...props\n}: React.PropsWithChildren<TToastPopUp>) => {\n    const new_portal_id = document.getElementById(portal_id);\n    if (!new_portal_id) return null;\n    return ReactDOM.createPortal(\n        <Toast className={classNames('dc-toast-popup', className)} {...props}>\n            {children}\n        </Toast>,\n        new_portal_id\n    );\n};\n\n/**\n * Network status Toast components\n */\nconst NetworkStatusToastError = ({ status, portal_id, message }: TNetworkStatusToastError) => {\n    const [is_open, setIsOpen] = React.useState(false);\n    const new_portal_id = document.getElementById(portal_id);\n\n    if (!new_portal_id || !message) return null;\n\n    if (!is_open && status !== 'online') {\n        setIsOpen(true); // open if status === 'blinker' or 'offline'\n    } else if (is_open && status === 'online') {\n        setTimeout(() => {\n            setIsOpen(false);\n        }, 1500);\n    }\n\n    return ReactDOM.createPortal(\n        <MobileWrapper>\n            <Toast\n                className={classNames({\n                    'dc-toast--blinker': status === 'blinker',\n                })}\n                is_open={is_open}\n                timeout={0}\n                type='error'\n            >\n                {message}\n            </Toast>\n        </MobileWrapper>,\n        new_portal_id\n    );\n};\n\nexport const NetworkStatusToastErrorPopup = observer(() => {\n    const {\n        common: { network_status },\n    } = useStore();\n    return (\n        <NetworkStatusToastError\n            portal_id='popup_root'\n            message={network_status.tooltip}\n            status={network_status.class}\n        />\n    );\n});\n"],"names":["PositionsCardLoader","_ref","speed","React","ContentLoader","height","width","backgroundColor","foregroundColor","x","y","rx","ry","TradeParamsLoader","useDevice","isMobile","viewBox","className","data_testid","is_invisible","theme","id","classNames","concat","invisible","Array","from","map","_x","inx","key","is_dark","is_visible","Loading","findRouteByPath","path","routes_config","result","some","route_info","match_path","matchPath","e","test","message","routes","error","Text","color","size","Icon","icon","align","localize","PositionsDrawerCardItem","portfolio_position","row","measure","onHoverPosition","symbol","is_new_row","onClickRemove","props","_objectWithoutProperties","_excluded","in_prop","useNewRowTransition","setTimeout","contract_info","is_sold","timeout","clearTimeout","CSSTransition","in","appear","enter","enterDone","exit","onEntered","unmountOnExit","PositionsDrawerCard","_extends","onMouseEnter","onMouseLeave","onFooterEntered","should_show_transition","observer","_ref2","_objectDestructuringEmpty","_useTraderStore","useTraderStore","trade_contract_type","contract_type","_useStore","useStore","client","common","contract_trade","portfolio","ui","currency","server_time","getContractById","all_positions","onMount","onClickCancel","onClickSell","removePositionById","is_mobile","is_positions_drawer_on","toggleDrawer","togglePositionsDrawer","addToast","current_focus","removeToast","setCurrentFocus","should_show_cancellation_warning","toggleCancellationWarning","drawer_ref","list_ref","scrollbar_ref","_list_ref$current","current","scrollTo","top","scrollTop","getTotalProfit","active_positions","reduce","total","position","profit","body_content","DataList","data_source","rowRenderer","args","keyMapper","row_gap","weight","onClick","ref","length","EmptyPortfolioMessage","Money","amount","has_sign","MarketCountdownTimer","is_eu","is_synthetics_trading_market_available","onMarketOpen","_React$useState2","_slicedToArray","is_timer_loading","setIsTimerLoading","Localize","i18n_default_text","btn_lbl","as","fallback","UILoader","is_main_page","Button","text","primary","symbolChange","onSymbolChange","target","name","value","DigitsWidget","digits","tick","onDigitChange","onChange","underlying","trade_type","selected_digit","last_digit","last_contract","_last_contract$contra","_last_contract$digits","digits_info","display_status","is_digit_contract","is_ended","Digits","digits_array","is_trade_page","ChartTopWidgets","open_market","open","_useTraderStore2","is_digits_widget_active","is_dark_mode_on","TopWidgets","ChartBottomWidgets","_ref3","show_accumulators_stats","BottomWidgets","Widget","AccumulatorsStats","FormLayout","is_market_closed","is_trade_enabled","current_language","is_single_logging_in","Screen","Loadable","loader","loading","render","loaded","Component","undefined","has_barrier","is_accumulator","topWidgets","accumulator_barriers_data","accumulator_contract_barriers_data","chart_type","granularity","has_crossed_accu_barriers","markers_array","updateChartType","updateGranularity","is_chart_countdown_visible","is_chart_layout_default","is_socket_opened","active_symbols","extra_barriers","barriers_flattened","chartStateChange","chart_layout","exportLayout","has_alternative_source","main_barrier","main_barrier_flattened","setChartStatus","show_digits_stats","prev_contract_type","wsForget","wsForgetStream","wsSendRequest","wsSubscribe","settings","_objectSpread","countdown","isHighestLowestMarkerEnabled","language","toLowerCase","whitespace","minimumLeftBars","current_spot","current_spot_time","bottomWidgets","_ref$current","hasPredictionIndicators","_ref$current2","triggerPopup","barriers","_toConsumableArray","max_ticks","SmartChart","contracts_array","crosshair","crosshairTooltipLeftAllow","showLastDigitStats","chartControlsWidgets","chartStatusListener","v","chartType","initialData","activeSymbols","JSON","parse","stringify","chartData","feedCall","enabledNavigationWidget","enabledChartFooter","maxTick","requestAPI","requestForget","requestForgetStream","requestSubscribe","allowTickChartTypeOnly","stateChangeListener","isConnectionOpened","clearChart","toolbarWidget","ToolbarWidgets","importedLayout","onExportLayout","shouldFetchTradingTimes","hasAlternativeSource","getMarketsOrder","synthetic_index","has_synthetic_index","s","market","slice","sort","a","b","display_name","arr","indexOf","push","should_zoom_out_on_yaxis","yAxisMargin","isLive","leftMargin","AccumulatorsChartElements","should_show_profit_text","accumulators_high_barrier","_regeneratorRuntime","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","i","Symbol","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","resetTryEntry","completion","reset","isNaN","displayName","isGeneratorFunction","constructor","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","stop","rval","handle","complete","finish","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","isArray","_arrayWithHoles","_iterableToArrayLimit","_arrayLikeToArray","toString","_unsupportedIterableToArray","_nonIterableRest","BottomWidgetsMobile","setTick","setDigits","form_components","getFirstOpenMarket","is_chart_loading","is_synthetics_available","is_trade_params_expanded","is_turbos","is_vanilla","onUnmount","prepareTradeStore","setIsDigitsWidgetActive","setMobileDigitView","should_show_active_symbols_loading","is_market_unavailable_visible","has_only_forward_starting_contracts","is_dark_theme","NotificationMessages","notification_messages_ui","is_logged_in","network_status","_useDevice","isDesktop","isTabletPortrait","_React$useState4","_React$useState6","try_synthetic_indices","setTrySyntheticIndices","_React$useState8","try_open_markets","setTryOpenMarkets","_React$useState10","category","setCategory","_React$useState12","subcategory","setSubcategory","_React$useState14","swipe_index","setSwipeIndex","_React$useState16","shouldShowPortraitLoader","setShouldShowPortraitLoader","rotateTimeout","portraitLoaderTimeout","should_elevate_navigation","TRADE_TYPES","MATCH_DIFF","OVER_UNDER","sessionStorage","getItem","removeItem","html","document","querySelector","isTabletOs","classList","add","remove","setMarket","_callee","_yield$getFirstOpenMa","markets_to_search","market_cat","market_subcat","_context","t1","t0","t2","_ref4","onTryOtherMarkets","_ref5","_callee2","_context2","form_wrapper_class","chart_height_offset","_defineProperty","PositionsDrawer","Div100vhContainer","height_offset","is_disabled","show_trade_notifications","ChartLoader","SwipeableWrapper","is_swipe_disabled","index","TradeChart","MarketIsClosedOverlay","Loader","isFullScreen","routesConfig","ContractDetails","moduleLoader","route_default","component","getTitle","contract","is_authenticated","trade","Trade","exact","BinaryLink","_ref$active_class","active_class","to","children","startsWith","normalizePath","route","getRoutesConfig","NavLink","activeClassName","Route","_route$getTitle","_route$getTitle2","pathname","removeBranchName","location","replace","is_valid_route","_route$path","_route$routes","includes","substring","lastIndexOf","find","validateRoute","Redirect","is_logging_in","redirectToLogin","getLanguage","default_subroute","has_default_subroute","isEmptyObject","RouteComponent","Page404","title","default_title","Switch","RouteWithSubRoutes","checkRoutingMatch","route_list","tradePageMountingMiddleware","path_from","path_to","action","match_patterns","callback","pattern","ErrorComponent","Routes","history","passthrough","setTradeMountingPolicy","setSkipPrePostLifecycle","has_error","onUnmountPortfolio","setPromptHandler","route_to","flatMap","subroute","filter","mt5","dxtrade","has_match","BinaryRoutes","withRouter","is_contract_won","getCardLabels","CLOSED","_contract_info$curren","contract_update","current_tick","is_loading","is_sell_requested","profit_loss","togglePositions","loader_el","barrier","bid_price","buy_price","date_expiry","date_start","entry_spot_display_value","sell_price","shortcode","tick_count","_getCardLabels","STAKE","CONTRACT_VALUE","ENTRY_SPOT","STRIKE","TOTAL_PROFIT_LOSS","is_multiplier","isMultiplierContract","isAccumulatorContract","isTurbosContract","isVanillaContract","is_crypto","isCryptoContract","has_progress_slider","has_ended","getEndTime","fallback_result","getSymbolDisplayName","getMarketInformation","contract_vanilla_el","ContractCard","Header","getContractTypeDisplay","CurrencyBadge","Number","addComma","PositionsResultMobile","ProgressSliderMobile","start_time","expiry_time","ticks_count","isCryptocurrency","ArrowIndicator","Footer","common_card_header","common_card_body","Body","is_positions","common_card_footer","common_contract_el","should_show_result_overlay","contract_el","getContractPath","positions_count","is_open","positions_toggle_class","active_positions_count","filtered_positions","is_empty","_useStore$ui","hidden_positions_ids","setHiddenPositionsIds","isTablet","useLocation","is_hidden_landscape_blocker","isDisabledLandscapeBlockerRoute","should_show_dtrader_tablet_view","hide_landscape_blocker","isMobileOs","reports","displayed_positions","every","hidden_position_id","contract_id","closed_positions_ids","_position$contract_in","closeModal","Set","TransitionGroup","PositionsModalCard","TogglePositions","Modal","toggleModal","is_vertical_top","has_close_icon","positions","positions_currency","positions_error","onPositionsSell","onPositionsCancel","isContractSupportedAndStarted","filterByContractType","TURBOS","SHORT","VANILLA","CALL","LONG","PUT","TogglePositionsMobile","store","modules","populateHeaderExtensions","onMountPositions","is_populating_account_list","_modules$cashier$gene","cashier","general_store","onMountCashier","onMountCommon","setAccountSwitchListener","show_positions_toggle","show_component","populateHeaderfunction","header_items","TraderProviders","PopulateHeader","waitForLogin","when","WS","wait","TradeFooterExtensions","populateFooterExtensions","populateFooter","TogglePositionsIcon","ChartSettingContainer","populateSettingsExtensions","populateSettings","menu_items","label","renderItemValue","TradeModals","root_store","initStore","ModulesProvider","NetworkStatusToastErrorPopup","TradeHeaderExtensions","TradeSettingsExtensions","TicksHistoryCounter","has_progress_dots","progress_dots_testid","should_emphasize_last_counter","ticks_history_counter_testid","should_highlight_last_counter","dot","ExpandedTicksHistory","history_text_size","rows","counter","idx","AccumulatorsStatsManualModal","icon_classname","is_manual_open","toggleManual","setIsLoading","getVideoSource","extension","getUrlBase","mp4_src","webm_src","should_header_stick_body","is_fullscreen","autoPlay","loop","onLoadedData","playsInline","preload","src","ROW_SIZES","_ticks_history_stats$","_rows$","_ref$is_expandable","is_expandable","_useTraderStore$ticks","ticks_history_stats","is_collapsed","setIsCollapsed","setIsManualOpen","widget_title","ticks_history","ticks_stayed_in","acc","_el","row_size","el","MobileDialog","onClose","portal_element_id","visible","wrapper_classname","ToastPopup","_ref$portal_id","portal_id","new_portal_id","getElementById","ReactDOM","Toast","NetworkStatusToastError","status","setIsOpen","MobileWrapper","tooltip"],"sourceRoot":""}