{"version":3,"file":"cfd/js/CTraderTransferModal.js","mappings":"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","sources":["webpack://@deriv/cfd/webpack/universalModuleDefinition","webpack://@deriv/cfd/external umd \"@deriv/components\"","webpack://@deriv/cfd/external umd \"@deriv/stores\"","webpack://@deriv/cfd/external umd \"@deriv/translations\"","webpack://@deriv/cfd/external umd \"react\"","webpack://@deriv/cfd/webpack/bootstrap","webpack://@deriv/cfd/webpack/runtime/compat get default export","webpack://@deriv/cfd/webpack/runtime/define property getters","webpack://@deriv/cfd/webpack/runtime/hasOwnProperty shorthand","webpack://@deriv/cfd/./src/Containers/ctrader-transfer-modal/ctrader-transfer-modal.tsx","webpack://@deriv/cfd/./src/Containers/ctrader-transfer-modal/index.tsx"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"@deriv/components\"), require(\"@deriv/stores\"), require(\"@deriv/translations\"), require(\"react\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"@deriv/components\", \"@deriv/stores\", \"@deriv/translations\", \"react\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"@deriv/cfd\"] = factory(require(\"@deriv/components\"), require(\"@deriv/stores\"), require(\"@deriv/translations\"), require(\"react\"));\n\telse\n\t\troot[\"@deriv/cfd\"] = factory(root[\"@deriv/components\"], root[\"@deriv/stores\"], root[\"@deriv/translations\"], root[\"react\"]);\n})(self, (__WEBPACK_EXTERNAL_MODULE__deriv_components__, __WEBPACK_EXTERNAL_MODULE__deriv_stores__, __WEBPACK_EXTERNAL_MODULE__deriv_translations__, __WEBPACK_EXTERNAL_MODULE_react__) => {\nreturn ","module.exports = __WEBPACK_EXTERNAL_MODULE__deriv_components__;","module.exports = __WEBPACK_EXTERNAL_MODULE__deriv_stores__;","module.exports = __WEBPACK_EXTERNAL_MODULE__deriv_translations__;","module.exports = __WEBPACK_EXTERNAL_MODULE_react__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","import React from 'react';\n\nimport { Icon, Modal, Money, Text } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\n\nconst CTraderTransferModal = observer(() => {\n    const {\n        modules: { cfd },\n        client,\n        traders_hub,\n    } = useStore();\n\n    const { ctrader_accounts_list } = client;\n    const { toggleAccountTransferModal, setSelectedAccount } = traders_hub;\n    const { is_ctrader_transfer_modal_visible, toggleCTraderTransferModal } = cfd;\n    const realCtraderAccounts = ctrader_accounts_list.filter(\n        ctrader_account => ctrader_account.account_type === 'real'\n    );\n\n    const onClickTransferHandler = (ctrader_account: (typeof ctrader_accounts_list)[number]) => {\n        toggleCTraderTransferModal();\n        toggleAccountTransferModal();\n        setSelectedAccount(ctrader_account);\n    };\n\n    if (realCtraderAccounts.length === 1) {\n        onClickTransferHandler(realCtraderAccounts[0]);\n    }\n\n    return (\n        <Modal\n            width='408px'\n            should_header_stick_body={false}\n            exit_classname='cfd-modal--custom-exit'\n            toggleModal={toggleCTraderTransferModal}\n            is_open={is_ctrader_transfer_modal_visible}\n            title={localize('Choose a cTrader account to transfer')}\n        >\n            <div className='ctrader-transfer-modal'>\n                {realCtraderAccounts.map(ctrader_account => {\n                    return (\n                        <button\n                            key={ctrader_account.login}\n                            className='ctrader-transfer-modal__accounts-list'\n                            onClick={() => onClickTransferHandler(ctrader_account)}\n                        >\n                            <Text size='xs'>{ctrader_account.login}</Text>\n                            <Text size='xs' weight='bold' className='ctrader-transfer-modal__accounts-list--balance'>\n                                <Money\n                                    amount={ctrader_account.balance}\n                                    currency={ctrader_account.currency}\n                                    has_sign={!!ctrader_account.balance && ctrader_account.balance < 0}\n                                    show_currency\n                                />\n                                <Icon icon='IcChevronRight' />\n                            </Text>\n                        </button>\n                    );\n                })}\n            </div>\n        </Modal>\n    );\n});\n\nexport default CTraderTransferModal;\n","import CTraderTransferModal from './ctrader-transfer-modal';\n\nexport default CTraderTransferModal;\n"],"names":["root","factory","exports","module","require","define","amd","self","__WEBPACK_EXTERNAL_MODULE__deriv_components__","__WEBPACK_EXTERNAL_MODULE__deriv_stores__","__WEBPACK_EXTERNAL_MODULE__deriv_translations__","__WEBPACK_EXTERNAL_MODULE_react__","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","n","getter","__esModule","d","a","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","observer","_useStore","useStore","cfd","modules","client","traders_hub","ctrader_accounts_list","toggleAccountTransferModal","setSelectedAccount","is_ctrader_transfer_modal_visible","toggleCTraderTransferModal","realCtraderAccounts","filter","ctrader_account","account_type","onClickTransferHandler","length","React","Modal","width","should_header_stick_body","exit_classname","toggleModal","is_open","title","localize","className","map","login","onClick","Text","size","weight","Money","amount","balance","currency","has_sign","show_currency","Icon","icon"],"sourceRoot":""}