{"version":3,"file":"js/core.6350.130ba217c3574d671cf1.js","mappings":"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","sources":["webpack:///../../account/dist/account/js/currency-radio-button-group.js","webpack:///../../account/dist/account/js/currency-radio-button.js","webpack:///../../account/dist/account/js/currency-selector-config.js","webpack:///../../account/dist/account/js/risk-tolerance-warning-modal.js","webpack:///../../account/src/Components/currency-selector/ust-popover.tsx","webpack:///../../account/src/Components/currency-selector/radio-button.tsx","webpack:///../../account/src/Components/currency-selector/radio-button-group.tsx","webpack:///../../account/src/Components/currency-selector/currency-selector.tsx","webpack:///../../account/src/Components/currency-selector/index.ts","webpack:///../../account/src/Components/real-account-signup/helpers/utils.ts","webpack:///./App/Components/Layout/Header/Components/Preloader/accounts-info.jsx","webpack:///./App/Components/Layout/Header/Components/Preloader/accounts-item.jsx","webpack:///./App/Components/Layout/Header/Components/Preloader/platform-switcher.jsx","webpack:///./App/Components/Layout/Header/account-info-wrapper.tsx","webpack:///./App/Components/Layout/Header/menu-links.jsx","webpack:///./App/Components/Layout/Header/account-actions.tsx","webpack:///./App/Components/Layout/Header/login-button.jsx","webpack:///./App/Components/Layout/Header/menu-link.tsx","webpack:///./App/Components/Layout/Header/platform-dropdown.jsx","webpack:///./App/Components/Layout/Header/platform-switcher.jsx","webpack:///./App/Components/Layout/Header/signup-button.jsx","webpack:///./App/Components/Elements/LiveChat/live-chat.tsx","webpack:///./App/Components/Elements/LiveChat/index.ts","webpack:///./App/Components/Elements/WhatsApp/whatsapp.tsx","webpack:///./App/Components/Elements/WhatsApp/index.ts","webpack:///./App/Components/Layout/Footer/network-status.jsx","webpack:///./App/Components/Layout/Footer/toggle-fullscreen.jsx","webpack:///./App/Components/Layout/Footer/toggle-settings.jsx","webpack:///./App/Containers/SettingsModal/settings-language.jsx","webpack:///./App/Components/Layout/Footer/index.js","webpack:///./App/Components/Layout/Footer/toggle-language-settings.tsx","webpack:///./App/Components/Layout/Footer/account-limits.jsx","webpack:///./App/Containers/server-time.jsx","webpack:///./App/Components/Layout/Header/Components/ToggleMenu/menu-title.tsx","webpack:///./App/Components/Layout/Header/Components/ToggleMenu/mobile-language-menu.tsx","webpack:///./App/Components/Layout/Header/toggle-menu-drawer.jsx","webpack:///./App/Components/Elements/Notifications/empty-notification.tsx","webpack:///./App/Containers/NotificationsDialog/notifications-clear-all-footer.tsx","webpack:///./App/Containers/NotificationsDialog/notifications-list.tsx","webpack:///./App/Containers/NotificationsDialog/notification-list-wrapper.tsx","webpack:///./App/Containers/NotificationsDialog/index.ts","webpack:///./App/Containers/NotificationsDialog/notifications-dialog.tsx","webpack:///./App/Components/Layout/Header/toggle-notifications.jsx","webpack:///./App/Containers/Layout/header/traders-hub-onboarding.tsx","webpack:///./App/Components/Layout/Header/wallets/wallet-badge.tsx","webpack:///./App/Containers/AccountSwitcherWallet/account-switcher-wallet-item.tsx","webpack:///./App/Containers/AccountSwitcherWallet/account-switcher-wallet-list.tsx","webpack:///./App/Containers/AccountSwitcherWallet/account-switcher-wallet.tsx","webpack:///./App/Containers/AccountSwitcherWallet/account-switcher-wallet-mobile.tsx","webpack:///./App/Components/Layout/Header/wallets/account-info-wallets.tsx","webpack:///./App/Components/Layout/Header/wallets/account-actions-wallets.tsx","webpack:///./App/Constants/platform-config.ts","webpack:///./Assets/SvgComponents/header/deriv-logo-short.svg","webpack:///./App/Containers/Layout/header/deriv-short-logo.tsx","webpack:///./App/Containers/Layout/header/traders-hub-home-button.tsx","webpack:///./App/Containers/RealAccountSignup/helpers/constants.js","webpack:///./App/Containers/RealAccountSignup/choose-currency.js","webpack:///./App/Containers/RealAccountSignup/add-currency-note.jsx","webpack:///./App/Containers/RealAccountSignup/add-crypto-currency.jsx","webpack:///./App/Containers/RealAccountSignup/add-currency.jsx","webpack:///./App/Containers/RealAccountSignup/change-account-currency.jsx","webpack:///./App/Containers/RealAccountSignup/add-or-manage-accounts.jsx","webpack:///./App/Containers/RealAccountSignup/choose-currency.jsx","webpack:///./App/Containers/RealAccountSignup/finished-add-currency.jsx","webpack:///./App/Containers/RealAccountSignup/finished-set-currency.jsx","webpack:///./App/Containers/RealAccountSignup/set-currency.jsx","webpack:///./App/Containers/RealAccountSignup/signup-error-content.jsx","webpack:///./App/Containers/RealAccountSignup/helpers/dialog-heading.jsx","webpack:///./App/Containers/RealAccountSignup/helpers/dialog-message.jsx","webpack:///./App/Containers/RealAccountSignup/helpers/dialog-buttons.jsx","webpack:///./App/Containers/RealAccountSignup/status-dialog-container.jsx","webpack:///./App/Containers/RealAccountSignup/new-status-dialog-container.jsx","webpack:///./App/Containers/RealAccountSignup/real-account-signup.jsx","webpack:///./App/Containers/RealAccountSignup/index.js","webpack:///./App/Containers/RealAccountSignup/real-account-signup-loader.jsx","webpack:///./App/Containers/SetAccountCurrencyModal/set-currency-modal.jsx","webpack:///./App/Containers/SetAccountCurrencyModal/index.js","webpack:///./App/Containers/new-version-notification.jsx","webpack:///../../hooks/src/useAccountSettingsRedirect.ts","webpack:///../../hooks/src/useAccountTransferVisible.ts","webpack:///../../hooks/src/useAuthorize.ts","webpack:///../../hooks/src/useHasActiveRealAccount.ts","webpack:///../../hooks/src/useHasMaltaInvestAccount.ts","webpack:///../../hooks/src/useHasSetCurrency.ts","webpack:///../../hooks/src/useHasSvgAccount.ts","webpack:///../../hooks/src/useIsLiveChatWidgetAvailable.ts","webpack:///../../hooks/src/useIsRealAccountNeededForCashier.ts","webpack:///../../hooks/src/useOnrampVisible.ts","webpack:///../../hooks/src/useP2PNotificationCount.ts","webpack:///../../hooks/src/useP2PSettings.ts","webpack:///../../hooks/src/usePaymentAgentList.ts","webpack:///../../hooks/src/usePaymentAgentTransferVisible.ts","webpack:///../../hooks/src/useStoreLinkedWalletsAccounts.ts","webpack:///../../hooks/src/useStoreWalletAccountsList.ts"],"sourcesContent":["/*! For license information please see currency-radio-button-group.js.LICENSE.txt */\n!function(e,r){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=r(require(\"react\")):\"function\"==typeof define&&define.amd?define([\"react\"],r):\"object\"==typeof exports?exports[\"@deriv/account\"]=r(require(\"react\")):e[\"@deriv/account\"]=r(e.react)}(self,(e=>(()=>{\"use strict\";var r={\"../../../node_modules/object-assign/index.js\":e=>{var r=Object.getOwnPropertySymbols,t=Object.prototype.hasOwnProperty,n=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String(\"abc\");if(e[5]=\"de\",\"5\"===Object.getOwnPropertyNames(e)[0])return!1;for(var r={},t=0;t<10;t++)r[\"_\"+String.fromCharCode(t)]=t;if(\"0123456789\"!==Object.getOwnPropertyNames(r).map((function(e){return r[e]})).join(\"\"))return!1;var n={};return\"abcdefghijklmnopqrst\".split(\"\").forEach((function(e){n[e]=e})),\"abcdefghijklmnopqrst\"===Object.keys(Object.assign({},n)).join(\"\")}catch(e){return!1}}()?Object.assign:function(e,o){for(var c,s,i=function(e){if(null==e)throw new TypeError(\"Object.assign cannot be called with null or undefined\");return Object(e)}(e),a=1;a<arguments.length;a++){for(var l in c=Object(arguments[a]))t.call(c,l)&&(i[l]=c[l]);if(r){s=r(c);for(var u=0;u<s.length;u++)n.call(c,s[u])&&(i[s[u]]=c[s[u]])}}return i}},\"../../../node_modules/react/cjs/react-jsx-runtime.production.min.js\":(e,r,t)=>{t(\"../../../node_modules/object-assign/index.js\");var n=t(\"react\"),o=60103;if(\"function\"==typeof Symbol&&Symbol.for){var c=Symbol.for;o=c(\"react.element\"),c(\"react.fragment\")}var s=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,i=Object.prototype.hasOwnProperty,a={key:!0,ref:!0,__self:!0,__source:!0};function l(e,r,t){var n,c={},l=null,u=null;for(n in void 0!==t&&(l=\"\"+t),void 0!==r.key&&(l=\"\"+r.key),void 0!==r.ref&&(u=r.ref),r)i.call(r,n)&&!a.hasOwnProperty(n)&&(c[n]=r[n]);if(e&&e.defaultProps)for(n in r=e.defaultProps)void 0===c[n]&&(c[n]=r[n]);return{$$typeof:o,type:e,key:l,ref:u,props:c,_owner:s.current}}r.jsx=l,r.jsxs=l},\"../../../node_modules/react/jsx-runtime.js\":(e,r,t)=>{e.exports=t(\"../../../node_modules/react/cjs/react-jsx-runtime.production.min.js\")},react:r=>{r.exports=e}},t={};function n(e){var o=t[e];if(void 0!==o)return o.exports;var c=t[e]={exports:{}};return r[e](c,c.exports,n),c.exports}n.d=(e,r)=>{for(var t in r)n.o(r,t)&&!n.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:r[t]})},n.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r);var o={};n.d(o,{default:()=>a});n(\"react\");function c(e){var r,t,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(r=0;r<o;r++)e[r]&&(t=c(e[r]))&&(n&&(n+=\" \"),n+=t)}else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}const s=function(){for(var e,r,t=0,n=\"\",o=arguments.length;t<o;t++)(e=arguments[t])&&(r=c(e))&&(n&&(n+=\" \"),n+=r);return n};var i=n(\"../../../node_modules/react/jsx-runtime.js\");const a=e=>{let{children:r,label:t,className:n,is_title_enabled:o=!0,is_fiat:c,item_count:a,description:l}=e;return(0,i.jsxs)(\"div\",{className:n,children:[o&&(0,i.jsx)(\"h2\",{className:s(`${n}--is-header`,{\"currency-selector__is-crypto\":!c}),children:t}),c&&(0,i.jsx)(\"div\",{className:\"currency-selector__description\",children:l}),(0,i.jsx)(\"div\",{className:s(\"currency-list__items\",{\"currency-list__items__center\":a<4,\"currency-list__items__is-fiat\":c,\"currency-list__items__is-crypto\":!c}),children:r})]})};return o=o.default})()));\n//# sourceMappingURL=currency-radio-button-group.js.map","/*! For license information please see currency-radio-button.js.LICENSE.txt */\n!function(e,r){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=r(require(\"@deriv/components\"),require(\"@deriv/shared\"),require(\"@deriv/translations\"),require(\"react\")):\"function\"==typeof define&&define.amd?define([\"@deriv/components\",\"@deriv/shared\",\"@deriv/translations\",\"react\"],r):\"object\"==typeof exports?exports[\"@deriv/account\"]=r(require(\"@deriv/components\"),require(\"@deriv/shared\"),require(\"@deriv/translations\"),require(\"react\")):e[\"@deriv/account\"]=r(e[\"@deriv/components\"],e[\"@deriv/shared\"],e[\"@deriv/translations\"],e.react)}(self,((e,r,t,n)=>(()=>{\"use strict\";var o={\"../../../node_modules/object-assign/index.js\":e=>{var r=Object.getOwnPropertySymbols,t=Object.prototype.hasOwnProperty,n=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String(\"abc\");if(e[5]=\"de\",\"5\"===Object.getOwnPropertyNames(e)[0])return!1;for(var r={},t=0;t<10;t++)r[\"_\"+String.fromCharCode(t)]=t;if(\"0123456789\"!==Object.getOwnPropertyNames(r).map((function(e){return r[e]})).join(\"\"))return!1;var n={};return\"abcdefghijklmnopqrst\".split(\"\").forEach((function(e){n[e]=e})),\"abcdefghijklmnopqrst\"===Object.keys(Object.assign({},n)).join(\"\")}catch(e){return!1}}()?Object.assign:function(e,o){for(var s,i,a=function(e){if(null==e)throw new TypeError(\"Object.assign cannot be called with null or undefined\");return Object(e)}(e),c=1;c<arguments.length;c++){for(var l in s=Object(arguments[c]))t.call(s,l)&&(a[l]=s[l]);if(r){i=r(s);for(var d=0;d<i.length;d++)n.call(s,i[d])&&(a[i[d]]=s[i[d]])}}return a}},\"../../../node_modules/react/cjs/react-jsx-runtime.production.min.js\":(e,r,t)=>{t(\"../../../node_modules/object-assign/index.js\");var n=t(\"react\"),o=60103;if(\"function\"==typeof Symbol&&Symbol.for){var s=Symbol.for;o=s(\"react.element\"),s(\"react.fragment\")}var i=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,a=Object.prototype.hasOwnProperty,c={key:!0,ref:!0,__self:!0,__source:!0};function l(e,r,t){var n,s={},l=null,d=null;for(n in void 0!==t&&(l=\"\"+t),void 0!==r.key&&(l=\"\"+r.key),void 0!==r.ref&&(d=r.ref),r)a.call(r,n)&&!c.hasOwnProperty(n)&&(s[n]=r[n]);if(e&&e.defaultProps)for(n in r=e.defaultProps)void 0===s[n]&&(s[n]=r[n]);return{$$typeof:o,type:e,key:l,ref:d,props:s,_owner:i.current}}r.jsx=l,r.jsxs=l},\"../../../node_modules/react/jsx-runtime.js\":(e,r,t)=>{e.exports=t(\"../../../node_modules/react/cjs/react-jsx-runtime.production.min.js\")},\"@deriv/components\":r=>{r.exports=e},\"@deriv/shared\":e=>{e.exports=r},\"@deriv/translations\":e=>{e.exports=t},react:e=>{e.exports=n}},s={};function i(e){var r=s[e];if(void 0!==r)return r.exports;var t=s[e]={exports:{}};return o[e](t,t.exports,i),t.exports}i.n=e=>{var r=e&&e.__esModule?()=>e.default:()=>e;return i.d(r,{a:r}),r},i.d=(e,r)=>{for(var t in r)i.o(r,t)&&!i.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:r[t]})},i.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r);var a={};i.d(a,{default:()=>j});var c=i(\"react\"),l=i.n(c);function d(e){var r,t,n=\"\";if(\"string\"==typeof e||\"number\"==typeof e)n+=e;else if(\"object\"==typeof e)if(Array.isArray(e)){var o=e.length;for(r=0;r<o;r++)e[r]&&(t=d(e[r]))&&(n&&(n+=\" \"),n+=t)}else for(t in e)e[t]&&(n&&(n+=\" \"),n+=t);return n}const u=function(){for(var e,r,t=0,n=\"\",o=arguments.length;t<o;t++)(e=arguments[t])&&(r=d(e))&&(n&&(n+=\" \"),n+=r);return n};var f=i(\"@deriv/components\"),m=i(\"@deriv/shared\"),p=i(\"@deriv/translations\"),_=i(\"../../../node_modules/react/jsx-runtime.js\");const v=e=>{let r,{id:t}=e;return r=/^UST$/i.test(t)?(0,_.jsx)(p.Localize,{i18n_default_text:\"Tether as an Omni token (USDT) is a version of Tether that is hosted on the Omni layer on the Bitcoin blockchain.\",components:[(0,_.jsx)(\"br\",{},0)]}):/^tUSDT$/i.test(t)?(0,_.jsx)(p.Localize,{i18n_default_text:\"Tether as a TRC20 token (tUSDT) is a version of Tether that is hosted on Tron.\"}):(0,_.jsx)(p.Localize,{i18n_default_text:\"Tether as an ERC20 token (eUSDT) is a version of Tether that is hosted on Ethereum.\"}),(0,_.jsx)(f.Popover,{alignment:\"top\",className:\"currency-list__popover\",disable_message_icon:!0,icon:\"info\",is_bubble_hover_enabled:!0,message:r,zIndex:\"9999\"})},j=e=>{let{field:{name:r,value:t,onChange:n,onBlur:o},icon:s,id:i,label:a,second_line_label:c,onClick:d,className:p,...j}=e;return(0,_.jsxs)(l().Fragment,{children:[(0,_.jsx)(\"input\",{name:r,id:i,type:\"radio\",value:i,checked:i===t,onChange:n,onBlur:o,disabled:j.selected,className:u(p,\"currency-list__radio-button\"),...j}),(0,_.jsx)(\"label\",{htmlFor:i,className:u(\"currency-list__item\",{\"currency-list__item--selected\":i===t,\"currency-list__item--current\":j.selected}),onClick:d,children:s?(0,_.jsxs)(l().Fragment,{children:[(0,_.jsx)(f.Icon,{className:\"currency-list__icon\",icon:s}),(0,_.jsxs)(\"div\",{className:\"label currency-list__item-text\",children:[(0,_.jsx)(\"div\",{className:\"currency-list__item-label\",children:a}),(0,_.jsx)(\"div\",{className:\"currency-list__item-code\",children:c})]})]}):(0,_.jsxs)(l().Fragment,{children:[(0,_.jsx)(f.Icon,{className:\"currency-list__icon\",icon:`IcCurrency-${i?.toLowerCase()}`}),i&&/^(UST|eUSDT|tUSDT)$/i.test(i)&&(0,_.jsx)(v,{id:i}),(0,_.jsxs)(\"div\",{className:\"label currency-list__item-text\",children:[(0,_.jsx)(\"div\",{className:\"currency-list__item-label\",children:a}),(0,_.jsxs)(\"div\",{className:\"currency-list__item-code\",children:[\"(\",(0,m.getCurrencyDisplayCode)(i),\")\"]})]})]})})]})};return a=a.default})()));\n//# sourceMappingURL=currency-radio-button.js.map","!function(e,r){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=r(require(\"@deriv/shared\"),require(\"@deriv/translations\")):\"function\"==typeof define&&define.amd?define([\"@deriv/shared\",\"@deriv/translations\"],r):\"object\"==typeof exports?exports[\"@deriv/account\"]=r(require(\"@deriv/shared\"),require(\"@deriv/translations\")):e[\"@deriv/account\"]=r(e[\"@deriv/shared\"],e[\"@deriv/translations\"])}(self,((e,r)=>(()=>{\"use strict\";var t={\"@deriv/shared\":r=>{r.exports=e},\"@deriv/translations\":e=>{e.exports=r}},a={};function o(e){var r=a[e];if(void 0!==r)return r.exports;var i=a[e]={exports:{}};return t[e](i,i.exports,o),i.exports}o.n=e=>{var r=e&&e.__esModule?()=>e.default:()=>e;return o.d(r,{a:r}),r},o.d=(e,r)=>{for(var t in r)o.o(r,t)&&!o.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:r[t]})},o.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r);var i={};o.d(i,{default:()=>l});var n=o(\"@deriv/shared\"),d=o(\"@deriv/translations\");const s={currency:{supported_in:[\"maltainvest\",\"svg\"],default_value:\"\",rules:[[\"req\",(0,d.localize)(\"Select an item\")]]}},l=(e,r)=>{let{real_account_signup_target:t}=e;return{header:{active_title:(0,d.localize)(\"Select your preferred currency\"),title:(0,d.localize)(\"Account currency\")},body:r,form_value:(0,n.getDefaultFields)(t,s),props:{validate:(0,n.generateValidationFunction)(t,s)},passthrough:[\"legal_allowed_currencies\"],icon:\"IcDashboardCurrency\"}};return i=i.default})()));\n//# sourceMappingURL=currency-selector-config.js.map","/*! For license information please see risk-tolerance-warning-modal.js.LICENSE.txt */\n!function(e,t){\"object\"==typeof exports&&\"object\"==typeof module?module.exports=t(require(\"@deriv-com/translations\"),require(\"@deriv/components\"),require(\"react\")):\"function\"==typeof define&&define.amd?define([\"@deriv-com/translations\",\"@deriv/components\",\"react\"],t):\"object\"==typeof exports?exports[\"@deriv/account\"]=t(require(\"@deriv-com/translations\"),require(\"@deriv/components\"),require(\"react\")):e[\"@deriv/account\"]=t(e[\"@deriv-com/translations\"],e[\"@deriv/components\"],e.react)}(self,((e,t,r)=>(()=>{\"use strict\";var o={\"../../../node_modules/object-assign/index.js\":e=>{var t=Object.getOwnPropertySymbols,r=Object.prototype.hasOwnProperty,o=Object.prototype.propertyIsEnumerable;e.exports=function(){try{if(!Object.assign)return!1;var e=new String(\"abc\");if(e[5]=\"de\",\"5\"===Object.getOwnPropertyNames(e)[0])return!1;for(var t={},r=0;r<10;r++)t[\"_\"+String.fromCharCode(r)]=r;if(\"0123456789\"!==Object.getOwnPropertyNames(t).map((function(e){return t[e]})).join(\"\"))return!1;var o={};return\"abcdefghijklmnopqrst\".split(\"\").forEach((function(e){o[e]=e})),\"abcdefghijklmnopqrst\"===Object.keys(Object.assign({},o)).join(\"\")}catch(e){return!1}}()?Object.assign:function(e,n){for(var s,i,a=function(e){if(null==e)throw new TypeError(\"Object.assign cannot be called with null or undefined\");return Object(e)}(e),c=1;c<arguments.length;c++){for(var l in s=Object(arguments[c]))r.call(s,l)&&(a[l]=s[l]);if(t){i=t(s);for(var d=0;d<i.length;d++)o.call(s,i[d])&&(a[i[d]]=s[i[d]])}}return a}},\"../../../node_modules/react/cjs/react-jsx-runtime.production.min.js\":(e,t,r)=>{r(\"../../../node_modules/object-assign/index.js\");var o=r(\"react\"),n=60103;if(\"function\"==typeof Symbol&&Symbol.for){var s=Symbol.for;n=s(\"react.element\"),s(\"react.fragment\")}var i=o.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,a=Object.prototype.hasOwnProperty,c={key:!0,ref:!0,__self:!0,__source:!0};function l(e,t,r){var o,s={},l=null,d=null;for(o in void 0!==r&&(l=\"\"+r),void 0!==t.key&&(l=\"\"+t.key),void 0!==t.ref&&(d=t.ref),t)a.call(t,o)&&!c.hasOwnProperty(o)&&(s[o]=t[o]);if(e&&e.defaultProps)for(o in t=e.defaultProps)void 0===s[o]&&(s[o]=t[o]);return{$$typeof:n,type:e,key:l,ref:d,props:s,_owner:i.current}}t.jsx=l,t.jsxs=l},\"../../../node_modules/react/jsx-runtime.js\":(e,t,r)=>{e.exports=r(\"../../../node_modules/react/cjs/react-jsx-runtime.production.min.js\")},\"@deriv-com/translations\":t=>{t.exports=e},\"@deriv/components\":e=>{e.exports=t},react:e=>{e.exports=r},\"../../../node_modules/@deriv-com/ui/dist/hooks/useDevice.js\":(e,t,r)=>{r.d(t,{Y:()=>d});var o=r(\"react\"),n=typeof globalThis<\"u\"?globalThis:typeof window<\"u\"?window:typeof global<\"u\"?global:typeof self<\"u\"?self:{};var s=\"object\"==typeof n&&n&&n.Object===Object&&n,i=\"object\"==typeof self&&self&&self.Object===Object&&self;s||i||Function(\"return this\")();var a=typeof window<\"u\"?o.useLayoutEffect:o.useEffect;var c=typeof window>\"u\";function l(e,{defaultValue:t=!1,initializeWithValue:r=!0}={}){const n=e=>c?t:window.matchMedia(e).matches,[s,i]=(0,o.useState)((()=>r?n(e):t));function l(){i(n(e))}return a((()=>{const t=window.matchMedia(e);return l(),t.addListener?t.addListener(l):t.addEventListener(\"change\",l),()=>{t.removeListener?t.removeListener(l):t.removeEventListener(\"change\",l)}}),[e]),s}const d=()=>({isDesktop:l(\"(min-width: 1280px)\"),isMobile:l(\"(max-width: 600px)\"),isTablet:l(\"(min-width: 601px) and (max-width: 1279px)\"),isTabletPortrait:l(\"(min-width: 601px) and (max-width: 1279px) and (orientation: portrait)\"),isMobileOrTabletLandscape:l(\"(max-width: 1279px) and (orientation: landscape)\")})}},n={};function s(e){var t=n[e];if(void 0!==t)return t.exports;var r=n[e]={exports:{}};return o[e](r,r.exports,s),r.exports}s.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return s.d(t,{a:t}),t},s.d=(e,t)=>{for(var r in t)s.o(t,r)&&!s.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},s.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t);var i={};s.d(i,{default:()=>m});var a=s(\"react\"),c=s.n(a),l=s(\"@deriv/components\"),d=s(\"@deriv-com/translations\"),u=s(\"../../../node_modules/@deriv-com/ui/dist/hooks/useDevice.js\"),p=s(\"../../../node_modules/react/jsx-runtime.js\");const m=e=>{let{show_risk_modal:t,handleAcceptRisk:r,title:o,button_text:n,body_content:s,has_sub_header:i=!1}=e;const{isDesktop:a}=(0,u.Y)(),{localize:m}=(0,d.useTranslations)();return(0,p.jsx)(c().Fragment,{children:a?(0,p.jsxs)(l.Modal,{width:\"44rem\",title:o,height:\"41rem\",is_open:t,className:\"center-risk-modal\",toggleModal:r,has_close_icon:!1,children:[(0,p.jsxs)(l.Modal.Body,{children:[(0,p.jsx)(l.Icon,{icon:\"IcRedWarning\",size:\"63\"}),(0,p.jsx)(l.Text,{as:\"p\",size:\"xs\",align:\"center\",line_height:\"s\",className:\"risk-acceptance__text\",children:s})]}),(0,p.jsx)(l.Modal.Footer,{children:(0,p.jsx)(l.Button,{type:\"button\",large:!0,text:n??m(\"OK\"),primary:!0,onClick:r})})]}):(0,p.jsxs)(l.MobileDialog,{visible:t,title:i?m(\"Trading Experience Assessment\"):o,portal_element_id:\"modal_root\",has_close_icon:!1,children:[(0,p.jsxs)(l.Modal.Body,{className:\"risk-tolerance-modal\",children:[i?(0,p.jsxs)(l.Text,{size:\"xs\",line_height:\"s\",weight:\"bold\",as:\"p\",className:\"risk-tolerance-modal__title\",children:[o,(0,p.jsx)(\"div\",{className:\"risk-tolerance-modal__title--separator\"})]}):null,(0,p.jsxs)(\"div\",{className:\"risk-tolerance-modal__wrapper\",children:[(0,p.jsx)(l.Icon,{icon:\"IcRedWarning\",size:\"65\"}),(0,p.jsx)(l.Text,{as:\"p\",size:\"xs\",align:\"center\",line_height:\"l\",className:\"risk-acceptance__text\",children:s})]})]}),(0,p.jsx)(l.Modal.Footer,{className:\"risk-tolerance-modal__footer\",children:(0,p.jsx)(l.Button,{type:\"button\",large:!0,text:n??m(\"OK\"),primary:!0,onClick:r})})]})})};return i=i.default})()));\n//# sourceMappingURL=risk-tolerance-warning-modal.js.map","import React from 'react';\nimport { Popover } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\n\nexport type TUSTPopover = {\n    id: string;\n};\n\nconst USTPopover = ({ id }: TUSTPopover) => {\n    let popover_message: React.ReactElement;\n    if (/^UST$/i.test(id)) {\n        popover_message = (\n            <Localize\n                i18n_default_text={\n                    'Tether as an Omni token (USDT) is a version of Tether that is hosted on the Omni layer on the Bitcoin blockchain.'\n                }\n                components={[<br key={0} />]}\n            />\n        );\n    } else if (/^tUSDT$/i.test(id)) {\n        popover_message = (\n            <Localize\n                i18n_default_text={'Tether as a TRC20 token (tUSDT) is a version of Tether that is hosted on Tron.'}\n            />\n        );\n    } else {\n        popover_message = (\n            <Localize\n                i18n_default_text={\n                    'Tether as an ERC20 token (eUSDT) is a version of Tether that is hosted on Ethereum.'\n                }\n            />\n        );\n    }\n\n    return (\n        <Popover\n            alignment='top'\n            className='currency-list__popover'\n            disable_message_icon\n            icon='info'\n            is_bubble_hover_enabled\n            message={popover_message}\n            zIndex='9999'\n        />\n    );\n};\n\nexport default USTPopover;\n","import React, { AllHTMLAttributes } from 'react';\nimport clsx from 'clsx';\nimport { Icon } from '@deriv/components';\nimport { getCurrencyDisplayCode } from '@deriv/shared';\nimport USTPopover from './ust-popover';\n\ntype TRadioButtonExtend = {\n    field: React.InputHTMLAttributes<HTMLInputElement>;\n    icon?: string;\n    second_line_label?: string;\n    id: string;\n    label: string;\n    onClick?: (e: React.MouseEvent<HTMLLabelElement, MouseEvent>) => void;\n};\n\nexport type TRadioButton = AllHTMLAttributes<HTMLInputElement | HTMLLabelElement> & TRadioButtonExtend;\n\n/**\n *  RadioButton component to select currency\n * @name RadioButton\n * @param {React.InputHTMLAttributes<HTMLInputElement>} field - field props given by Formik\n * @param {string} icon - icon name\n * @param {string} id - currency id\n * @param {string} label - currency name\n * @param {string} second_line_label - currency code\n * @param {Function} onClick - function to be called on click\n * @param {AllHTMLAttributes<HTMLInputElement | HTMLLabelElement>} props - other props to be passed\n * @returns {React.ReactNode} - returns a React node\n */\n\nconst RadioButton = ({\n    field: { name, value, onChange, onBlur },\n    icon,\n    id,\n    label,\n    second_line_label,\n    onClick,\n    className,\n    ...props\n}: TRadioButton) => {\n    return (\n        <React.Fragment>\n            <input\n                name={name}\n                id={id}\n                type='radio'\n                value={id} // could be something else for output?\n                checked={id === value}\n                onChange={onChange}\n                onBlur={onBlur}\n                disabled={props.selected}\n                className={clsx(className, 'currency-list__radio-button')}\n                {...props}\n            />\n            <label\n                htmlFor={id}\n                className={clsx('currency-list__item', {\n                    'currency-list__item--selected': id === value,\n                    'currency-list__item--current': props.selected,\n                })}\n                onClick={onClick}\n            >\n                {icon ? (\n                    <React.Fragment>\n                        <Icon className='currency-list__icon' icon={icon} />\n                        <div className='label currency-list__item-text'>\n                            <div className='currency-list__item-label'>{label}</div>\n                            <div className='currency-list__item-code'>{second_line_label}</div>\n                        </div>\n                    </React.Fragment>\n                ) : (\n                    <React.Fragment>\n                        <Icon className='currency-list__icon' icon={`IcCurrency-${id?.toLowerCase()}`} />\n                        {id && /^(UST|eUSDT|tUSDT)$/i.test(id) && <USTPopover id={id} />}\n                        <div className='label currency-list__item-text'>\n                            <div className='currency-list__item-label'>{label}</div>\n                            <div className='currency-list__item-code'>({getCurrencyDisplayCode(id)})</div>\n                        </div>\n                    </React.Fragment>\n                )}\n            </label>\n        </React.Fragment>\n    );\n};\n\nexport default RadioButton;\n","import React from 'react';\nimport clsx from 'clsx';\n\nexport type TRadioButtonGroup = {\n    className: string;\n    is_fiat?: boolean;\n    is_title_enabled?: boolean;\n    item_count: number;\n    label?: string;\n    description?: React.ReactNode;\n};\n\n/**\n * Wrapper component for RadioButton\n * @name RadioButtonGroup\n * @param {string} className - class name for styling\n * @param {boolean} is_fiat - is fiat currency\n * @param {boolean} is_title_enabled - is title enabled\n * @param {number} item_count - number of items\n * @param {string} label - label for the radio button\n * @param {React.ReactNode} description - description for the radio button\n * @returns {React.ReactNode} - returns a React node\n */\nconst RadioButtonGroup = ({\n    children,\n    label,\n    className,\n    is_title_enabled = true,\n    is_fiat,\n    item_count,\n    description,\n}: React.PropsWithChildren<TRadioButtonGroup>) => {\n    return (\n        <div className={className}>\n            {is_title_enabled && (\n                <h2\n                    className={clsx(`${className}--is-header`, {\n                        'currency-selector__is-crypto': !is_fiat,\n                    })}\n                >\n                    {label}\n                </h2>\n            )}\n            {is_fiat && <div className='currency-selector__description'>{description}</div>}\n            <div\n                className={clsx('currency-list__items', {\n                    'currency-list__items__center': item_count < 4,\n                    'currency-list__items__is-fiat': is_fiat,\n                    'currency-list__items__is-crypto': !is_fiat,\n                })}\n            >\n                {children}\n            </div>\n        </div>\n    );\n};\n\nexport default RadioButtonGroup;\n","import React from 'react';\nimport clsx from 'clsx';\nimport { Field, Formik, FormikHandlers, FormikState } from 'formik';\nimport { AutoHeightWrapper, FormSubmitButton, Div100vhContainer, Modal, ThemedScrollbars } from '@deriv/components';\nimport { reorderCurrencies, getAddressDetailsFields, CURRENCY_TYPE } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\nimport RadioButton from './radio-button';\nimport RadioButtonGroup from './radio-button-group';\nimport { splitValidationResultTypes } from '../real-account-signup/helpers/utils';\nimport { useDevice } from '@deriv-com/ui';\n\nexport const Hr = () => <div className='currency-hr' />;\n\nexport type TCurrencySelectorFormProps = {\n    currency: string;\n};\n\ntype TCurrencySelectorExtend = {\n    getCurrentStep: () => number;\n    goToNextStep: () => void;\n    goToStep: (step: number) => void;\n    goToPreviousStep: () => void;\n    has_cancel: boolean;\n    has_wallet_account: boolean;\n    is_virtual: boolean;\n    onCancel: (current_step: number, goToPreviousStep: () => void) => void;\n    onSave?: (current_step: number, values: TCurrencySelectorFormProps) => void;\n    onSubmit: (\n        current_step: number | null,\n        values: TCurrencySelectorFormProps,\n        action: (isSubmitting: boolean) => void,\n        next_step: () => void\n    ) => void;\n    set_currency: boolean;\n    validate: (values: TCurrencySelectorFormProps) => TCurrencySelectorFormProps;\n    value: TCurrencySelectorFormProps;\n};\n\ntype TCurrencySelector = React.HTMLAttributes<HTMLInputElement | HTMLLabelElement> & TCurrencySelectorExtend;\n\n/**\n * Currency selector component to select the Account currency\n * @name CurrencySelector\n * @param getCurrentStep - Get the current step\n * @param goToNextStep - Go to the next step\n * @param goToStep - Go to a specific step\n * @param goToPreviousStep - Go to the previous step\n * @param has_cancel - Has cancel button\n * @param has_wallet_account - Has wallet account\n * @param is_virtual - Is virtual account\n * @param onCancel - To handle click on cancel button\n * @param onSave - To handle click on save button\n * @param onSubmit - To handle click on submit button\n * @param set_currency - Is current set\n * @param alidate - To validate the form\n * @param alue - Value of the form\n * @returns React node\n */\nconst CurrencySelector = observer(\n    ({\n        getCurrentStep,\n        goToNextStep,\n        goToStep,\n        onSubmit,\n        onSave,\n        onCancel,\n        goToPreviousStep,\n        set_currency,\n        validate,\n        has_cancel = false,\n        has_wallet_account,\n        value,\n    }: TCurrencySelector) => {\n        const { client, ui } = useStore();\n\n        const {\n            currency,\n            has_active_real_account: has_real_account,\n            upgradeable_currencies: legal_allowed_currencies,\n            available_crypto_currencies,\n            has_fiat,\n            accounts,\n        } = client;\n\n        const has_currency = Boolean(currency);\n\n        const { real_account_signup, real_account_signup_target, resetRealAccountSignupParams } = ui;\n        const { isMobile, isDesktop } = useDevice();\n\n        // Wrapped with String() to avoid type mismatch\n        const crypto = legal_allowed_currencies.filter(\n            selected_currency => String(selected_currency.type) === CURRENCY_TYPE.CRYPTO\n        );\n\n        // Wrapped with String() to avoid type mismatch\n        const fiat = legal_allowed_currencies.filter(\n            selected_currency => String(selected_currency.type) === CURRENCY_TYPE.FIAT\n        );\n        const [is_bypass_step, setIsBypassStep] = React.useState<boolean>(false);\n\n        const should_disable_fiat = !!Object.values(accounts).filter(\n            item => item.landing_company_shortcode === real_account_signup_target\n        ).length;\n\n        const handleCancel = (values: TCurrencySelectorFormProps) => {\n            const current_step = getCurrentStep() - 1;\n            onSave?.(current_step, values);\n            onCancel(current_step, goToPreviousStep);\n        };\n\n        const handleValidate = (values: TCurrencySelectorFormProps) => {\n            const current_step = (getCurrentStep?.() || 1) - 1;\n            onSave?.(current_step, values);\n\n            const { errors } = splitValidationResultTypes(validate(values));\n            return errors;\n        };\n\n        // In case of form error bypass to update personal data\n        React.useEffect(() => {\n            if (real_account_signup?.error_code) {\n                setIsBypassStep(true);\n            }\n        }, [real_account_signup?.error_code]);\n\n        React.useEffect(() => {\n            if (is_bypass_step && real_account_signup?.error_details) {\n                const keys = Object.keys(real_account_signup?.error_details);\n                const route_to_address_details = Object.keys(getAddressDetailsFields()).filter(item =>\n                    keys.includes(item)\n                );\n                if (route_to_address_details?.length > 0) {\n                    goToStep(3);\n                } else {\n                    goToNextStep();\n                }\n                resetRealAccountSignupParams();\n                setIsBypassStep(false);\n            }\n            // eslint-disable-next-line react-hooks/exhaustive-deps\n        }, [is_bypass_step]);\n\n        const getHeightOffset = () => {\n            if (!has_currency && has_real_account) {\n                return '89px';\n            }\n            return '159px';\n        };\n\n        const getSubmitLabel = () => {\n            if (set_currency) {\n                return localize('Set currency');\n            } else if (has_wallet_account) {\n                return localize('Finish');\n            }\n            return localize('Next');\n        };\n\n        return (\n            <Formik\n                initialValues={value}\n                onSubmit={(values, actions) => {\n                    onSubmit(getCurrentStep ? getCurrentStep() - 1 : null, values, actions.setSubmitting, goToNextStep);\n                }}\n                validate={handleValidate}\n            >\n                {({ handleSubmit, values }: FormikState<TCurrencySelectorFormProps> & FormikHandlers) => (\n                    <AutoHeightWrapper default_height={450}>\n                        {({\n                            setRef,\n                            height,\n                        }: {\n                            setRef: (instance: HTMLFormElement | null) => void;\n                            height: number;\n                        }) => (\n                            <form\n                                ref={setRef}\n                                onSubmit={handleSubmit}\n                                className='currency-selector'\n                                data-testid='currency_selector_form'\n                            >\n                                <Div100vhContainer\n                                    className={clsx('currency-selector__container', {\n                                        'currency-selector__container--no-top-margin':\n                                            !has_currency && has_real_account && isMobile,\n                                    })}\n                                    height_offset={getHeightOffset()}\n                                    is_disabled={isDesktop}\n                                >\n                                    <ThemedScrollbars height={height}>\n                                        {!!fiat?.length && (\n                                            <React.Fragment>\n                                                <RadioButtonGroup\n                                                    className='currency-selector__radio-group currency-selector__radio-group--with-margin'\n                                                    is_fiat\n                                                    item_count={fiat.length}\n                                                >\n                                                    {reorderCurrencies(fiat as keyof typeof reorderCurrencies).map(\n                                                        avbl_currency => (\n                                                            <Field\n                                                                key={avbl_currency.value}\n                                                                component={RadioButton}\n                                                                name='currency'\n                                                                id={avbl_currency.value}\n                                                                label={avbl_currency.name}\n                                                                selected={should_disable_fiat && has_fiat}\n                                                            />\n                                                        )\n                                                    )}\n                                                </RadioButtonGroup>\n                                                {!!reorderCurrencies(crypto as keyof typeof reorderCurrencies, 'crypto')\n                                                    ?.length && <Hr />}\n                                            </React.Fragment>\n                                        )}\n                                        {!!reorderCurrencies(crypto as keyof typeof reorderCurrencies, 'crypto')\n                                            ?.length && (\n                                            <React.Fragment>\n                                                <RadioButtonGroup\n                                                    is_title_enabled={false}\n                                                    className='currency-selector__radio-group currency-selector__radio-group--with-margin'\n                                                    item_count={\n                                                        reorderCurrencies(\n                                                            crypto as keyof typeof reorderCurrencies,\n                                                            'crypto'\n                                                        ).length\n                                                    }\n                                                >\n                                                    {reorderCurrencies(\n                                                        crypto as keyof typeof reorderCurrencies,\n                                                        'crypto'\n                                                    ).map(avbl_currency => (\n                                                        <Field\n                                                            key={avbl_currency.value}\n                                                            component={RadioButton}\n                                                            selected={\n                                                                available_crypto_currencies?.filter(\n                                                                    crypto_data =>\n                                                                        crypto_data.value === avbl_currency.value\n                                                                )?.length === 0\n                                                            }\n                                                            name='currency'\n                                                            id={avbl_currency.value}\n                                                            label={avbl_currency.name}\n                                                        />\n                                                    ))}\n                                                </RadioButtonGroup>\n                                            </React.Fragment>\n                                        )}\n                                    </ThemedScrollbars>\n                                </Div100vhContainer>\n                                <Modal.Footer has_separator is_bypassed={isMobile}>\n                                    <FormSubmitButton\n                                        className={\n                                            set_currency\n                                                ? 'currency-selector--set-currency'\n                                                : 'currency-selector--deriv-account'\n                                        }\n                                        is_disabled={!values.currency}\n                                        is_center={false}\n                                        is_absolute={set_currency}\n                                        label={getSubmitLabel()}\n                                        {...(has_cancel\n                                            ? {\n                                                  cancel_label: localize('Previous'),\n                                                  has_cancel: true,\n                                                  onCancel: () => handleCancel(values),\n                                              }\n                                            : {})}\n                                    />\n                                </Modal.Footer>\n                            </form>\n                        )}\n                    </AutoHeightWrapper>\n                )}\n            </Formik>\n        );\n    }\n);\n\nexport default CurrencySelector;\n","import CurrencySelector from './currency-selector';\n\nexport default CurrencySelector;\n","import { FormikErrors, FormikValues } from 'formik';\n\n/**\n * Takes validation result of a form, sets warnings on component's state and pass errors down to the form\n *\n * @param {object} values - object containing form field values and validations\n * @return {object} object containing errors and warnings\n */\nfunction splitValidationResultTypes(values: FormikValues) {\n    const warnings: FormikErrors<FormikValues> = {};\n    const errors: FormikErrors<FormikValues> = {};\n    Object.keys(values).forEach((field: string) => {\n        const item = values[field];\n        if (Array.isArray(item)) {\n            if (item[0] === 'warn') {\n                warnings[field] = item[1];\n            } else if (item[0] === 'error') {\n                errors[field] = item[1];\n            }\n        }\n    });\n    return { warnings, errors };\n}\n\nexport { splitValidationResultTypes };\n","import ContentLoader from 'react-content-loader';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst AccountsInfoLoader = ({ is_desktop, is_logged_in, is_traders_hub_routes, speed }) => (\n    <ContentLoader\n        height={is_desktop ? 47 : 39}\n        width={is_desktop ? 350 : 161}\n        speed={speed}\n        backgroundColor={'var(--general-section-1)'}\n        foregroundColor={'var(--general-hover)'}\n    >\n        {is_logged_in ? (\n            <LoggedInPreloader is_desktop={is_desktop} is_traders_hub_routes={is_traders_hub_routes} />\n        ) : (\n            <LoggedOutPreloader is_desktop={is_desktop} />\n        )}\n    </ContentLoader>\n);\n\nconst LoggedOutPreloader = ({ is_desktop }) => (\n    <React.Fragment>\n        <rect x={is_desktop ? 172 : 0} y='8' rx='4' ry='4' width='66' height='30' />\n        <rect x={is_desktop ? 254 : 74} y='8' rx='4' ry='4' width='80' height='30' />\n    </React.Fragment>\n);\n\nconst LoggedInPreloader = ({ is_desktop, is_traders_hub_routes }) => (\n    <>\n        {is_desktop ? (\n            <React.Fragment>\n                {!is_traders_hub_routes && (\n                    <React.Fragment>\n                        <rect x='0' y='6' rx='4' ry='4' width='82' height='32' />\n                        <rect x='98' y='6' rx='4' ry='4' width='1' height='30' />\n                        <circle cx='128' cy='22' r='13' />\n                        <rect x='157' y='18' rx='4' ry='4' width='76' height='7' />\n                        <rect x='249' y='6' rx='4' ry='4' width='1' height='30' />\n                    </React.Fragment>\n                )}\n                <circle cx='279' cy='20' r='13' />\n                <circle cx='321' cy='20' r='13' />\n            </React.Fragment>\n        ) : (\n            <React.Fragment>\n                {!is_traders_hub_routes && (\n                    <React.Fragment>\n                        <circle cx='13' cy='20' r='13' />\n                        <rect x='34' y='17' rx='4' ry='4' width='76' height='7' />\n                        <rect x='118' y='6' rx='4' ry='4' width='1' height='30' />\n                    </React.Fragment>\n                )}\n                <circle cx='140' cy='20' r='13' />\n            </React.Fragment>\n        )}\n    </>\n);\n\nAccountsInfoLoader.propTypes = {\n    speed: PropTypes.number,\n    is_desktop: PropTypes.bool,\n    is_logged_in: PropTypes.bool,\n};\n\nexport { AccountsInfoLoader };\n","import ContentLoader from 'react-content-loader';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nconst AccountsItemLoader = ({ speed }) => (\n    <ContentLoader\n        height={24}\n        width={246}\n        speed={speed}\n        backgroundColor={'var(--general-section-1)'}\n        foregroundColor={'var(--general-hover)'}\n    >\n        <circle cx='18' cy='13' r='10' />\n        <rect x='36' y='3' rx='4' ry='4' width='108' height='20' />\n        <rect x='175' y='3' rx='4' ry='4' width='70' height='20' />\n    </ContentLoader>\n);\n\nAccountsItemLoader.propTypes = {\n    speed: PropTypes.number,\n};\n\nexport { AccountsItemLoader };\n","import ContentLoader from 'react-content-loader';\nimport React from 'react';\n\nconst PlatformSwitcherLoader = ({ is_mobile, speed }) => {\n    const container_margin = 16;\n    const element_spacing = is_mobile ? 16 : 8;\n    const logo_size = is_mobile ? 40 : 32;\n    const name_height = 16;\n    const name_width = 90;\n    const name_x = container_margin + logo_size + element_spacing;\n    const name_y = is_mobile ? 12 : 8;\n    const container_width = container_margin * 2 + logo_size + element_spacing + name_width;\n    return (\n        <ContentLoader\n            height={logo_size}\n            width={container_width}\n            speed={speed}\n            backgroundColor={'var(--general-section-1)'}\n            foregroundColor={'var(--general-hover)'}\n        >\n            <rect x={container_margin} y='0' rx='4' ry='4' width={logo_size} height={logo_size} />\n            <rect x={name_x} y={name_y} rx='4' ry='4' width={name_width} height={name_height} />\n        </ContentLoader>\n    );\n};\n\nexport { PlatformSwitcherLoader };\n","import React from 'react';\nimport { Popover } from '@deriv/components';\nimport { isBot } from '@deriv/shared';\n\ntype TAccountInfoWrapper = {\n    is_disabled?: boolean;\n    is_mobile?: boolean;\n    is_dtrader_v2?: boolean;\n    disabled_message?: string;\n};\n\nconst AccountInfoWrapper = ({\n    is_disabled,\n    is_mobile,\n    is_dtrader_v2,\n    disabled_message,\n    children,\n}: React.PropsWithChildren<TAccountInfoWrapper>) =>\n    is_disabled && disabled_message ? (\n        <Popover\n            alignment={(isBot() || is_dtrader_v2) && is_mobile ? 'bottom' : 'left'}\n            message={disabled_message}\n            zIndex='99999'\n        >\n            {children}\n        </Popover>\n    ) : (\n        <React.Fragment>{children}</React.Fragment>\n    );\n\nexport default AccountInfoWrapper;\n","import React from 'react';\nimport { useTranslation } from 'react-i18next';\nimport { useLocation } from 'react-router-dom';\nimport { Text, Icon, Counter } from '@deriv/components';\nimport { useDevice } from '@deriv-com/ui';\nimport { BinaryLink } from '../../Routes';\nimport { observer, useStore } from '@deriv/stores';\nimport { routes, startPerformanceEventTimer } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\nimport { useP2PNotificationCount, useIsRealAccountNeededForCashier } from '@deriv/hooks';\nimport { useHistory } from 'react-router';\nimport './menu-links.scss';\n\nconst MenuItems = ({ id, text, icon, link_to, handleClickCashier }) => {\n    return (\n        <BinaryLink\n            id={id}\n            key={icon}\n            to={link_to}\n            className='header__menu-link'\n            active_class='header__menu-link--active'\n            onClick={handleClickCashier}\n        >\n            <Text size='m' line_height='xs' title={text} className='header__menu-link-text'>\n                {icon}\n                {text}\n            </Text>\n        </BinaryLink>\n    );\n};\n\nconst ReportTab = () => (\n    <MenuItems\n        id={'dt_reports_tab'}\n        icon={<Icon icon='IcReports' className='header__icon' />}\n        text={localize('Reports')}\n        link_to={routes.reports}\n    />\n);\n\nconst CashierTab = observer(() => {\n    const { client, ui } = useStore();\n    const { has_any_real_account, is_virtual } = client;\n    const { toggleReadyToDepositModal, toggleNeedRealAccountForCashierModal } = ui;\n    const p2p_notification_count = useP2PNotificationCount();\n    const real_account_needed_for_cashier = useIsRealAccountNeededForCashier();\n\n    const history = useHistory();\n\n    const toggle_modal_routes =\n        window.location.pathname === routes.traders_hub || window.location.pathname === routes.bot;\n\n    const toggleModal = () => {\n        if (toggle_modal_routes && !has_any_real_account) {\n            toggleReadyToDepositModal();\n        } else if (window.location.pathname === routes.traders_hub) {\n            toggleNeedRealAccountForCashierModal();\n        }\n    };\n\n    const handleClickCashier = () => {\n        if ((!has_any_real_account && is_virtual) || real_account_needed_for_cashier) {\n            toggleModal();\n        } else {\n            startPerformanceEventTimer('load_cashier_time');\n            history.push(routes.cashier_deposit);\n        }\n    };\n\n    const cashier_redirect =\n        (toggle_modal_routes && !has_any_real_account && is_virtual) || real_account_needed_for_cashier;\n\n    return (\n        <MenuItems\n            id={'dt_cashier_tab'}\n            icon={\n                <>\n                    <Icon icon='IcCashier' className='header__icon' />\n                    {p2p_notification_count > 0 && (\n                        <Counter className='cashier__counter' count={p2p_notification_count} />\n                    )}\n                </>\n            }\n            text={localize('Cashier')}\n            link_to={!cashier_redirect ? routes.cashier : null}\n            handleClickCashier={handleClickCashier}\n        />\n    );\n});\n\nconst MenuLinks = observer(({ is_traders_hub_routes = false }) => {\n    const { isDesktop } = useDevice();\n    const { i18n } = useTranslation();\n    const location = useLocation();\n    const { client } = useStore();\n    const { has_wallet, is_logged_in } = client;\n\n    if (!is_logged_in) return <></>;\n\n    return (\n        <div key={`menu-links__${i18n.language}`} className='header__menu-links'>\n            {isDesktop && !has_wallet && <CashierTab />}\n            {!is_traders_hub_routes && !location.pathname.includes(routes.cashier) && <ReportTab />}\n        </div>\n    );\n});\n\nexport default MenuLinks;\n","import React from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { Button, Icon, Popover } from '@deriv/components';\nimport { useAccountSettingsRedirect } from '@deriv/hooks';\nimport { routes, formatMoney, isTabletOs } from '@deriv/shared';\nimport { useStore } from '@deriv/stores';\nimport { localize, Localize } from '@deriv/translations';\nimport { LoginButton } from './login-button.jsx';\nimport { SignupButton } from './signup-button.jsx';\nimport ToggleNotifications from './toggle-notifications.jsx';\nimport 'Sass/app/_common/components/account-switcher.scss';\nimport { useDevice } from '@deriv-com/ui';\n\ntype TUiStore = ReturnType<typeof useStore>['ui'];\n\ntype TAccountActionsProps = {\n    acc_switcher_disabled_message: string;\n    account_type: string;\n    balance: string | number;\n    currency: string;\n    disableApp: () => void;\n    enableApp: () => void;\n    is_acc_switcher_on: boolean;\n    is_acc_switcher_disabled: boolean;\n    is_eu: boolean;\n    is_notifications_visible: boolean;\n    is_logged_in: boolean;\n    is_traders_hub_routes: boolean;\n    is_virtual: boolean;\n    notifications_count: number;\n    onClickDeposit: () => void;\n    toggleAccountsDialog: () => void;\n    toggleNotifications: () => void;\n    openRealAccountSignup: TUiStore['openRealAccountSignup'];\n};\n\nconst AccountInfo = React.lazy(\n    () =>\n        import(\n            /* webpackChunkName: \"account-info\", webpackPreload: true */ 'App/Components/Layout/Header/account-info.jsx'\n        )\n);\n\nconst AccountSettingsToggle = () => {\n    const { redirect_url } = useAccountSettingsRedirect();\n\n    const accountSettings = (\n        <a className='account-settings-toggle' href={redirect_url}>\n            <Icon icon='IcUserOutline' />\n        </a>\n    );\n\n    if (isTabletOs) return accountSettings;\n\n    return (\n        <Popover\n            classNameBubble='account-settings-toggle__tooltip'\n            alignment='bottom'\n            message={<Localize i18n_default_text='Manage account settings' />}\n            should_disable_pointer_events\n            zIndex={'9999'}\n        >\n            {accountSettings}\n        </Popover>\n    );\n};\n\nconst NotificationsToggle = ({\n    count,\n    is_visible,\n    toggleDialog,\n}: {\n    count?: number;\n    is_visible?: boolean;\n    toggleDialog?: () => void;\n}) => (\n    <ToggleNotifications\n        count={count}\n        is_visible={is_visible}\n        toggleDialog={toggleDialog}\n        tooltip_message={<Localize i18n_default_text='View notifications' />}\n        should_disable_pointer_events\n        showPopover={!isTabletOs}\n    />\n);\n\nconst CurrencyButton = ({ openRealAccountSignup }: { openRealAccountSignup: TUiStore['openRealAccountSignup'] }) => (\n    <div className='set-currency'>\n        <Button\n            onClick={() => openRealAccountSignup('set_currency')}\n            has_effect\n            type='button'\n            text={localize('Set currency')}\n            primary\n        />\n    </div>\n);\n\nconst DepositButton = ({ onClickDeposit }: { onClickDeposit: () => void }) => (\n    <Button className='acc-info__button' has_effect text={localize('Deposit')} onClick={onClickDeposit} primary />\n);\n\nconst LoggedOutView = () => (\n    <>\n        <LoginButton className='acc-info__button' />\n        <SignupButton className='acc-info__button' />\n    </>\n);\n\nconst AccountActionsComponent = ({\n    acc_switcher_disabled_message,\n    account_type,\n    balance,\n    currency,\n    disableApp,\n    enableApp,\n    is_acc_switcher_on,\n    is_acc_switcher_disabled,\n    is_eu,\n    is_logged_in,\n    is_notifications_visible,\n    is_traders_hub_routes,\n    is_virtual,\n    notifications_count,\n    onClickDeposit,\n    openRealAccountSignup,\n    toggleAccountsDialog,\n    toggleNotifications,\n}: TAccountActionsProps) => {\n    const { isDesktop } = useDevice();\n    const location = useLocation();\n\n    const isDepositButtonVisible =\n        isDesktop && !is_traders_hub_routes && currency && !location.pathname.includes(routes.cashier);\n    const isCurrencyButtonVisible = isDesktop && !is_traders_hub_routes && !is_virtual && !currency;\n\n    const formattedBalance = balance != null ? formatMoney(currency, balance, true) : undefined;\n\n    const renderAccountInfo = () => (\n        <React.Suspense fallback={<div />}>\n            <AccountInfo\n                acc_switcher_disabled_message={acc_switcher_disabled_message}\n                account_type={account_type}\n                balance={formattedBalance}\n                is_disabled={is_acc_switcher_disabled}\n                is_eu={is_eu}\n                is_virtual={is_virtual}\n                currency={currency}\n                is_dialog_on={is_acc_switcher_on}\n                toggleDialog={toggleAccountsDialog}\n                {...(!isDesktop && {\n                    disableApp,\n                    enableApp,\n                    is_mobile: true,\n                })}\n            />\n        </React.Suspense>\n    );\n\n    if (!is_logged_in) {\n        return <LoggedOutView />;\n    }\n\n    return (\n        <React.Fragment>\n            {isCurrencyButtonVisible && <CurrencyButton openRealAccountSignup={openRealAccountSignup} />}\n            {isDepositButtonVisible && <DepositButton onClickDeposit={onClickDeposit} />}\n            {!is_traders_hub_routes && renderAccountInfo()}\n            <NotificationsToggle\n                count={notifications_count}\n                is_visible={is_notifications_visible}\n                toggleDialog={toggleNotifications}\n            />\n            {isDesktop && <AccountSettingsToggle />}\n        </React.Fragment>\n    );\n};\n\nAccountActionsComponent.displayName = 'AccountActions';\n\nconst AccountActions = React.memo(AccountActionsComponent);\n\nexport { AccountActions };\n","import React from 'react';\nimport Cookies from 'js-cookie';\nimport PropTypes from 'prop-types';\n\nimport { Button } from '@deriv/components';\nimport { useTMB } from '@deriv/hooks';\nimport { isStaging, redirectToLogin } from '@deriv/shared';\nimport { getLanguage, localize } from '@deriv/translations';\nimport { requestOidcAuthentication } from '@deriv-com/auth-client';\n\nconst LoginButton = ({ className }) => {\n    const is_deriv_com = /deriv\\.(com)/.test(window.location.hostname) || /localhost:8443/.test(window.location.host);\n    const has_wallet_cookie = Cookies.get('wallet_account');\n    const { isTmbEnabled } = useTMB();\n    return (\n        <Button\n            id='dt_login_button'\n            className={className}\n            has_effect\n            text={localize('Log in')}\n            onClick={async () => {\n                if (has_wallet_cookie) {\n                    if (isStaging()) {\n                        location.href = 'https://staging-hub.deriv.com/tradershub/login';\n                    } else {\n                        location.href = 'https://hub.deriv.com/tradershub/login';\n                    }\n                }\n                const is_tmb_enabled = await isTmbEnabled();\n                if (is_deriv_com && !is_tmb_enabled) {\n                    try {\n                        await requestOidcAuthentication({\n                            redirectCallbackUri: `${window.location.origin}/callback`,\n                            postLoginRedirectUri: window.location.href,\n                        }).catch(err => {\n                            // eslint-disable-next-line no-console\n                            console.error(err);\n                        });\n                    } catch (err) {\n                        // eslint-disable-next-line no-console\n                        console.error(err);\n                    }\n                }\n                window.LiveChatWidget?.call('hide');\n                redirectToLogin(false, getLanguage());\n            }}\n            tertiary\n        />\n    );\n};\n\nLoginButton.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { LoginButton };\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Icon, Text } from '@deriv/components';\nimport { useIsRealAccountNeededForCashier } from '@deriv/hooks';\nimport { routes, getStaticUrl } from '@deriv/shared';\nimport { isExternalLink } from '@deriv/utils';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\nimport { BinaryLink } from 'App/Components/Routes';\nimport { useDevice } from '@deriv-com/ui';\n\ntype TMenuLink = {\n    data_testid: string;\n    icon: string;\n    is_active: boolean;\n    is_disabled: boolean;\n    is_hidden: boolean;\n    link_to: string;\n    onClickLink: () => void;\n    suffix_icon: string;\n    text: React.ReactNode;\n};\n\nconst MenuLink = observer(\n    ({\n        data_testid,\n        icon = '',\n        is_active,\n        is_disabled,\n        is_hidden,\n        link_to = '',\n        onClickLink,\n        suffix_icon = '',\n        text,\n    }: Partial<TMenuLink>) => {\n        const { ui, client } = useStore();\n        const { isDesktop } = useDevice();\n        const { has_any_real_account, is_virtual } = client;\n        const { setMobileLanguageMenuOpen, toggleReadyToDepositModal, toggleNeedRealAccountForCashierModal } = ui;\n        const real_account_needed_for_cashier = useIsRealAccountNeededForCashier();\n        const is_trade_text = text === localize('Trade');\n        const deriv_static_url = getStaticUrl(link_to);\n        const traders_hub_path = window.location.pathname === routes.traders_hub;\n        const is_languages_link_on_responsive = !isDesktop && link_to === routes.languages;\n        const is_external_link = deriv_static_url && isExternalLink(link_to);\n        const is_cashier_link = [\n            routes.cashier_deposit,\n            routes.cashier_withdrawal,\n            routes.cashier_acc_transfer,\n        ].includes(link_to);\n\n        if (is_hidden) return null;\n\n        if (is_languages_link_on_responsive) {\n            return (\n                <div\n                    className={classNames('header__menu-mobile-link', {\n                        'header__menu-mobile-link--disabled': is_disabled,\n                    })}\n                    onClick={() => setMobileLanguageMenuOpen(true)}\n                    data-testid={data_testid}\n                >\n                    <Icon className='header__menu-mobile-link-icon' icon={icon} />\n                    <span className='header__menu-mobile-link-text'>{text}</span>\n                    {suffix_icon && <Icon className='header__menu-mobile-link-suffix-icon' icon={suffix_icon} />}\n                </div>\n            );\n        }\n        if (real_account_needed_for_cashier && is_cashier_link && traders_hub_path) {\n            const handleClickCashier = () => {\n                onClickLink?.();\n                toggleNeedRealAccountForCashierModal();\n            };\n            return (\n                <div\n                    className={classNames('header__menu-mobile-link', {\n                        'header__menu-mobile-link--disabled': is_disabled,\n                    })}\n                    onClick={handleClickCashier}\n                    data-testid={data_testid}\n                >\n                    <Icon className='header__menu-mobile-link-icon' icon={icon} />\n                    <span className='header__menu-mobile-link-text'>{text}</span>\n                    {suffix_icon && <Icon className='header__menu-mobile-link-suffix-icon' icon={suffix_icon} />}\n                </div>\n            );\n        }\n\n        if (is_cashier_link && is_virtual && !has_any_real_account) {\n            const handleClickCashier = () => {\n                if (traders_hub_path) {\n                    toggleReadyToDepositModal();\n                }\n                onClickLink?.();\n            };\n            return (\n                <div\n                    className={classNames('header__menu-mobile-link', {\n                        'header__menu-mobile-link--disabled': is_disabled,\n                    })}\n                    onClick={handleClickCashier}\n                    data-testid={data_testid}\n                >\n                    <Icon className='header__menu-mobile-link-icon' icon={icon} />\n                    <span className='header__menu-mobile-link-text'>{text}</span>\n                    {suffix_icon && <Icon className='header__menu-mobile-link-suffix-icon' icon={suffix_icon} />}\n                </div>\n            );\n        }\n\n        if (!link_to) {\n            return (\n                <div\n                    className={classNames('header__menu-mobile-link', {\n                        'header__menu-mobile-link--disabled': is_disabled,\n                    })}\n                    data-testid={data_testid}\n                >\n                    <Icon className='header__menu-mobile-link-icon' icon={icon} />\n                    <span className='header__menu-mobile-link-text'>{text}</span>\n                    {suffix_icon && <Icon className='header__menu-mobile-link-suffix-icon' icon={suffix_icon} />}\n                </div>\n            );\n        } else if (is_external_link) {\n            return (\n                <a\n                    className={classNames('header__menu-mobile-link', {\n                        'header__menu-mobile-link--disabled': is_disabled,\n                        'header__menu-mobile-link--active': is_active,\n                    })}\n                    href={link_to}\n                    data-testid={data_testid}\n                >\n                    <Icon className='header__menu-mobile-link-icon' icon={icon} />\n                    <Text\n                        className={is_trade_text ? '' : 'header__menu-mobile-link-text'}\n                        as='h3'\n                        size='xs'\n                        weight={window.location.pathname === routes.trade && is_trade_text ? 'bold' : undefined}\n                    >\n                        {text}\n                    </Text>\n                    {suffix_icon && <Icon className='header__menu-mobile-link-suffix-icon' icon={suffix_icon} />}\n                </a>\n            );\n        }\n\n        return (\n            <BinaryLink\n                to={link_to}\n                className={classNames('header__menu-mobile-link', {\n                    'header__menu-mobile-link--disabled': is_disabled,\n                    'header__menu-mobile-link--active': is_active,\n                })}\n                onClick={onClickLink}\n                data-testid={data_testid}\n            >\n                <Icon className='header__menu-mobile-link-icon' icon={icon} />\n                <Text\n                    className={is_trade_text ? '' : 'header__menu-mobile-link-text'}\n                    as='h3'\n                    size='xs'\n                    weight={window.location.pathname === routes.trade && is_trade_text ? 'bold' : undefined}\n                >\n                    {text}\n                </Text>\n                {suffix_icon && <Icon className='header__menu-mobile-link-suffix-icon' icon={suffix_icon} />}\n            </BinaryLink>\n        );\n    }\n);\n\nexport default MenuLink;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Div100vhContainer, Icon, useOnClickOutside, Text } from '@deriv/components';\nimport { routes, getActivePlatform, platforms } from '@deriv/shared';\nimport { BinaryLink } from 'App/Components/Routes';\nimport 'Sass/app/_common/components/platform-dropdown.scss';\nimport { Localize } from '@deriv/translations';\nimport { useHistory } from 'react-router';\nimport { useDevice } from '@deriv-com/ui';\nimport { useIsHubRedirectionEnabled } from '@deriv/hooks';\nimport { useStore } from '@deriv/stores';\n\nconst PlatformBox = ({ platform: { icon, description } }) => (\n    <React.Fragment>\n        <div className='platform-dropdown__list-platform-background' />\n\n        <div className='platform-switcher__dropdown' data-testid='dt_platform_box_icon'>\n            <Icon icon={icon} height={42} width={150} description={icon} />\n            <p className='platform-dropdown__list-platform-description'>{description()}</p>\n        </div>\n    </React.Fragment>\n);\nconst appendAccountParamToUrl = (link_to, client) => {\n    const { is_virtual, currency } = client;\n\n    if (is_virtual) {\n        return `${link_to}${link_to.includes('?') ? '&' : '?'}account=demo`;\n    }\n\n    if (currency) {\n        return `${link_to}${link_to.includes('?') ? '&' : '?'}account=${currency}`;\n    }\n\n    return link_to;\n};\n\nconst PlatformDropdownContent = ({ platform, app_routing_history, client }) => {\n    return (\n        (platform.link_to && (\n            <BinaryLink\n                data-testid='dt_platform_dropdown'\n                to={appendAccountParamToUrl(platform.link_to, client)}\n                // This is here because in routes-config it needs to have children, but not in menu\n                exact={platform.link_to === routes.trade}\n                className='platform-dropdown__list-platform'\n                isActive={() => getActivePlatform(app_routing_history) === platform.name}\n                onClick={e => window.location.pathname.startsWith(platform.link_to) && e.preventDefault()}\n            >\n                <PlatformBox platform={platform} />\n            </BinaryLink>\n        )) || (\n            <a\n                data-testid='dt_platform_dropdown_link'\n                href={appendAccountParamToUrl(platform.href, client)}\n                className={`platform-dropdown__list-platform ${\n                    getActivePlatform(app_routing_history) === platform.name ? 'active' : ''\n                }`}\n            >\n                <PlatformBox platform={platform} />\n            </a>\n        )\n    );\n};\n\nconst PlatformDropdown = ({ app_routing_history, closeDrawer, platform_config, setTogglePlatformType }) => {\n    const history = useHistory();\n    const { isDesktop } = useDevice();\n    const { isHubRedirectionEnabled } = useIsHubRedirectionEnabled();\n    const { client } = useStore();\n    const { has_wallet } = client;\n\n    const TradersHubRedirect = () => {\n        return (\n            <div className='platform-dropdown__cta'>\n                <BinaryLink\n                    onClick={() => {\n                        if (isHubRedirectionEnabled && has_wallet) {\n                            localStorage.setItem('redirect_to_th_os', 'home');\n                            window.location.assign(platforms.tradershub_os.url);\n                            return;\n                        }\n                        if (!isDesktop) {\n                            history.push(routes.traders_hub);\n                            setTogglePlatformType('cfd');\n                        }\n                        history.push(routes.traders_hub);\n                    }}\n                >\n                    <Text size='xs' weight='bold' align='center' className='platform-dropdown__cta--link'>\n                        <Localize i18n_default_text=\"Looking for CFDs? Go to Trader's Hub\" />\n                    </Text>\n                </BinaryLink>\n            </div>\n        );\n    };\n\n    React.useEffect(() => {\n        window.addEventListener('popstate', closeDrawer);\n        return () => {\n            window.removeEventListener('popstate', closeDrawer);\n        };\n    }, [closeDrawer]);\n\n    const ref = React.useRef();\n\n    const handleClickOutside = event => {\n        if (!event.target.closest('.platform-dropdown__list') && !event.target.closest('.platform-switcher')) {\n            closeDrawer();\n        }\n    };\n\n    useOnClickOutside(ref, handleClickOutside, () => isDesktop);\n\n    const platform_dropdown = (\n        <div className='platform-dropdown'>\n            <Div100vhContainer className='platform-dropdown__list' height_offset='15rem' is_disabled={isDesktop}>\n                {platform_config.map(platform => {\n                    return (\n                        <div key={platform.name} onClick={closeDrawer} ref={ref}>\n                            <PlatformDropdownContent\n                                platform={platform}\n                                app_routing_history={app_routing_history}\n                                client={client}\n                            />\n                        </div>\n                    );\n                })}\n                <TradersHubRedirect />\n            </Div100vhContainer>\n        </div>\n    );\n\n    if (isDesktop) {\n        return ReactDOM.createPortal(platform_dropdown, document.getElementById('deriv_app'));\n    }\n\n    return ReactDOM.createPortal(platform_dropdown, document.getElementById('mobile_platform_switcher'));\n};\n\nexport { PlatformDropdown, PlatformBox };\n","import 'Sass/app/_common/components/platform-switcher.scss';\n\nimport { useDevice } from '@deriv-com/ui';\nimport { Icon } from '@deriv/components';\nimport { getPlatformInformation } from '@deriv/shared';\nimport { CSSTransition } from 'react-transition-group';\nimport { PlatformDropdown } from './platform-dropdown.jsx';\nimport { PlatformSwitcherLoader } from './Components/Preloader/platform-switcher.jsx';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\nimport { withRouter } from 'react-router-dom';\n\nconst PlatformSwitcher = ({\n    toggleDrawer,\n    app_routing_history,\n    platform_config = [],\n    current_language,\n    is_landing_company_loaded,\n    is_logged_in,\n    is_logging_in,\n    setTogglePlatformType,\n}) => {\n    const [is_open, setIsOpen] = React.useState(false);\n\n    const is_close_drawer_fired_ref = React.useRef(false);\n\n    const { isDesktop } = useDevice();\n\n    React.useEffect(() => {\n        if (is_close_drawer_fired_ref.current) {\n            if (typeof toggleDrawer === 'function') {\n                toggleDrawer();\n            }\n        }\n        is_close_drawer_fired_ref.current = false;\n    });\n\n    const closeDrawer = () => {\n        setIsOpen(false);\n        is_close_drawer_fired_ref.current = true;\n    };\n\n    return (is_logged_in || is_logging_in ? !is_landing_company_loaded : app_routing_history.length === 0) ? (\n        <div\n            data-testid='dt_platform_switcher_preloader'\n            className={classNames('platform-switcher__preloader', {\n                'platform-switcher__preloader--is-mobile': !isDesktop,\n            })}\n        >\n            <PlatformSwitcherLoader is_mobile={!isDesktop} speed={3} />\n        </div>\n    ) : (\n        <React.Fragment>\n            <div\n                data-testid='dt_platform_switcher'\n                className={classNames(\n                    'platform-switcher',\n                    { 'platform-switcher--active': is_open },\n                    { 'platform-switcher--is-mobile': !isDesktop }\n                )}\n                onClick={() => setIsOpen(!is_open)}\n            >\n                <Icon\n                    className='platform-switcher__icon'\n                    icon={getPlatformInformation(app_routing_history).icon}\n                    description={getPlatformInformation(app_routing_history).header}\n                    width={120}\n                    height={25}\n                />\n\n                <Icon className='platform-switcher__arrow' icon='IcChevronDownBold' />\n            </div>\n            <CSSTransition\n                mountOnEnter\n                appear\n                in={is_open}\n                classNames={{\n                    enterDone: 'platform-dropdown--enter-done',\n                }}\n                timeout={isDesktop && is_open ? 0 : 250}\n                unmountOnExit\n            >\n                <PlatformDropdown\n                    platform_config={platform_config}\n                    closeDrawer={closeDrawer}\n                    current_language={current_language}\n                    app_routing_history={app_routing_history}\n                    setTogglePlatformType={setTogglePlatformType}\n                />\n            </CSSTransition>\n        </React.Fragment>\n    );\n};\n\nPlatformSwitcher.propTypes = {\n    platform_config: PropTypes.array,\n    toggleDrawer: PropTypes.func,\n    current_language: PropTypes.string,\n    app_routing_history: PropTypes.array,\n    is_landing_company_loaded: PropTypes.bool,\n    is_logged_in: PropTypes.bool,\n    is_logging_in: PropTypes.bool,\n    setTogglePlatformType: PropTypes.func,\n};\n\nexport default withRouter(PlatformSwitcher);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Button } from '@deriv/components';\nimport { redirectToSignUp } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\n\nconst SignupButton = ({ className }) => (\n    <Button\n        id='dt_signup_button'\n        className={className}\n        has_effect\n        text={localize('Sign up')}\n        onClick={redirectToSignUp}\n        primary\n    />\n);\n\nSignupButton.propTypes = {\n    className: PropTypes.string,\n};\n\nexport { SignupButton };\n","import { Icon, Popover, Text } from '@deriv/components';\nimport { useIsFreshchatAvailable, useIsIntercomAvailable, useIsLiveChatWidgetAvailable } from '@deriv/hooks';\nimport { observer } from '@deriv/stores';\nimport { Localize } from '@deriv/translations';\nimport { Chat } from '@deriv/utils';\nimport { useDevice } from '@deriv-com/ui';\n\nconst LiveChat = observer(({ showPopover }: { showPopover?: boolean }) => {\n    const { isDesktop } = useDevice();\n\n    const { is_livechat_available } = useIsLiveChatWidgetAvailable();\n\n    const fcAvailable = useIsFreshchatAvailable();\n    const icAvailable = useIsIntercomAvailable();\n\n    const isNeitherChatNorLiveChatAvailable = !is_livechat_available && !fcAvailable && !icAvailable;\n\n    if (isNeitherChatNorLiveChatAvailable) {\n        return null;\n    }\n\n    // Quick fix for making sure livechat won't popup if feature flag is late to enable.\n    // We will add a refactor after this\n    setInterval(() => {\n        if (fcAvailable || icAvailable) {\n            if (window.LiveChatWidget && typeof window.LiveChatWidget.call === 'function') {\n                window.LiveChatWidget.call('destroy');\n            }\n        }\n    }, 10);\n\n    const liveChatClickHandler = () => {\n        Chat.open();\n    };\n\n    if (isDesktop)\n        return (\n            <div onKeyDown={liveChatClickHandler} onClick={liveChatClickHandler}>\n                {showPopover ? (\n                    <Popover\n                        className='footer__link'\n                        classNameBubble='help-centre__tooltip'\n                        alignment='top'\n                        message={<Localize i18n_default_text='Live chat' />}\n                        zIndex='9999'\n                    >\n                        <Icon icon='IcLiveChat' className='footer__icon gtm-deriv-livechat' />\n                    </Popover>\n                ) : (\n                    <div className='footer__link'>\n                        <Icon icon='IcLiveChat' className='footer__icon gtm-deriv-livechat' />\n                    </div>\n                )}\n            </div>\n        );\n\n    return (\n        <div className='livechat gtm-deriv-livechat' onKeyDown={liveChatClickHandler} onClick={liveChatClickHandler}>\n            <div className='livechat__icon-wrapper'>\n                <Icon icon='IcLiveChat' className='livechat__icon' />\n            </div>\n            <Text size='xs'>\n                <Localize i18n_default_text='Live chat' />\n            </Text>\n        </div>\n    );\n});\n\nexport default LiveChat;\n","import LiveChat from './live-chat';\n\nexport default LiveChat;\n","import React, { Fragment } from 'react';\n\nimport { Icon, Popover } from '@deriv/components';\nimport { useIsIntercomAvailable, useIsLiveChatWidgetAvailable } from '@deriv/hooks';\nimport { localize } from '@deriv/translations';\nimport { useDevice } from '@deriv-com/ui';\nimport { URLConstants } from '@deriv-com/utils';\n\nconst WhatsApp = ({ showPopover, onClick }: { showPopover?: boolean; onClick?: () => void }) => {\n    const { isDesktop } = useDevice();\n\n    const { is_livechat_available } = useIsLiveChatWidgetAvailable();\n    const icAvailable = useIsIntercomAvailable();\n\n    if (!is_livechat_available && !icAvailable) return null;\n\n    if (!isDesktop)\n        return (\n            <Fragment>\n                <Icon icon='IcWhatsApp' className='drawer-icon' />\n                <a\n                    className='header__menu-mobile-whatsapp-link'\n                    href={URLConstants.whatsApp}\n                    target='_blank'\n                    rel='noopener noreferrer'\n                    onClick={onClick}\n                >\n                    {localize('WhatsApp')}\n                </a>\n            </Fragment>\n        );\n\n    return (\n        <a\n            href={URLConstants.whatsApp}\n            aria-label={localize('WhatsApp')}\n            className='footer__link'\n            target='_blank'\n            rel='noreferrer'\n        >\n            {showPopover ? (\n                <Popover\n                    classNameBubble='whatsapp__tooltip'\n                    alignment='top'\n                    message={localize('WhatsApp')}\n                    zIndex='9999'\n                >\n                    <Icon icon='IcWhatsApp' className='footer__icon' />\n                </Popover>\n            ) : (\n                <Icon icon='IcWhatsApp' className='footer__icon' />\n            )}\n        </a>\n    );\n};\n\nexport default WhatsApp;\n","import WhatsApp from './whatsapp';\n\nexport default WhatsApp;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Popover } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { observer, useStore } from '@deriv/stores';\n\nconst NetworkStatus = observer(({ is_mobile }) => {\n    const { common } = useStore();\n    const { network_status: status } = common;\n\n    const network_status_element = (\n        <div\n            data-testid='dt_network_status_element'\n            className={classNames('network-status__circle', {\n                'network-status__circle--offline': status.class === 'offline',\n                'network-status__circle--online': status.class === 'online',\n                'network-status__circle--blinker': status.class === 'blinker',\n            })}\n        />\n    );\n    return (\n        <div\n            data-testid='dt_network_status'\n            className={classNames('network-status__wrapper', {\n                'network-status__wrapper--is-mobile': is_mobile,\n            })}\n        >\n            {is_mobile ? (\n                network_status_element\n            ) : (\n                <Popover\n                    classNameBubble='network-status__tooltip'\n                    alignment='top'\n                    message={localize('Network status: {{status}}', {\n                        status: status.tooltip || localize('Connecting to server'),\n                    })}\n                >\n                    {network_status_element}\n                </Popover>\n            )}\n        </div>\n    );\n});\n\nNetworkStatus.propTypes = {\n    is_mobile: PropTypes.bool,\n};\n\nexport default NetworkStatus;\n","import classNames from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon, Popover } from '@deriv/components';\nimport { localize } from '@deriv/translations';\n\nconst ToggleFullScreen = ({ showPopover }) => {\n    const [is_full_screen, setIsFullScreen] = React.useState(false);\n\n    const fullscreen_map = {\n        event: ['fullscreenchange', 'webkitfullscreenchange', 'mozfullscreenchange', 'MSFullscreenChange'],\n        element: ['fullscreenElement', 'webkitFullscreenElement', 'mozFullScreenElement', 'msFullscreenElement'],\n        fnc_enter: ['requestFullscreen', 'webkitRequestFullscreen', 'mozRequestFullScreen', 'msRequestFullscreen'],\n        fnc_exit: ['exitFullscreen', 'webkitExitFullscreen', 'mozCancelFullScreen', 'msExitFullscreen'],\n    };\n\n    const onFullScreen = React.useCallback(() => {\n        setIsFullScreen(fullscreen_map.element.some(el => document[el]));\n    }, [fullscreen_map.element]);\n\n    React.useEffect(() => {\n        fullscreen_map.event.forEach(event => {\n            document.addEventListener(event, onFullScreen, false);\n        });\n    }, [fullscreen_map.event, onFullScreen]);\n\n    const toggleFullScreen = e => {\n        e.stopPropagation();\n\n        const to_exit = is_full_screen;\n        const el = to_exit ? document : document.documentElement;\n        const fncToCall = fullscreen_map[to_exit ? 'fnc_exit' : 'fnc_enter'].find(fnc => el[fnc]);\n\n        if (fncToCall) {\n            el[fncToCall]();\n        } else {\n            setIsFullScreen(false); // fullscreen API is not enabled\n        }\n    };\n\n    const full_screen_icon_class = classNames('ic-fullscreen', 'footer__link', {\n        'ic-fullscreen--active': is_full_screen,\n    });\n\n    const fullScreenIcon = is_full_screen ? (\n        <Icon icon='IcFullScreenRestore' className='footer__icon' />\n    ) : (\n        <Icon data_testid='dt_icon' icon='IcFullScreen' className='footer__icon' />\n    );\n\n    return (\n        <a\n            data-testid='dt_fullscreen_toggle'\n            className={`${full_screen_icon_class} footer__link`}\n            onClick={toggleFullScreen}\n            id='dt_fullscreen_toggle'\n        >\n            {showPopover ? (\n                <Popover\n                    alignment='top'\n                    message={is_full_screen ? localize('Exit') : localize('Full screen')}\n                    zIndex={9999}\n                >\n                    {fullScreenIcon}\n                </Popover>\n            ) : (\n                fullScreenIcon\n            )}\n        </a>\n    );\n};\n\nToggleFullScreen.propTypes = {\n    showPopover: PropTypes.bool,\n};\n\nexport { ToggleFullScreen };\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Icon, Modal, Popover, VerticalTab } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport 'Sass/app/modules/settings.scss';\n\nconst ModalContent = ({ settings_extension }) => {\n    const content = [];\n\n    content.push(...(settings_extension || []));\n\n    return <VerticalTab list={content} />;\n};\n\nconst ToggleSettings = ({\n    enableApp,\n    is_settings_visible,\n    disableApp,\n    toggleSettings,\n    settings_extension,\n    showPopover,\n}) => {\n    const toggle_settings_class = classNames('ic-settings', 'footer__link', {\n        'ic-settings--active': is_settings_visible,\n    });\n    return (\n        <React.Fragment>\n            <a\n                id='dt_settings_toggle'\n                data-testid='dt_toggle_settings'\n                onClick={toggleSettings}\n                className={`${toggle_settings_class} footer__link`}\n            >\n                {showPopover ? (\n                    <Popover alignment='top' message={localize('Platform settings')} zIndex={9999}>\n                        <Icon icon='IcGear' data_testid='dt_icon' className='footer__icon ic-settings__icon' />\n                    </Popover>\n                ) : (\n                    <Icon icon='IcGear' data_testid='dt_icon' className='footer__icon ic-settings__icon' />\n                )}\n            </a>\n            <Modal\n                id='dt_settings_modal'\n                className='modal-settings'\n                enableApp={enableApp}\n                is_open={is_settings_visible}\n                disableApp={disableApp}\n                title={localize('Platform settings')}\n                toggleModal={toggleSettings}\n                height='616px'\n                width='736px'\n            >\n                <ModalContent settings_extension={settings_extension} />\n            </Modal>\n        </React.Fragment>\n    );\n};\n\nToggleSettings.propTypes = {\n    disableApp: PropTypes.func,\n    enableApp: PropTypes.func,\n    is_settings_visible: PropTypes.bool,\n    settings_extension: PropTypes.array,\n    toggleSettings: PropTypes.func,\n    showPopover: PropTypes.bool,\n};\n\nexport { ToggleSettings };\n","import React from 'react';\nimport { observer, useStore } from '@deriv/stores';\nimport { getAllowedLanguages, useTranslations } from '@deriv-com/translations';\nimport { LanguageLink } from 'App/Components/Routes';\nimport { UNSUPPORTED_LANGUAGES } from '@deriv/shared';\n\nconst isCurrentLanguage = (lang, current_language) => lang === current_language;\n\nconst LanguageSettings = observer(() => {\n    const { ui } = useStore();\n    const { toggleLanguageSettingsModal } = ui;\n    const { currentLang } = useTranslations();\n\n    const allowed_languages = Object.keys(getAllowedLanguages(UNSUPPORTED_LANGUAGES));\n\n    return (\n        <div className='settings-language'>\n            <div className='settings-language__language-container'>\n                {allowed_languages.map(lang =>\n                    isCurrentLanguage(lang, currentLang) ? (\n                        <LanguageLink key={lang} lang={lang} />\n                    ) : (\n                        <LanguageLink key={lang} is_clickable lang={lang} toggleModal={toggleLanguageSettingsModal} />\n                    )\n                )}\n            </div>\n        </div>\n    );\n});\n\nexport default LanguageSettings;\n","// eslint-disable-next-line import/no-named-as-default\nimport NetworkStatus from './network-status.jsx';\n\nexport default NetworkStatus;\nexport * from './endpoint-note.jsx';\nexport * from './toggle-fullscreen.jsx';\nexport * from './toggle-settings.jsx';\nexport * from './toggle-language-settings';\nexport * from './help-centre.jsx';\nexport * from './responsible-trading.jsx';\nexport * from './account-limits';\nexport * from './regulatory-information.jsx';\n","import React from 'react';\nimport classNames from 'classnames';\nimport { observer, useStore } from '@deriv/stores';\nimport { Icon, Modal, Popover, Text } from '@deriv/components';\nimport { useTranslations } from '@deriv-com/translations';\nimport { Localize, localize } from '@deriv/translations'; // [TODO]: Remove this import after integrating Deriv app with new translation lib\nimport 'Sass/app/modules/settings.scss';\nimport LanguageSettings from '../../../Containers/SettingsModal/settings-language';\nimport { TranslationFlag } from '@deriv/shared';\n\nconst ToggleLanguageSettings = observer(({ showPopover }: { showPopover?: boolean }) => {\n    const { common, ui } = useStore();\n    const { currentLang } = useTranslations();\n    const { is_language_settings_modal_on, toggleLanguageSettingsModal } = ui;\n    const { is_language_changing } = common;\n\n    const toggle_settings_class = classNames('ic-language', 'footer__link', {\n        'ic-settings--active': is_language_settings_modal_on,\n        'ic-settings--disabled': is_language_changing,\n    });\n\n    const content = (\n        <React.Fragment>\n            {TranslationFlag[currentLang] ? (\n                TranslationFlag[currentLang](18, 12)\n            ) : (\n                //TODOs: remove this when Korean flag is included in quill-icons\n                <Icon icon={`IcFlag${currentLang}`} data_testid='dt_icon' size={18} />\n            )}\n\n            <Text weight='bold' size='xxs' className='ic-settings-language__text'>\n                <Localize i18n_default_text={currentLang} />\n            </Text>\n        </React.Fragment>\n    );\n\n    return (\n        <React.Fragment>\n            <a\n                id='dt_language_settings_toggle'\n                data-testid='dt_toggle_language_settings'\n                onClick={toggleLanguageSettingsModal}\n                className={toggle_settings_class}\n            >\n                {showPopover ? (\n                    <Popover alignment='top' message={localize('Language')} zIndex='9999'>\n                        {content}\n                    </Popover>\n                ) : (\n                    content\n                )}\n            </a>\n            <Modal\n                id='dt_settings_modal'\n                is_open={is_language_settings_modal_on}\n                title={localize('Select language')}\n                toggleModal={toggleLanguageSettingsModal}\n                width='616px'\n                should_header_stick_body={false}\n            >\n                <LanguageSettings />\n            </Modal>\n        </React.Fragment>\n    );\n});\n\nexport { ToggleLanguageSettings };\n","import React from 'react';\nimport { Icon, Popover } from '@deriv/components';\nimport { useAccountSettingsRedirect } from '@deriv/hooks';\nimport { localize } from '@deriv/translations';\nimport { observer } from '@deriv/stores';\n\nexport const AccountLimits = observer(({ showPopover }) => {\n    // Use the useAccountSettingsRedirect hook with 'account-limits' as the redirect_to value\n    const { redirect_url } = useAccountSettingsRedirect('account-limits');\n\n    return (\n        <a className='footer__link' href={redirect_url}>\n            {showPopover ? (\n                <Popover alignment='top' message={localize('Account limits')} zIndex={9999}>\n                    <Icon icon='IcAccountLimits' className='footer__icon ic-deriv__icon' />\n                </Popover>\n            ) : (\n                <Icon icon='IcAccountLimits' className='footer__icon ic-deriv__icon' />\n            )}\n        </a>\n    );\n});\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { toGMTFormat, toLocalFormat } from '@deriv/shared';\nimport { Popover } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\n\nconst ServerTime = observer(({ is_mobile }) => {\n    const { common } = useStore();\n    const { server_time } = common;\n    const gmt_time = toGMTFormat(server_time);\n    const local_time = toLocalFormat(server_time);\n    return (\n        <Popover\n            alignment='top'\n            message={local_time}\n            className={classNames('server-time', {\n                'server-time--is-mobile': is_mobile,\n            })}\n            zIndex={9999}\n        >\n            {gmt_time}\n        </Popover>\n    );\n});\n\nServerTime.propTypes = {\n    is_mobile: PropTypes.bool,\n};\n\nexport default ServerTime;\n","import React from 'react';\nimport { observer, useStore } from '@deriv/stores';\nimport { Icon, Text } from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\nimport { TranslationFlag } from '@deriv/shared';\n\nconst MenuTitle = observer(() => {\n    const { common, ui } = useStore();\n    const { current_language } = common;\n    const { is_mobile_language_menu_open, setMobileLanguageMenuOpen } = ui;\n\n    return (\n        <React.Fragment>\n            <div>{localize('Menu')}</div>\n            <div\n                className='settings-language__language-button_wrapper'\n                onClick={() => {\n                    if (!is_mobile_language_menu_open) {\n                        setMobileLanguageMenuOpen(true);\n                    }\n                }}\n            >\n                {!is_mobile_language_menu_open && (\n                    <React.Fragment>\n                        {TranslationFlag[current_language] ? (\n                            TranslationFlag[current_language](22, 16)\n                        ) : (\n                            //TODOs: remove this when Korean flag is added to quill-icons\n                            <Icon icon={`IcFlag${current_language}`} data_testid='dt_icon' size={18} />\n                        )}\n                        <Text weight='bold' size='xxs' className='ic-settings-language__text'>\n                            <Localize i18n_default_text={current_language} />\n                        </Text>\n                    </React.Fragment>\n                )}\n            </div>\n        </React.Fragment>\n    );\n});\n\nexport default MenuTitle;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { MobileDrawer } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport { getAllowedLanguages } from '@deriv-com/translations';\nimport { localize } from '@deriv/translations'; // [TODO:] Remove this once deriv-app is configured to use the new translation lib\nimport { LanguageLink } from 'App/Components/Routes';\nimport { UNSUPPORTED_LANGUAGES } from '@deriv/shared';\n\ntype TMobileLanguageMenu = {\n    expandSubMenu: (prop: boolean) => void;\n    toggleDrawer: () => void;\n};\n\nconst MobileLanguageMenu = observer(({ expandSubMenu, toggleDrawer }: TMobileLanguageMenu) => {\n    const { common, ui } = useStore();\n    const { is_language_changing } = common;\n    const { is_mobile_language_menu_open, setMobileLanguageMenuOpen } = ui;\n\n    const allowed_languages = Object.keys(getAllowedLanguages(UNSUPPORTED_LANGUAGES));\n\n    return (\n        <MobileDrawer.SubMenu\n            is_expanded={is_mobile_language_menu_open}\n            has_subheader\n            submenu_title={localize('Select language')}\n            onToggle={is_expanded => {\n                expandSubMenu(is_expanded);\n                setMobileLanguageMenuOpen(false);\n            }}\n            submenu_toggle_class='dc-mobile-drawer__submenu-toggle--hidden'\n        >\n            <div\n                className={classNames('settings-language__language-container', {\n                    'settings-language__language-container--disabled': is_language_changing,\n                })}\n            >\n                {allowed_languages.map(lang => (\n                    <LanguageLink\n                        key={lang}\n                        is_clickable\n                        lang={lang}\n                        toggleModal={() => {\n                            toggleDrawer();\n                            setMobileLanguageMenuOpen(false);\n                        }}\n                    />\n                ))}\n            </div>\n        </MobileDrawer.SubMenu>\n    );\n});\n\nexport default MobileLanguageMenu;\n","import React from 'react';\nimport { useHistory, useLocation } from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport { useRemoteConfig } from '@deriv/api';\nimport { Div100vhContainer, Icon, MobileDrawer, ToggleSwitch } from '@deriv/components';\nimport {\n    useAccountSettingsRedirect,\n    useAccountTransferVisible,\n    useAuthorize,\n    useIsHubRedirectionEnabled,\n    useOauth2,\n    useOnrampVisible,\n    useP2PSettings,\n    usePaymentAgentTransferVisible,\n} from '@deriv/hooks';\nimport { getOSNameWithUAParser, getStaticUrl, routes } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize } from '@deriv/translations';\nimport { Analytics } from '@deriv-com/analytics';\n\nimport LiveChat from 'App/Components/Elements/LiveChat';\nimport WhatsApp from 'App/Components/Elements/WhatsApp';\nimport NetworkStatus from 'App/Components/Layout/Footer';\nimport getRoutesConfig from 'App/Constants/routes-config';\nimport ServerTime from 'App/Containers/server-time.jsx';\n\nimport { MenuTitle, MobileLanguageMenu } from './Components/ToggleMenu';\nimport MenuLink from './menu-link';\nimport PlatformSwitcher from './platform-switcher';\n\nconst ToggleMenuDrawer = observer(({ platform_config }) => {\n    const { common, ui, client, traders_hub, modules } = useStore();\n    const { app_routing_history, current_language } = common;\n    const {\n        disableApp,\n        enableApp,\n        is_mobile,\n        is_mobile_language_menu_open,\n        is_dark_mode_on: is_dark_mode,\n        setDarkMode: toggleTheme,\n        setMobileLanguageMenuOpen,\n        setIsForcedToExitPnv,\n    } = ui;\n    const {\n        account_status,\n        has_wallet,\n        is_authorize,\n        is_logged_in,\n        is_logging_in,\n        is_virtual,\n        logout: logoutClient,\n        setIsLoggingOut,\n        should_allow_authentication,\n        should_allow_poinc_authentication,\n        landing_company_shortcode: active_account_landing_company,\n        is_landing_company_loaded,\n        is_proof_of_ownership_enabled,\n        is_eu,\n        is_passkey_supported,\n        // We should use this computed property instead of the hook, to prevent the hook's data from becoming stale after a WebSocket reconnection during the first login.\n        is_p2p_available,\n    } = client;\n    const { cashier } = modules;\n    const { payment_agent } = cashier;\n    const { is_payment_agent_visible } = payment_agent;\n    const { show_eu_related_content, setTogglePlatformType } = traders_hub;\n    const is_account_transfer_visible = useAccountTransferVisible();\n    const { mobile_redirect_url } = useAccountSettingsRedirect();\n    const { isSuccess } = useAuthorize();\n    const is_onramp_visible = useOnrampVisible();\n    const { data: is_payment_agent_transfer_visible } = usePaymentAgentTransferVisible();\n\n    const { pathname: route } = useLocation();\n\n    const is_trading_hub_category =\n        route === routes.traders_hub || route.startsWith(routes.cashier) || route.startsWith(routes.account);\n\n    const should_show_regulatory_information = is_eu && show_eu_related_content && !is_virtual;\n    const is_traders_hub_route = route === routes.traders_hub;\n\n    const is_wallet_route = route.startsWith(routes.wallets) || route.startsWith(routes.wallets_compare_accounts);\n\n    const { data } = useRemoteConfig(true);\n    const { cs_chat_livechat, cs_chat_whatsapp } = data;\n\n    const [is_open, setIsOpen] = React.useState(false);\n    const [transitionExit, setTransitionExit] = React.useState(false);\n    const [primary_routes_config, setPrimaryRoutesConfig] = React.useState([]);\n    const [is_submenu_expanded, expandSubMenu] = React.useState(false);\n\n    const timeout = React.useRef();\n    const history = useHistory();\n    const {\n        subscribe,\n        rest: { isSubscribed },\n        p2p_settings,\n    } = useP2PSettings();\n\n    const { isHubRedirectionEnabled } = useIsHubRedirectionEnabled();\n\n    React.useEffect(() => {\n        if (isSuccess && !isSubscribed && is_authorize) {\n            subscribe();\n        }\n    }, [isSuccess, p2p_settings, subscribe, isSubscribed, is_authorize]);\n\n    // Cleanup timeout on unmount or route change\n    React.useEffect(() => {\n        return () => {\n            if (timeout.current) {\n                clearTimeout(timeout.current);\n                setTransitionExit(false);\n                setIsOpen(false);\n            }\n        };\n    }, [route]);\n\n    React.useEffect(() => {\n        const processRoutes = () => {\n            const routes_config = getRoutesConfig();\n            let primary_routes = [];\n\n            if (is_trading_hub_category) {\n                primary_routes = has_wallet ? [routes.reports, routes.account] : [routes.account, routes.cashier];\n            } else {\n                primary_routes = has_wallet\n                    ? [routes.reports, routes.account]\n                    : [routes.reports, routes.account, routes.cashier];\n            }\n            setPrimaryRoutesConfig(getFilteredRoutesConfig(routes_config, primary_routes));\n        };\n\n        if (account_status || should_allow_authentication) {\n            processRoutes();\n        }\n\n        return () => clearTimeout(timeout.current);\n    }, [\n        account_status,\n        should_allow_authentication,\n        has_wallet,\n        is_trading_hub_category,\n        is_mobile,\n        is_passkey_supported,\n        is_p2p_available,\n    ]);\n\n    const toggleDrawer = React.useCallback(() => {\n        if (is_mobile_language_menu_open) setMobileLanguageMenuOpen(false);\n        if (!is_open) setIsOpen(!is_open);\n        else {\n            setTransitionExit(true);\n            timeout.current = setTimeout(() => {\n                setIsOpen(false);\n                setTransitionExit(false);\n            }, 400);\n        }\n        expandSubMenu(false);\n    }, [expandSubMenu, is_open, is_mobile_language_menu_open, setMobileLanguageMenuOpen]);\n\n    const handleLogout = React.useCallback(async () => {\n        setIsLoggingOut(true);\n        toggleDrawer();\n        if (window.location.pathname.startsWith(routes.phone_verification)) {\n            setIsForcedToExitPnv(true);\n            // Add a small delay to ensure state is updated before navigation because adding await doesn't work here\n            await new Promise(resolve => setTimeout(resolve, 0));\n        }\n        history.push(routes.traders_hub);\n        await logoutClient();\n    }, [history, logoutClient, toggleDrawer]);\n\n    const { oAuthLogout } = useOauth2({ handleLogout });\n\n    const passkeysMenuOpenActionEventTrack = React.useCallback(() => {\n        Analytics.trackEvent('ce_passkey_account_settings_form', {\n            action: 'open',\n            form_name: 'ce_passkey_account_settings_form',\n            operating_system: getOSNameWithUAParser(),\n        });\n    }, []);\n\n    const getFilteredRoutesConfig = (all_routes_config, routes_to_filter) => {\n        const subroutes_config = all_routes_config.flatMap(i => i.routes || []);\n\n        return routes_to_filter\n            .map(path => all_routes_config.find(r => r.path === path) || subroutes_config.find(r => r.path === path))\n            .filter(route => route);\n    };\n\n    const getRoutesWithSubMenu = (route_config, idx) => {\n        const has_access = route_config.is_authenticated ? is_logged_in : true;\n        if (!has_access) return null;\n\n        if (route_config.path === routes.account && mobile_redirect_url !== routes.account) {\n            return (\n                <MobileDrawer.Item key={idx}>\n                    <MenuLink\n                        link_to={mobile_redirect_url}\n                        icon={route_config.icon_component}\n                        text={route_config.getTitle()}\n                        onClickLink={toggleDrawer}\n                    />\n                </MobileDrawer.Item>\n            );\n        }\n\n        if (!route_config.routes) {\n            return (\n                <MobileDrawer.Item key={idx}>\n                    <MenuLink\n                        link_to={route_config.path}\n                        icon={route_config.icon_component}\n                        text={route_config.getTitle()}\n                        onClickLink={toggleDrawer}\n                    />\n                </MobileDrawer.Item>\n            );\n        }\n\n        const has_subroutes = route_config.routes.some(route => route.subroutes);\n        const should_hide_passkeys_route = !is_mobile || !is_passkey_supported;\n\n        const disableRoute = route_path => {\n            if (/financial-assessment/.test(route_path)) {\n                return is_virtual;\n            } else if (/trading-assessment/.test(route_path)) {\n                return is_virtual || active_account_landing_company !== 'maltainvest';\n            } else if (/proof-of-address/.test(route_path) || /proof-of-identity/.test(route_path)) {\n                return !should_allow_authentication;\n            } else if (/proof-of-income/.test(route_path)) {\n                return !should_allow_poinc_authentication;\n            } else if (/proof-of-ownership/.test(route_path)) {\n                return is_virtual || !is_proof_of_ownership_enabled;\n            }\n            return false;\n        };\n\n        const hideRoute = route_path => {\n            if (/passkeys/.test(route_path)) {\n                return should_hide_passkeys_route;\n            } else if (/languages/.test(route_path)) {\n                return has_wallet;\n            }\n            return false;\n        };\n\n        return (\n            <MobileDrawer.SubMenu\n                key={idx}\n                has_subheader\n                submenu_icon={route_config.icon_component}\n                submenu_title={route_config.getTitle()}\n                submenu_suffix_icon='IcChevronRight'\n                onToggle={expandSubMenu}\n                route_config_path={route_config.path}\n            >\n                {!has_subroutes &&\n                    route_config.routes.map((route, index) => {\n                        if (\n                            !route.is_invisible &&\n                            (route.path !== routes.cashier_pa || is_payment_agent_visible) &&\n                            (route.path !== routes.cashier_pa_transfer || is_payment_agent_transfer_visible) &&\n                            (route.path !== routes.cashier_p2p || is_p2p_available) &&\n                            (route.path !== routes.cashier_onramp || is_onramp_visible) &&\n                            (route.path !== routes.cashier_acc_transfer || is_account_transfer_visible)\n                        ) {\n                            return (\n                                <MobileDrawer.Item key={index}>\n                                    <MenuLink\n                                        link_to={route.path}\n                                        icon={route.icon_component}\n                                        text={route.getTitle()}\n                                        onClickLink={toggleDrawer}\n                                    />\n                                </MobileDrawer.Item>\n                            );\n                        }\n                        return undefined;\n                    })}\n                {has_subroutes &&\n                    route_config.routes.map((route, index) => {\n                        return route.subroutes ? (\n                            <MobileDrawer.SubMenuSection\n                                key={index}\n                                section_icon={route.icon}\n                                section_title={route.getTitle()}\n                            >\n                                {route.subroutes.map((subroute, subindex) => (\n                                    <MenuLink\n                                        key={subindex}\n                                        is_disabled={disableRoute(subroute.path) || subroute.is_disabled}\n                                        link_to={subroute.path}\n                                        text={subroute.getTitle()}\n                                        onClickLink={() => {\n                                            toggleDrawer();\n                                            if (subroute.path === routes.passkeys) {\n                                                passkeysMenuOpenActionEventTrack();\n                                            }\n                                        }}\n                                        is_hidden={hideRoute(subroute.path)}\n                                    />\n                                ))}\n                            </MobileDrawer.SubMenuSection>\n                        ) : (\n                            <MobileDrawer.Item key={index}>\n                                <MenuLink\n                                    link_to={route.path}\n                                    icon={route.icon_component}\n                                    text={route.getTitle()}\n                                    onClickLink={toggleDrawer}\n                                />\n                            </MobileDrawer.Item>\n                        );\n                    })}\n            </MobileDrawer.SubMenu>\n        );\n    };\n\n    const HelpCentreRoute = has_border_bottom => {\n        return (\n            <MobileDrawer.Item className={classNames({ 'header__menu-mobile-theme': has_border_bottom })}>\n                <MenuLink\n                    link_to={getStaticUrl('/help-centre')}\n                    icon='IcHelpCentre'\n                    text={localize('Help centre')}\n                    onClickLink={toggleDrawer}\n                />\n            </MobileDrawer.Item>\n        );\n    };\n\n    const handleTradershubRedirect = () => {\n        if (isHubRedirectionEnabled && has_wallet) {\n            const PRODUCTION_REDIRECT_URL = 'https://hub.deriv.com/tradershub';\n            const STAGING_REDIRECT_URL = 'https://staging-hub.deriv.com/tradershub';\n            const redirectUrl = process.env.NODE_ENV === 'production' ? PRODUCTION_REDIRECT_URL : STAGING_REDIRECT_URL;\n\n            const url_query_string = window.location.search;\n            const url_params = new URLSearchParams(url_query_string);\n            const account_currency = url_params.get('account') || window.sessionStorage.getItem('account');\n\n            return `${redirectUrl}/redirect?action=redirect_to&redirect_to=home${account_currency ? `&account=${account_currency}` : ''}`;\n        }\n        return routes.traders_hub;\n    };\n\n    return (\n        <React.Fragment>\n            <a id='dt_mobile_drawer_toggle' onClick={toggleDrawer} className='header__mobile-drawer-toggle'>\n                <Icon icon='IcHamburger' width='16px' height='16px' className='header__mobile-drawer-icon' />\n            </a>\n            <MobileDrawer\n                alignment='left'\n                icon_class='header__menu-toggle'\n                is_open={is_open}\n                transitionExit={transitionExit}\n                toggle={toggleDrawer}\n                id='dt_mobile_drawer'\n                enableApp={enableApp}\n                disableApp={disableApp}\n                title={<MenuTitle />}\n                height='100vh'\n                width='295px'\n                className='pre-appstore'\n            >\n                <Div100vhContainer height_offset='40px'>\n                    <div className='header__menu-mobile-body-wrapper'>\n                        <React.Fragment>\n                            {!(is_traders_hub_route || is_wallet_route) && (\n                                <MobileDrawer.SubHeader\n                                    className={classNames({\n                                        'dc-mobile-drawer__subheader--hidden': is_submenu_expanded,\n                                    })}\n                                >\n                                    <PlatformSwitcher\n                                        app_routing_history={app_routing_history}\n                                        is_mobile\n                                        is_landing_company_loaded={is_landing_company_loaded}\n                                        is_logged_in={is_logged_in}\n                                        is_logging_in={is_logging_in}\n                                        platform_config={platform_config}\n                                        toggleDrawer={toggleDrawer}\n                                        current_language={current_language}\n                                        setTogglePlatformType={setTogglePlatformType}\n                                    />\n                                </MobileDrawer.SubHeader>\n                            )}\n\n                            <MobileDrawer.Body className={is_traders_hub_route || is_wallet_route ? 'no-padding' : ''}>\n                                <div className='header__menu-mobile-platform-switcher' id='mobile_platform_switcher' />\n                                <MobileDrawer.Item>\n                                    <MenuLink\n                                        link_to={getStaticUrl('/')}\n                                        icon='IcDerivShortLogo'\n                                        text='Deriv.com'\n                                        onClickLink={toggleDrawer}\n                                    />\n                                </MobileDrawer.Item>\n                                <MobileDrawer.Item>\n                                    <MenuLink\n                                        link_to={handleTradershubRedirect()}\n                                        icon={'IcAppstoreTradersHubHome'}\n                                        text={localize(\"Trader's Hub\")}\n                                        onClickLink={toggleDrawer}\n                                        is_active={route === routes.traders_hub}\n                                    />\n                                </MobileDrawer.Item>\n                                {route !== routes.traders_hub && (\n                                    <MobileDrawer.Item>\n                                        <MenuLink\n                                            link_to={routes.trade}\n                                            icon='IcTrade'\n                                            text={localize('Trade')}\n                                            onClickLink={toggleDrawer}\n                                            is_active={route === routes.trade}\n                                        />\n                                    </MobileDrawer.Item>\n                                )}\n                                {primary_routes_config.map((route_config, idx) =>\n                                    getRoutesWithSubMenu(route_config, idx)\n                                )}\n                                {!has_wallet && (\n                                    <MobileDrawer.Item\n                                        className='header__menu-mobile-theme'\n                                        onClick={e => {\n                                            e.preventDefault();\n                                            toggleTheme(!is_dark_mode);\n                                        }}\n                                    >\n                                        <div className={classNames('header__menu-mobile-link')}>\n                                            <Icon className='header__menu-mobile-link-icon' icon={'IcTheme'} />\n                                            <span className='header__menu-mobile-link-text'>\n                                                {localize('Dark theme')}\n                                            </span>\n                                            <ToggleSwitch\n                                                id='dt_mobile_drawer_theme_toggler'\n                                                handleToggle={() => toggleTheme(!is_dark_mode)}\n                                                is_enabled={is_dark_mode}\n                                            />\n                                        </div>\n                                    </MobileDrawer.Item>\n                                )}\n                                {HelpCentreRoute()}\n                                {is_logged_in ? (\n                                    <React.Fragment>\n                                        <MobileDrawer.Item\n                                            className={\n                                                should_show_regulatory_information\n                                                    ? ''\n                                                    : 'header__menu-mobile-theme--trader-hub'\n                                            }\n                                        >\n                                            <MenuLink\n                                                link_to={getStaticUrl('/responsible')}\n                                                icon='IcVerification'\n                                                text={localize('Responsible trading')}\n                                                onClickLink={toggleDrawer}\n                                            />\n                                        </MobileDrawer.Item>\n                                        {should_show_regulatory_information && (\n                                            <MobileDrawer.Item className='header__menu-mobile-theme--trader-hub'>\n                                                <MenuLink\n                                                    link_to={getStaticUrl('/regulatory')}\n                                                    icon='IcRegulatoryInformation'\n                                                    text={localize('Regulatory information')}\n                                                    onClickLink={toggleDrawer}\n                                                />\n                                            </MobileDrawer.Item>\n                                        )}\n                                    </React.Fragment>\n                                ) : (\n                                    <MobileDrawer.Item className='header__menu-mobile-theme--trader-hub'>\n                                        <MenuLink\n                                            link_to={getStaticUrl('/responsible')}\n                                            icon='IcVerification'\n                                            text={localize('Responsible trading')}\n                                            onClickLink={toggleDrawer}\n                                        />\n                                    </MobileDrawer.Item>\n                                )}\n                                {cs_chat_whatsapp && (\n                                    <MobileDrawer.Item className='header__menu-mobile-whatsapp'>\n                                        <WhatsApp onClick={toggleDrawer} />\n                                    </MobileDrawer.Item>\n                                )}\n                                {cs_chat_livechat && (\n                                    <MobileDrawer.Item className='header__menu-mobile-livechat'>\n                                        <LiveChat />\n                                    </MobileDrawer.Item>\n                                )}\n                                {is_logged_in && (\n                                    <MobileDrawer.Item onClick={oAuthLogout} className='dc-mobile-drawer__item'>\n                                        <MenuLink icon='IcLogout' text={localize('Log out')} />\n                                    </MobileDrawer.Item>\n                                )}\n                            </MobileDrawer.Body>\n                            <MobileDrawer.Footer className={is_logged_in ? 'dc-mobile-drawer__footer--servertime' : ''}>\n                                <ServerTime is_mobile />\n                                <NetworkStatus is_mobile />\n                            </MobileDrawer.Footer>\n                            {is_mobile_language_menu_open && (\n                                <MobileLanguageMenu expandSubMenu={expandSubMenu} toggleDrawer={toggleDrawer} />\n                            )}\n                        </React.Fragment>\n                    </div>\n                </Div100vhContainer>\n            </MobileDrawer>\n        </React.Fragment>\n    );\n});\n\nToggleMenuDrawer.displayName = 'ToggleMenuDrawer';\n\nexport default ToggleMenuDrawer;\n","import React from 'react';\nimport { Icon, Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\n\nconst EmptyNotification = () => (\n    <div className='notifications-empty__container'>\n        <div className='notifications-empty'>\n            <Icon\n                data_testid='dt_ic_box_icon'\n                icon='IcBox'\n                className='notifications-empty__icon'\n                size={64}\n                color='secondary'\n            />\n            <div className='notifications-empty__content'>\n                <Text\n                    as='h4'\n                    size='xs'\n                    weight='bold'\n                    align='center'\n                    color='less-prominent'\n                    className='notifications-empty__header'\n                >\n                    <Localize i18n_default_text='No notifications' />\n                </Text>\n                <Text size='xxs' color='less-prominent' align='center'>\n                    <Localize i18n_default_text='You have yet to receive any notifications' />\n                </Text>\n            </div>\n        </div>\n    </div>\n);\n\nexport default EmptyNotification;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { Button, Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport { observer, useStore } from '@deriv/stores';\n\ntype TNotificationsClearAllFooter = {\n    clearNotifications: () => void;\n};\n\nconst NotificationsClearAllFooter = observer(({ clearNotifications }: TNotificationsClearAllFooter) => {\n    const { notifications, ui } = useStore();\n    const { is_notifications_empty } = notifications;\n    const { is_mobile } = ui;\n\n    return (\n        <React.Fragment>\n            <div className='notifications-dialog__separator' />\n            <div\n                data-testid='dt_clear_all_footer_button'\n                className={classNames('notifications-dialog__footer', {\n                    'notifications-dialog__content--empty': is_notifications_empty,\n                    'notifications-dialog__content--sticky': is_mobile,\n                })}\n            >\n                <Button\n                    className={classNames('dc-btn--secondary', 'notifications-dialog__clear')}\n                    disabled={is_notifications_empty}\n                    onClick={clearNotifications}\n                >\n                    <Text size='xxs' color='prominent' weight='bold'>\n                        <Localize i18n_default_text='Clear All' />\n                    </Text>\n                </Button>\n            </div>\n        </React.Fragment>\n    );\n});\n\nexport default NotificationsClearAllFooter;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Button, Icon, Text } from '@deriv/components';\nimport { isEmptyObject, toTitleCase, TRoute } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { Analytics } from '@deriv-com/analytics';\nimport { BinaryLink } from 'App/Components/Routes';\nimport { useHistory } from 'react-router-dom';\nimport EmptyNotification from 'App/Components/Elements/Notifications/empty-notification';\n\ntype TActionProps = ReturnType<typeof useStore>['notifications']['notifications'][0]['action'];\ntype TNotificationMessage = ReturnType<typeof useStore>['notifications']['notifications'][0];\n\nconst NotificationsList = observer(() => {\n    const { notifications } = useStore();\n    const { notifications: notifications_array, toggleNotificationsModal } = notifications;\n    const history = useHistory();\n\n    const getNotificationItemIcon = (item: TNotificationMessage) => {\n        const { type } = item;\n        if (['contract_sold', 'info', 'news', 'promotions'].includes(type)) {\n            return 'IcAlertInfo';\n        } else if (type === 'p2p_completed_order') {\n            return 'IcAlertAnnounce';\n        }\n        return `IcAlert${toTitleCase(type)}`;\n    };\n\n    const getButtonSettings = (item: TNotificationMessage): TActionProps | undefined => {\n        const object_key = ['action', 'secondary_btn', 'cta_btn', 'primary_btn'].find(\n            obj_key => !isEmptyObject(item[obj_key as keyof TNotificationMessage])\n        );\n        switch (object_key) {\n            case 'primary_btn':\n                return item.primary_btn;\n            case 'cta_btn':\n                return item.cta_btn;\n            case 'secondary_btn':\n                return item.secondary_btn;\n            case 'action':\n                return item.action;\n            default:\n                return undefined;\n        }\n    };\n\n    const onActionTrackEvent = (key: string) => {\n        Analytics.trackEvent('ce_notification_form', {\n            action: 'click_cta',\n            form_name: 'ce_notification_form',\n            notification_key: key,\n        });\n    };\n    const filtered_notifications = notifications_array.filter(item => !item.only_toast_message);\n    return (\n        <React.Fragment>\n            {filtered_notifications.length > 0 ? (\n                filtered_notifications.map(item => (\n                    <div className='notifications-item' key={item.key}>\n                        <Text as='h2' className='notifications-item__title' weight='bold' size='xs' color='prominent'>\n                            {item.type && (\n                                <Icon\n                                    icon={getNotificationItemIcon(item)}\n                                    className={classNames('notifications-item__title-icon', {\n                                        [`notifications-item__title-icon--${item.type}`]: item.type,\n                                    })}\n                                />\n                            )}\n                            {item.header}\n                        </Text>\n                        <div className='notifications-item__message'>{item.message}</div>\n                        <div className='notifications-item__action'>\n                            {!!getButtonSettings(item) && (\n                                <React.Fragment>\n                                    {getButtonSettings(item)?.route && !getButtonSettings(item)?.onClick ? (\n                                        <BinaryLink\n                                            onClick={() => {\n                                                const buttonSettings = getButtonSettings(item);\n                                                if (buttonSettings?.onClick) {\n                                                    buttonSettings.onClick();\n                                                }\n                                                toggleNotificationsModal();\n                                                onActionTrackEvent(item.key);\n                                            }}\n                                            active_class='notifications-item'\n                                            className={classNames(\n                                                'dc-btn',\n                                                'dc-btn--secondary',\n                                                'notifications-item__cta-button'\n                                            )}\n                                            to={getButtonSettings(item)?.route}\n                                        >\n                                            <Text weight='bold' size='xxs'>\n                                                {getButtonSettings(item)?.text}\n                                            </Text>\n                                        </BinaryLink>\n                                    ) : (\n                                        <Button\n                                            className={classNames(\n                                                'dc-btn--secondary',\n                                                'notifications-item__cta-button'\n                                            )}\n                                            onClick={() => {\n                                                getButtonSettings(item)?.onClick();\n                                                onActionTrackEvent(item.key);\n                                                if (getButtonSettings(item)?.route) {\n                                                    history.push(getButtonSettings(item)?.route as string);\n                                                }\n                                            }}\n                                        >\n                                            <Text weight='bold' size='xxs'>\n                                                {getButtonSettings(item)?.text}\n                                            </Text>\n                                        </Button>\n                                    )}\n                                </React.Fragment>\n                            )}\n                        </div>\n                    </div>\n                ))\n            ) : (\n                <EmptyNotification />\n            )}\n        </React.Fragment>\n    );\n});\n\nexport default NotificationsList;\n","import classNames from 'classnames';\nimport React, { LegacyRef } from 'react';\nimport { Text, ThemedScrollbars } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport { Localize } from '@deriv/translations';\nimport EmptyNotification from 'App/Components/Elements/Notifications/empty-notification';\nimport NotificationsClearAllFooter from './notifications-clear-all-footer';\nimport NotificationsList from './notifications-list';\n\ntype TNotificationListWrapper = { clearNotifications: () => void };\n\nconst NotificationListWrapperForwardRef = React.forwardRef(\n    ({ clearNotifications }: TNotificationListWrapper, ref: LegacyRef<HTMLDivElement> | undefined) => {\n        const { notifications, ui } = useStore();\n        const { is_notifications_empty } = notifications;\n        const { is_mobile } = ui;\n\n        return (\n            <div data-testid='dt_notifications_list_wrapper' className='notifications-dialog' ref={ref}>\n                <div className='notifications-dialog__header'>\n                    <Text\n                        as='h2'\n                        className='notifications-dialog__header-text'\n                        weight='bold'\n                        color='prominent'\n                        styles={{\n                            lineHeight: '1.6rem',\n                        }}\n                    >\n                        <Localize i18n_default_text='Notifications' />\n                    </Text>\n                </div>\n                <div\n                    className={classNames('notifications-dialog__content', {\n                        'notifications-dialog__content--empty': is_notifications_empty,\n                    })}\n                >\n                    <ThemedScrollbars is_bypassed={is_mobile || is_notifications_empty}>\n                        {is_notifications_empty ? <EmptyNotification /> : <NotificationsList />}\n                    </ThemedScrollbars>\n                </div>\n                <NotificationsClearAllFooter clearNotifications={clearNotifications} />\n            </div>\n        );\n    }\n);\nNotificationListWrapperForwardRef.displayName = 'NotificationListWrapper';\n\nconst NotificationListWrapper = observer(NotificationListWrapperForwardRef);\n\nexport default NotificationListWrapper;\n","import NotificationsDialog from './notifications-dialog';\n\nexport default NotificationsDialog;\n","import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\nimport { MobileDialog, useOnClickOutside } from '@deriv/components';\nimport { Analytics } from '@deriv-com/analytics';\nimport { LocalStore } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { Localize } from '@deriv/translations';\nimport { useDevice } from '@deriv-com/ui';\nimport NotificationListWrapper from './notification-list-wrapper';\n\nconst NotificationsDialog = observer(() => {\n    const { client, notifications } = useStore();\n    const { loginid } = client;\n    const {\n        is_notifications_visible,\n        notifications: notifications_array,\n        removeNotifications,\n        removeNotificationMessage,\n        removeNotificationMessageByKey,\n        toggleNotificationsModal,\n    } = notifications;\n\n    const wrapper_ref = React.useRef<HTMLDivElement>(null);\n    const { isMobile } = useDevice();\n\n    const handleClickOutside = (event: MouseEvent) => {\n        const notifications_toggle_btn = !(event?.target as Element)?.classList.contains(\n            'notifications-toggle__icon-wrapper'\n        );\n        if (\n            !wrapper_ref?.current?.contains(event.target as Node) &&\n            is_notifications_visible &&\n            notifications_toggle_btn\n        ) {\n            toggleNotificationsModal();\n        }\n    };\n\n    const clearNotifications = () => {\n        const p2p_settings = LocalStore.getObject('p2p_settings');\n        if (loginid && p2p_settings[loginid]) {\n            p2p_settings[loginid].is_notifications_visible = false;\n        }\n        LocalStore.setObject('p2p_settings', p2p_settings);\n\n        Analytics.trackEvent('ce_notification_form', {\n            action: 'clear_all',\n            form_name: 'ce_notification_form',\n            notification_num: notifications_array.length,\n        });\n\n        notifications_array.forEach(({ key, should_show_again }) => {\n            removeNotificationMessageByKey({ key });\n            removeNotificationMessage({\n                key,\n                should_show_again,\n            });\n            removeNotifications(true);\n        });\n    };\n\n    useOnClickOutside(wrapper_ref, handleClickOutside);\n\n    if (isMobile) {\n        return (\n            <MobileDialog\n                portal_element_id='modal_root'\n                title={<Localize i18n_default_text='Notifications' />}\n                wrapper_classname='notifications-mobile-dialog'\n                visible={is_notifications_visible}\n                onClose={toggleNotificationsModal}\n            >\n                <NotificationListWrapper clearNotifications={clearNotifications} ref={wrapper_ref} />\n            </MobileDialog>\n        );\n    }\n\n    return (\n        <CSSTransition\n            in={is_notifications_visible}\n            classNames={{\n                enter: 'notifications-dialog--enter',\n                enterDone: 'notifications-dialog--enter-done',\n                exit: 'notifications-dialog--exit',\n            }}\n            timeout={150}\n            unmountOnExit\n        >\n            <NotificationListWrapper clearNotifications={clearNotifications} ref={wrapper_ref} />\n        </CSSTransition>\n    );\n});\n\nexport default NotificationsDialog;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Counter, Icon, Popover } from '@deriv/components';\nimport NotificationsDialog from 'App/Containers/NotificationsDialog';\nimport 'Sass/app/modules/notifications-dialog.scss';\nimport { useDevice } from '@deriv-com/ui';\n\nconst ToggleNotificationsDrawer = ({\n    count,\n    is_visible,\n    toggleDialog,\n    tooltip_message,\n    should_disable_pointer_events = false,\n    showPopover = true,\n}) => {\n    const { isMobile } = useDevice();\n    const notifications_toggler_el = (\n        <div\n            className={classNames('notifications-toggle__icon-wrapper', {\n                'notifications-toggle__icon-wrapper--active': is_visible,\n            })}\n            onClick={toggleDialog}\n        >\n            <Icon className='notifications-toggle__icon' icon='IcBell' />\n            {!!count && <Counter count={count} className='notifications-toggle__step' />}\n        </div>\n    );\n\n    if (isMobile) {\n        return (\n            <div\n                className={classNames('notifications-toggle', {\n                    'notifications-toggle--active': is_visible,\n                })}\n            >\n                {notifications_toggler_el}\n                <NotificationsDialog is_visible={is_visible} toggleDialog={toggleDialog} />\n            </div>\n        );\n    }\n\n    return (\n        <div\n            className={classNames('notifications-toggle', {\n                'notifications-toggle--active': is_visible,\n            })}\n        >\n            {showPopover ? (\n                <Popover\n                    classNameBubble='notifications-toggle__tooltip'\n                    alignment='bottom'\n                    message={tooltip_message}\n                    should_disable_pointer_events={should_disable_pointer_events}\n                    zIndex='9999'\n                >\n                    {notifications_toggler_el}\n                </Popover>\n            ) : (\n                notifications_toggler_el\n            )}\n            <NotificationsDialog is_visible={is_visible} toggleDialog={toggleDialog} />\n        </div>\n    );\n};\n\nexport default ToggleNotificationsDrawer;\n","import React from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Icon, Popover } from '@deriv/components';\nimport { routes, isTabletOs } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { Localize } from '@deriv/translations';\n\nconst TradersHubOnboarding = observer(() => {\n    const history = useHistory();\n    const { ui } = useStore();\n    const { is_dark_mode_on, is_mobile, setIsWalletsOnboardingTourGuideVisible } = ui;\n\n    const onClickHandler = () => {\n        setIsWalletsOnboardingTourGuideVisible(true);\n        if (history.location.pathname !== routes.traders_hub) {\n            history.push(routes.traders_hub);\n        }\n    };\n\n    const onboardingIcon = (\n        <Icon\n            data_testid='dt_traders_hub_onboarding_icon'\n            icon={is_dark_mode_on ? 'IcAppstoreTradingHubOnboardingDark' : 'IcAppstoreTradingHubOnboarding'}\n            size={20}\n            onClick={onClickHandler}\n        />\n    );\n\n    return (\n        <div data-testid='dt_traders_hub_onboarding' className='traders-hub-onboarding__toggle'>\n            {isTabletOs ? (\n                onboardingIcon\n            ) : (\n                <Popover\n                    classNameBubble='account-settings-toggle__tooltip'\n                    alignment='bottom'\n                    message={!is_mobile && <Localize i18n_default_text='View tutorial' />}\n                    should_disable_pointer_events\n                    zIndex='9999'\n                >\n                    {onboardingIcon}\n                </Popover>\n            )}\n        </div>\n    );\n});\n\nexport default TradersHubOnboarding;\n","import React from 'react';\nimport { Badge } from '@deriv/components';\nimport { localize } from '@deriv/translations';\n\ntype TWalletBadge = {\n    is_demo: boolean;\n    label?: string;\n};\n\nconst WalletBadge = ({ is_demo, label }: TWalletBadge) => {\n    return is_demo ? (\n        <Badge type='contained' background_color='blue' label={localize('Demo')} custom_color='colored-background' />\n    ) : (\n        <Badge type='bordered' label={label?.toUpperCase() ?? ''} />\n    );\n};\n\nexport default WalletBadge;\n","import React from 'react';\nimport classNames from 'classnames';\nimport { AppLinkedWithWalletIcon, Text } from '@deriv/components';\nimport { formatMoney, getCurrencyDisplayCode } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { useStoreWalletAccountsList } from '@deriv/hooks';\nimport { Localize } from '@deriv/translations';\nimport WalletBadge from 'App/Components/Layout/Header/wallets/wallet-badge';\nimport './account-switcher-wallet-item.scss';\n\ntype TAccountSwitcherWalletItemProps = {\n    account: Exclude<ReturnType<typeof useStoreWalletAccountsList>['data'], undefined>[number];\n    closeAccountsDialog: () => void;\n    show_badge?: boolean;\n};\n\nexport const AccountSwitcherWalletItem = observer(\n    ({ closeAccountsDialog, account, show_badge = false }: TAccountSwitcherWalletItemProps) => {\n        const {\n            currency,\n            dtrade_loginid,\n            dtrade_balance,\n            gradients,\n            icons,\n            is_virtual,\n            loginid,\n            landing_company_name,\n            icon_type,\n        } = account;\n\n        const {\n            ui: { is_dark_mode_on },\n            client: { switchAccount, loginid: active_loginid, is_eu },\n        } = useStore();\n\n        const theme = is_dark_mode_on ? 'dark' : 'light';\n        const app_icon = is_dark_mode_on ? 'IcWalletOptionsDark' : 'IcWalletOptionsLight';\n        const is_dtrade_active = dtrade_loginid === active_loginid;\n\n        const onAccountSwitch = async () => {\n            closeAccountsDialog();\n            if (is_dtrade_active) return;\n            await switchAccount(dtrade_loginid);\n            localStorage.setItem('active_wallet_loginid', loginid);\n            sessionStorage.setItem('active_wallet_loginid', loginid);\n        };\n\n        return (\n            <div\n                className={classNames('acc-switcher-wallet-item__container', {\n                    'acc-switcher-wallet-item__container--active': is_dtrade_active,\n                })}\n                data-testid='account-switcher-wallet-item'\n                onClick={onAccountSwitch}\n                // SonarLint offers to add handler for onKeyDown event if we have onClick event handler\n                role='button'\n                onKeyDown={event => {\n                    if (event.key === 'Enter') {\n                        onAccountSwitch();\n                    }\n                }}\n            >\n                <div>\n                    <AppLinkedWithWalletIcon\n                        app_icon={app_icon}\n                        gradient_class={gradients?.card[theme] ?? ''}\n                        type={icon_type}\n                        wallet_icon={icons?.[theme] ?? ''}\n                        hide_watermark\n                    />\n                </div>\n                <div className='acc-switcher-wallet-item__content'>\n                    <Text size='xxxs'>\n                        {is_eu ? (\n                            <Localize i18n_default_text='Multipliers' />\n                        ) : (\n                            <Localize i18n_default_text='Options' />\n                        )}\n                    </Text>\n                    <Text size='xxxs'>\n                        {is_virtual ? (\n                            <Localize i18n_default_text='Demo Wallet' />\n                        ) : (\n                            <Localize\n                                i18n_default_text='{{currency}} Wallet'\n                                values={{ currency: getCurrencyDisplayCode(currency) }}\n                            />\n                        )}\n                    </Text>\n                    <Text size='xs' weight='bold'>\n                        {`${formatMoney(currency || '', dtrade_balance || 0, true)} ${getCurrencyDisplayCode(\n                            currency\n                        )}`}\n                    </Text>\n                </div>\n                {show_badge && <WalletBadge is_demo={Boolean(is_virtual)} label={landing_company_name} />}\n            </div>\n        );\n    }\n);\n","import React from 'react';\nimport { AccountSwitcherWalletItem } from './account-switcher-wallet-item';\nimport { TStores } from '@deriv/stores/types';\nimport './account-switcher-wallet-list.scss';\n\ntype TAccountSwitcherWalletListProps = {\n    wallets: TStores['client']['wallet_list'];\n    closeAccountsDialog: () => void;\n};\n\nexport const AccountSwitcherWalletList = ({ wallets, closeAccountsDialog }: TAccountSwitcherWalletListProps) => (\n    <div className='account-switcher-wallet-list'>\n        {wallets?.map(account => {\n            if (account.is_dtrader_account_disabled) return null;\n            return (\n                <AccountSwitcherWalletItem\n                    key={account.dtrade_loginid}\n                    account={account}\n                    closeAccountsDialog={closeAccountsDialog}\n                    show_badge={account?.is_virtual}\n                />\n            );\n        })}\n    </div>\n);\n","import React from 'react';\nimport { useHistory } from 'react-router';\nimport { Icon, Text, ThemedScrollbars, useOnClickOutside } from '@deriv/components';\nimport { platforms, routes } from '@deriv/shared';\nimport { observer } from '@deriv/stores';\nimport { Localize } from '@deriv/translations';\nimport { useIsHubRedirectionEnabled, useStoreWalletAccountsList } from '@deriv/hooks';\nimport { AccountSwitcherWalletList } from './account-switcher-wallet-list';\nimport './account-switcher-wallet.scss';\n\ntype TAccountSwitcherWalletProps = {\n    is_visible: boolean;\n    toggle: (value?: boolean) => void;\n};\n\nexport const AccountSwitcherWallet = observer(({ is_visible, toggle }: TAccountSwitcherWalletProps) => {\n    const { data: wallet_list } = useStoreWalletAccountsList();\n    const dtrade_account_wallets = wallet_list?.filter(wallet => wallet.dtrade_loginid);\n\n    const history = useHistory();\n\n    const wrapper_ref = React.useRef<HTMLDivElement>(null);\n    const { isHubRedirectionEnabled } = useIsHubRedirectionEnabled();\n\n    const validateClickOutside = (event: MouseEvent) => {\n        const checkAllParentNodes = (node: HTMLElement): boolean => {\n            if (node?.classList?.contains('acc-info__wallets')) return true;\n            const parent = node?.parentNode as HTMLElement;\n            if (parent) return checkAllParentNodes(parent);\n            return false;\n        };\n\n        return is_visible && !checkAllParentNodes(event.target as HTMLElement);\n    };\n\n    const url_query_string = window.location.search;\n    const url_params = new URLSearchParams(url_query_string);\n    const account_currency = url_params.get('account') || window.sessionStorage.getItem('account');\n\n    const closeAccountsDialog = React.useCallback(() => {\n        toggle(false);\n    }, [toggle]);\n\n    useOnClickOutside(wrapper_ref, closeAccountsDialog, validateClickOutside);\n\n    const handleTradersHubRedirect = async () => {\n        if (isHubRedirectionEnabled) {\n            window.location.assign(\n                `${platforms.tradershub_os.url}/redirect?action=redirect_to&redirect_to=cfds${account_currency ? `&account=${account_currency}` : ''}`\n            );\n            return;\n        }\n        closeAccountsDialog();\n        history.push(routes.traders_hub);\n    };\n\n    return (\n        <div className='account-switcher-wallet' ref={wrapper_ref}>\n            <div className='account-switcher-wallet__header'>\n                <Text as='h4' weight='bold' size='xs'>\n                    <Localize i18n_default_text='Options accounts' />\n                </Text>\n            </div>\n            <ThemedScrollbars height={450}>\n                <AccountSwitcherWalletList wallets={dtrade_account_wallets} closeAccountsDialog={closeAccountsDialog} />\n            </ThemedScrollbars>\n            <button\n                className='account-switcher-wallet__looking-for-cfds'\n                onClick={handleTradersHubRedirect}\n                type='button'\n            >\n                <Text size='xs' line_height='xl'>\n                    <Localize i18n_default_text='Looking for CFDs? Go to Trader’s Hub' />\n                </Text>\n                <Icon\n                    data_testid='dt_go_to_arrow'\n                    icon='IcChevronDownBold'\n                    className='account-switcher-wallet__arrow'\n                />\n            </button>\n        </div>\n    );\n});\n","import React from 'react';\nimport { useHistory } from 'react-router';\nimport { Button, Icon, MobileDialog, Text } from '@deriv/components';\nimport { platforms, routes } from '@deriv/shared';\nimport { Localize } from '@deriv/translations';\nimport { AccountSwitcherWalletList } from './account-switcher-wallet-list';\nimport { useIsHubRedirectionEnabled, useIsRtl, useStoreWalletAccountsList } from '@deriv/hooks';\nimport { observer } from '@deriv/stores';\nimport './account-switcher-wallet-mobile.scss';\n\ntype TAccountSwitcherWalletMobile = {\n    loginid: string;\n    is_visible: boolean;\n    toggle: (value: boolean) => void;\n};\n\nexport const AccountSwitcherWalletMobile = observer(({ is_visible, toggle, loginid }: TAccountSwitcherWalletMobile) => {\n    const history = useHistory();\n    const isRtl = useIsRtl();\n    const { data: wallet_list } = useStoreWalletAccountsList();\n\n    const dtrade_account_wallets = wallet_list?.filter(wallet => wallet.dtrade_loginid);\n    const { isHubRedirectionEnabled } = useIsHubRedirectionEnabled();\n\n    const closeAccountsDialog = React.useCallback(() => {\n        toggle(false);\n    }, [toggle]);\n\n    const handleTradersHubRedirect = () => {\n        const url_query_string = window.location.search;\n        const url_params = new URLSearchParams(url_query_string);\n        const account_currency = url_params.get('account') || window.sessionStorage.getItem('account');\n        if (isHubRedirectionEnabled) {\n            window.location.assign(\n                `${platforms.tradershub_os.url}/redirect?action=redirect_to&redirect_to=cfds${account_currency ? `&account=${account_currency}` : ''}`\n            );\n            return;\n        }\n        closeAccountsDialog();\n        history.push(routes.traders_hub);\n    };\n\n    const handleManageFundsRedirect = () => {\n        closeAccountsDialog();\n        if (isHubRedirectionEnabled) {\n            const PRODUCTION_REDIRECT_URL = 'https://hub.deriv.com/tradershub';\n            const STAGING_REDIRECT_URL = 'https://staging-hub.deriv.com/tradershub';\n            const redirectUrl = process.env.NODE_ENV === 'production' ? PRODUCTION_REDIRECT_URL : STAGING_REDIRECT_URL;\n\n            const url_query_string = window.location.search;\n            const url_params = new URLSearchParams(url_query_string);\n            const account_currency = window.sessionStorage.getItem('account') || url_params.get('account');\n\n            window.location.href = `${redirectUrl}/redirect?action=redirect_to&redirect_to=wallet${account_currency ? `&account=${account_currency}` : ''}`;\n        } else {\n            history.push(routes.wallets_transfer, {\n                toAccountLoginId: loginid,\n                is_from_dtrader: window.location.pathname?.includes('dtrader'),\n            });\n        }\n    };\n\n    const footer = (\n        <React.Fragment>\n            <hr className='account-switcher-wallet-mobile__divider' />\n            <button className='account-switcher-wallet-mobile__footer' onClick={handleTradersHubRedirect} type='button'>\n                <Text weight='normal' size='xs'>\n                    <Localize i18n_default_text='Looking for CFDs? Go to Trader’s Hub' />\n                </Text>\n                <Icon icon={isRtl ? 'IcChevronLeftBold' : 'IcChevronRightBold'} />\n            </button>\n        </React.Fragment>\n    );\n\n    return (\n        <MobileDialog\n            portal_element_id='deriv_app'\n            footer={footer}\n            visible={is_visible}\n            onClose={closeAccountsDialog}\n            has_close_icon\n            has_full_height\n            title={<Localize i18n_default_text='Options accounts' />}\n        >\n            <div className='account-switcher-wallet-mobile'>\n                <AccountSwitcherWalletList wallets={dtrade_account_wallets} closeAccountsDialog={closeAccountsDialog} />\n                <Button\n                    className='account-switcher-wallet-mobile__button'\n                    has_effect\n                    primary\n                    large\n                    onClick={handleManageFundsRedirect}\n                >\n                    <Localize i18n_default_text='Manage funds' />\n                </Button>\n            </div>\n        </MobileDialog>\n    );\n});\n","import React from 'react';\nimport classNames from 'classnames';\nimport { CSSTransition } from 'react-transition-group';\nimport { Icon, WalletIcon, Text, AppLinkedWithWalletIcon } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport { formatMoney, getCurrencyDisplayCode } from '@deriv/shared';\nimport { useStore, observer } from '@deriv/stores';\nimport { useStoreWalletAccountsList, useStoreLinkedWalletsAccounts } from '@deriv/hooks';\nimport { TStores } from '@deriv/stores/types';\nimport { AccountSwitcherWallet, AccountSwitcherWalletMobile } from 'App/Containers/AccountSwitcherWallet';\nimport { AccountsInfoLoader } from '../Components/Preloader';\nimport AccountInfoWrapper from '../account-info-wrapper';\nimport WalletBadge from './wallet-badge';\nimport { useDevice } from '@deriv-com/ui';\n\ntype TAccountInfoWallets = {\n    toggleDialog: () => void;\n    is_dialog_on: boolean;\n};\n\ntype TDropdownArrow = {\n    is_disabled?: boolean;\n};\n\ntype TBalanceLabel = {\n    balance: TStores['client']['accounts'][string]['balance'];\n    currency: TStores['client']['accounts'][string]['currency'];\n    is_virtual: boolean;\n    display_code: string;\n};\n\ntype TInfoIcons = {\n    gradients: Exclude<ReturnType<typeof useStoreWalletAccountsList>['data'], undefined>[number]['gradients'];\n    icons: Exclude<ReturnType<typeof useStoreWalletAccountsList>['data'], undefined>[number]['icons'];\n    icon_type: Exclude<ReturnType<typeof useStoreWalletAccountsList>['data'], undefined>[number]['icon_type'];\n};\n\nconst DropdownArrow = ({ is_disabled = false }: TDropdownArrow) =>\n    is_disabled ? (\n        <Icon data_testid='dt_lock_icon' icon='IcLock' />\n    ) : (\n        <Icon data_testid='dt_select_arrow' icon='IcChevronDownBold' className='acc-info__select-arrow' />\n    );\n\nconst BalanceLabel = ({ balance, currency, is_virtual, display_code }: Partial<TBalanceLabel>) =>\n    typeof balance !== 'undefined' || !currency ? (\n        <div className='acc-info__wallets-account-type-and-balance'>\n            <Text\n                as='p'\n                data-testid='dt_balance'\n                className={classNames('acc-info__balance acc-info__wallets-balance', {\n                    'acc-info__balance--no-currency': !currency && !is_virtual,\n                })}\n            >\n                {!currency ? (\n                    <Localize i18n_default_text='No currency assigned' />\n                ) : (\n                    `${formatMoney(currency, balance ?? 0, true)} ${display_code}`\n                )}\n            </Text>\n        </div>\n    ) : null;\n\nconst MobileInfoIcon = observer(({ gradients, icons, icon_type }: TInfoIcons) => {\n    const {\n        ui: { is_dark_mode_on },\n    } = useStore();\n\n    const theme = is_dark_mode_on ? 'dark' : 'light';\n    const app_icon = is_dark_mode_on ? 'IcWalletOptionsDark' : 'IcWalletOptionsLight';\n\n    return (\n        <div className='acc-info__wallets-container'>\n            <AppLinkedWithWalletIcon\n                app_icon={app_icon}\n                gradient_class={gradients?.card[theme] ?? ''}\n                size='small'\n                type={icon_type}\n                wallet_icon={icons?.[theme] ?? ''}\n                hide_watermark\n            />\n        </div>\n    );\n});\n\nconst DesktopInfoIcons = observer(({ gradients, icons, icon_type }: TInfoIcons) => {\n    const { ui } = useStore();\n    const { is_dark_mode_on } = ui;\n    const theme = is_dark_mode_on ? 'dark' : 'light';\n\n    return (\n        <div className='acc-info__wallets-container'>\n            <Icon\n                icon={is_dark_mode_on ? 'IcWalletOptionsDark' : 'IcWalletOptionsLight'}\n                size={24}\n                data_testid='dt_ic_wallet_options'\n            />\n            <WalletIcon\n                icon={icons?.[theme] ?? ''}\n                type={icon_type}\n                gradient_class={gradients?.card[theme]}\n                size={'small'}\n                has_bg\n                hide_watermark\n            />\n        </div>\n    );\n});\n\nconst AccountInfoWallets = observer(({ is_dialog_on, toggleDialog }: TAccountInfoWallets) => {\n    const { client, ui } = useStore();\n    const { switchAccount, is_logged_in, loginid, accounts } = client;\n    const { account_switcher_disabled_message } = ui;\n    const { data: wallet_list } = useStoreWalletAccountsList();\n    const linked_wallets_accounts = useStoreLinkedWalletsAccounts();\n    const { isDesktop } = useDevice();\n\n    const active_account = accounts?.[loginid ?? ''];\n    const wallet_loginid =\n        sessionStorage.getItem('active_wallet_loginid') || localStorage.getItem('active_wallet_loginid');\n    const active_wallet =\n        wallet_list?.find(wallet => wallet.loginid === wallet_loginid) ??\n        wallet_list?.find(wallet => wallet.loginid === loginid);\n\n    let linked_dtrade_trading_account_loginid = loginid;\n\n    if (active_wallet) {\n        // get 'dtrade' loginid account linked to the current wallet\n        linked_dtrade_trading_account_loginid =\n            sessionStorage.getItem('active_loginid') ||\n            active_wallet.dtrade_loginid ||\n            linked_wallets_accounts.dtrade?.[0]?.loginid;\n\n        // switch to dtrade account\n        if (linked_dtrade_trading_account_loginid && linked_dtrade_trading_account_loginid !== loginid) {\n            switchAccount(linked_dtrade_trading_account_loginid);\n        }\n    }\n\n    const linked_wallet = wallet_list?.find(wallet => wallet.dtrade_loginid === linked_dtrade_trading_account_loginid);\n\n    if (!linked_wallet) return <AccountsInfoLoader is_logged_in={is_logged_in} is_mobile={!isDesktop} speed={3} />;\n\n    const show_badge = linked_wallet.is_virtual;\n\n    return (\n        <div className='acc-info__wrapper'>\n            {isDesktop && <div className='acc-info__separator' />}\n            <AccountInfoWrapper\n                is_mobile={!isDesktop}\n                is_disabled={Boolean(active_account?.is_disabled)}\n                disabled_message={account_switcher_disabled_message}\n            >\n                <div\n                    data-testid='dt_acc_info'\n                    id='dt_core_account-info_acc-info'\n                    className={classNames('acc-info acc-info__wallets', {\n                        'acc-info--show': is_dialog_on,\n                        'acc-info--is-disabled': active_account?.is_disabled,\n                    })}\n                    onClick={active_account?.is_disabled ? undefined : () => toggleDialog()}\n                    // SonarLint offers to add handler for onKeyDown event if we have onClick event handler\n                    onKeyDown={active_account?.is_disabled ? undefined : () => toggleDialog()}\n                >\n                    {isDesktop ? (\n                        <DesktopInfoIcons\n                            gradients={linked_wallet.gradients}\n                            icons={linked_wallet.icons}\n                            icon_type={linked_wallet.icon_type}\n                        />\n                    ) : (\n                        <MobileInfoIcon\n                            gradients={linked_wallet.gradients}\n                            icons={linked_wallet.icons}\n                            icon_type={linked_wallet.icon_type}\n                        />\n                    )}\n                    <BalanceLabel\n                        balance={active_account?.balance}\n                        currency={active_account?.currency}\n                        is_virtual={Boolean(active_account?.is_virtual)}\n                        display_code={getCurrencyDisplayCode(active_account?.currency)}\n                    />\n                    {show_badge && (\n                        <WalletBadge\n                            is_demo={Boolean(linked_wallet?.is_virtual)}\n                            label={linked_wallet?.landing_company_name}\n                        />\n                    )}\n                    <DropdownArrow is_disabled={Boolean(active_account?.is_disabled)} />\n                </div>\n            </AccountInfoWrapper>\n            <div className='acc-info__separator' />\n            {isDesktop ? (\n                <CSSTransition\n                    in={is_dialog_on}\n                    timeout={200}\n                    classNames={{\n                        enter: 'acc-switcher__wrapper--enter',\n                        enterDone: 'acc-switcher__wrapper--enter-done',\n                        exit: 'acc-switcher__wrapper--exit',\n                    }}\n                    unmountOnExit\n                >\n                    <div className='acc-switcher__wrapper acc-switcher__wrapper--wallets'>\n                        <AccountSwitcherWallet is_visible={is_dialog_on} toggle={toggleDialog} />\n                    </div>\n                </CSSTransition>\n            ) : (\n                <AccountSwitcherWalletMobile is_visible={is_dialog_on} toggle={toggleDialog} loginid={loginid} />\n            )}\n        </div>\n    );\n});\n\nexport default AccountInfoWallets;\n","import React from 'react';\nimport { useHistory } from 'react-router';\nimport { routes, isTabletOs } from '@deriv/shared';\nimport { Button, Icon, Popover } from '@deriv/components';\nimport { useIsHubRedirectionEnabled, useAccountSettingsRedirect } from '@deriv/hooks';\nimport { useDevice } from '@deriv-com/ui';\nimport { localize, Localize } from '@deriv/translations';\nimport { observer, useStore } from '@deriv/stores';\nimport { LoginButton } from '../login-button.jsx';\nimport { SignupButton } from '../signup-button.jsx';\nimport ToggleNotifications from '../toggle-notifications.jsx';\nimport TradersHubOnboarding from '../../../../Containers/Layout/header/traders-hub-onboarding';\nimport AccountInfoWallets from './account-info-wallets';\nimport 'Sass/app/_common/components/account-switcher.scss';\n\ntype TUiStore = ReturnType<typeof useStore>['ui'];\n\ntype TAccountActionsWallets = {\n    is_traders_hub_routes: boolean;\n};\n\n// Helper components\nconst AccountSettingsToggle = () => {\n    const { redirect_url } = useAccountSettingsRedirect();\n\n    const accountSettings = (\n        <a className='account-settings-toggle' href={redirect_url}>\n            <Icon icon='IcUserOutline' />\n        </a>\n    );\n\n    if (isTabletOs) return accountSettings;\n\n    return (\n        <Popover\n            classNameBubble='account-settings-toggle__tooltip'\n            alignment='bottom'\n            message={<Localize i18n_default_text='Manage account settings' />}\n            should_disable_pointer_events\n            zIndex='9999'\n        >\n            {accountSettings}\n        </Popover>\n    );\n};\n\nconst NotificationsToggle = ({\n    count,\n    is_visible,\n    toggleDialog,\n    is_mobile = false,\n}: {\n    count?: number;\n    is_visible?: boolean;\n    toggleDialog?: () => void;\n    is_mobile?: boolean;\n}) => (\n    <ToggleNotifications\n        count={count}\n        is_visible={is_visible}\n        toggleDialog={toggleDialog}\n        tooltip_message={is_mobile ? undefined : <Localize i18n_default_text='View notifications' />}\n        should_disable_pointer_events={!is_mobile}\n        showPopover={!is_mobile && !isTabletOs}\n    />\n);\n\nconst CurrencyButton = ({ openRealAccountSignup }: { openRealAccountSignup: TUiStore['openRealAccountSignup'] }) => (\n    <div className='set-currency'>\n        <Button\n            onClick={() => openRealAccountSignup('set_currency')}\n            has_effect\n            type='button'\n            text={localize('Set currency')}\n            primary\n        />\n    </div>\n);\n\nconst ManageFundsButton = ({ onClick }: { onClick: () => void }) => (\n    <Button className='acc-info__button' has_effect text={localize('Manage funds')} onClick={onClick} primary />\n);\n\nconst LoggedOutView = () => (\n    <>\n        <LoginButton className='acc-info__button' />\n        <SignupButton className='acc-info__button' />\n    </>\n);\n\nconst AccountActionsWallets = observer(({ is_traders_hub_routes }: TAccountActionsWallets) => {\n    const { client, ui, notifications } = useStore();\n    const { is_logged_in, accounts, loginid, has_wallet } = client;\n    const { openRealAccountSignup, toggleAccountsDialog, is_accounts_switcher_on } = ui;\n    const { isDesktop } = useDevice();\n    const { isHubRedirectionEnabled } = useIsHubRedirectionEnabled();\n    const { is_notifications_visible, notifications: notificationsArray, toggleNotificationsModal } = notifications;\n\n    const notifications_count = notificationsArray?.length;\n\n    const active_account = accounts?.[loginid ?? ''];\n    const is_virtual = active_account?.is_virtual;\n    const currency = active_account?.currency;\n\n    const isCurrencyButtonVisible = isDesktop && !is_traders_hub_routes && !is_virtual && !currency;\n    const isManageFundsButtonVisible = isDesktop && !is_traders_hub_routes && currency;\n\n    const history = useHistory();\n\n    const handleManageFundsRedirect = () => {\n        if (isHubRedirectionEnabled) {\n            const PRODUCTION_REDIRECT_URL = 'https://hub.deriv.com/tradershub';\n            const STAGING_REDIRECT_URL = 'https://staging-hub.deriv.com/tradershub';\n            const redirectUrl = process.env.NODE_ENV === 'production' ? PRODUCTION_REDIRECT_URL : STAGING_REDIRECT_URL;\n\n            const url_query_string = window.location.search;\n            const url_params = new URLSearchParams(url_query_string);\n            const account_currency = window.sessionStorage.getItem('account') || url_params.get('account');\n\n            window.location.href = `${redirectUrl}/redirect?action=redirect_to&redirect_to=wallet${account_currency ? `&account=${account_currency}` : ''}`;\n        } else {\n            history.push(routes.wallets_transfer as unknown as Parameters<typeof history.push>[0], {\n                toAccountLoginId: loginid,\n                is_from_dtrader: window.location.pathname?.includes('dtrader'),\n            });\n        }\n    };\n\n    if (!is_logged_in) {\n        return <LoggedOutView />;\n    }\n\n    return (\n        <>\n            {isCurrencyButtonVisible && <CurrencyButton openRealAccountSignup={openRealAccountSignup} />}\n            {isManageFundsButtonVisible && <ManageFundsButton onClick={handleManageFundsRedirect} />}\n            {!is_traders_hub_routes && (\n                <AccountInfoWallets is_dialog_on={is_accounts_switcher_on} toggleDialog={toggleAccountsDialog} />\n            )}\n            {is_traders_hub_routes && <TradersHubOnboarding />}\n            <NotificationsToggle\n                count={notifications_count}\n                is_visible={is_notifications_visible}\n                toggleDialog={toggleNotificationsModal}\n                is_mobile={!isDesktop}\n            />\n            {isDesktop && <AccountSettingsToggle />}\n        </>\n    );\n});\n\nexport { AccountActionsWallets };\n","import { getPlatformSettings, routes } from '@deriv/shared';\nimport { localize } from '@deriv/translations';\n\ntype TPlatformConfig = {\n    description: () => string;\n    href?: string;\n    icon: string;\n    link_to?: string;\n    name: string;\n    title: () => string;\n};\n\nconst platform_config: TPlatformConfig[] = [\n    {\n        icon: getPlatformSettings('trader').icon,\n        title: () => getPlatformSettings('trader').name,\n        name: getPlatformSettings('trader').name,\n        description: () => localize('A whole new trading experience on a powerful yet easy to use platform.'),\n        link_to: routes.trade,\n    },\n    {\n        icon: getPlatformSettings('dbot').icon,\n        title: () => getPlatformSettings('dbot').name,\n        name: getPlatformSettings('dbot').name,\n        description: () => localize('Automated trading at your fingertips. No coding needed.'),\n        href: routes.bot,\n    },\n    {\n        icon: getPlatformSettings('smarttrader').icon,\n        title: () => getPlatformSettings('smarttrader').name,\n        name: getPlatformSettings('smarttrader').name,\n        description: () => localize('Trade the world’s markets with our popular user-friendly platform.'),\n        href: routes.smarttrader,\n    },\n];\n\nexport default platform_config;\n","import React from \"react\";\nexport default ({\n  styles = {},\n  ...props\n}) => <svg xmlns=\"http://www.w3.org/2000/svg\" width=\"24\" height=\"24\" fill=\"none\" {...props}><path d=\"M0 9.33A9.33 9.33 0 019.33 0h5.34A9.33 9.33 0 0124 9.33v5.34A9.33 9.33 0 0114.67 24H9.33A9.33 9.33 0 010 14.67V9.33z\" fill=\"#FF444F\" /><path d=\"M15.06 4.97l-.78 4.4H11.6c-2.51 0-4.9 2.02-5.34 4.53l-.19 1.06c-.44 2.51 1.23 4.54 3.74 4.54h2.24a4.11 4.11 0 003.89-3.3L18 4.5l-2.94.47zm-1.91 10.81c-.1.57-.6 1.03-1.17 1.03h-1.36c-1.13 0-1.88-.92-1.69-2.05l.12-.66a2.55 2.55 0 012.4-2.04h2.36l-.66 3.72z\" fill=\"#fff\" /></svg>;","import React from 'react';\nimport { StaticUrl } from '@deriv/components';\nimport DerivBrandShortLogo from 'Assets/SvgComponents/header/deriv-logo-short.svg';\n\nconst DerivShortLogo = () => {\n    return (\n        <div className='header__menu-left-logo'>\n            <StaticUrl href='/'>\n                <DerivBrandShortLogo />\n            </StaticUrl>\n        </div>\n    );\n};\n\nexport default DerivShortLogo;\n","import React from 'react';\nimport { useHistory, useLocation } from 'react-router';\nimport classNames from 'classnames';\nimport { Icon, Text } from '@deriv/components';\nimport { routes } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { Localize } from '@deriv/translations';\nimport { useIsHubRedirectionEnabled } from '@deriv/hooks';\n\nconst TradersHubHomeButton = observer(() => {\n    const { client } = useStore();\n    const history = useHistory();\n    const location = useLocation();\n    const { isHubRedirectionEnabled } = useIsHubRedirectionEnabled();\n    const { has_wallet } = client;\n    const { pathname } = location;\n\n    const handleTradershubRedirect = () => {\n        if (isHubRedirectionEnabled && has_wallet) {\n            const PRODUCTION_REDIRECT_URL = 'https://hub.deriv.com/tradershub';\n            const STAGING_REDIRECT_URL = 'https://staging-hub.deriv.com/tradershub';\n            const redirectUrl = process.env.NODE_ENV === 'production' ? PRODUCTION_REDIRECT_URL : STAGING_REDIRECT_URL;\n\n            const url_query_string = window.location.search;\n            const url_params = new URLSearchParams(url_query_string);\n            const account_currency = url_params.get('account') || window.sessionStorage.getItem('account');\n\n            window.location.href = `${redirectUrl}/redirect?action=redirect_to&redirect_to=home${account_currency ? `&account=${account_currency}` : ''}`;\n        } else {\n            history.push(routes.traders_hub);\n        }\n    };\n\n    return (\n        <div\n            data-testid='dt_traders_hub_home_button'\n            className={classNames('traders-hub-header__tradershub', {\n                'traders-hub-header__tradershub--active':\n                    pathname === routes.traders_hub || pathname === routes.traders_hub_v2,\n            })}\n            onClick={handleTradershubRedirect}\n        >\n            <div className='traders-hub-header__tradershub--home-logo'>\n                <Icon icon={'IcAppstoreTradersHubHome'} size={16} />\n            </div>\n            <Text className='traders-hub-header__tradershub--text'>\n                <Localize i18n_default_text=\"Trader's Hub\" />\n            </Text>\n        </div>\n    );\n});\n\nexport default TradersHubHomeButton;\n","import { localize } from '@deriv/translations';\n\n/**\n * Experian result is defined by client's information validity.\n * Defines the possible types of actions needed to take on experian result response.\n *\n * Possible values are:\n *   - Success: Client can trade\n *   - Warn: POI/POA Validity partially failed, trade in demo possible\n *   - Danger: POI/POA validation failed. Trade is locked until this resolved.\n *   - Pending: POI/POA is in pending state.\n * @enum {EXPERIAN}\n */\nexport const EXPERIAN = {\n    SUCCESS: 1,\n    WARN: 0,\n    DANGER: -1,\n    PENDING: -2,\n};\n\n/**\n * Return account title for the given landing company\n *\n * @param {string} landing_company_shortcode\n * @return {string} localized title\n */\nexport const getAccountTitle = landing_company_shortcode => {\n    switch (landing_company_shortcode) {\n        case 'svg':\n            return localize('Options & Multipliers');\n        case 'maltainvest':\n            return localize('Multipliers');\n        default:\n            return localize('Deriv');\n    }\n};\n\n/**\n * @param {string} landing_company_shortcode\n *\n * @return {EXPERIAN.WARN|EXPERIAN.SUCCESS|EXPERIAN.DANGER}\n */\nexport const getExperianResult = status => {\n    const { landing_company_shortcode = '' } = status;\n\n    if (landing_company_shortcode === 'svg') return EXPERIAN.SUCCESS;\n\n    return EXPERIAN.SUCCESS;\n};\n\nexport const screen_height_sm_threshold = 930;\n","const currenciesPaymentAgentAvailability = (legal_allowed_currencies, all_payment_agent_list, account_list) => {\n    const result = [];\n    legal_allowed_currencies.forEach(currency => {\n        result.push({\n            ...currency,\n            has_payment_agent: !!all_payment_agent_list?.filter(agent => agent.currencies === currency.value).length,\n            is_disabled: account_list?.some(account => account.title === currency.value && account.is_disabled),\n        });\n    });\n    return result;\n};\n\nconst currenciesOnRampAvailability = legal_allowed_currencies => {\n    return legal_allowed_currencies.filter(({ platform }) => platform.ramp.length > 0);\n};\n\nexport default {\n    currenciesOnRampAvailability,\n    currenciesPaymentAgentAvailability,\n};\n","import React from 'react';\nimport { Text } from '@deriv/components';\n\nconst AddCurrencyNote = ({ message }) => {\n    return (\n        <div className='add-currency__note-wrapper'>\n            <Text as='p' color='prominent' align='center' size='xxs' className='add-currency__note'>\n                {message}\n            </Text>\n        </div>\n    );\n};\n\nexport default AddCurrencyNote;\n","import { Field, Formik } from 'formik';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { useDevice } from '@deriv-com/ui';\nimport { FormSubmitButton, Icon, Text, ThemedScrollbars } from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\nimport { observer, useStore } from '@deriv/stores';\nimport { isMobile, reorderCurrencies, routes, website_name } from '@deriv/shared';\nimport { CurrencyRadioButtonGroup, CurrencyRadioButton } from '@deriv/account';\nimport CurrencyProvider from './choose-currency';\nimport AddCurrencyNote from './add-currency-note';\nimport './currency-selector.scss';\n\nconst messages = () => [\n    <Localize key={0} i18n_default_text='Choose your preferred cryptocurrency' />,\n    <Localize key={1} i18n_default_text='You can open an account for each cryptocurrency.' />,\n    <Localize key={2} i18n_default_text='Add a real account' />,\n    <Localize key={3} i18n_default_text='Choose a currency you would like to trade with.' />,\n    <Localize key={4} i18n_default_text='Choose a currency' />,\n];\n\nconst Headers = ({ heading, subheading }) => (\n    <React.Fragment>\n        <Text as='h1' color='prominent' align='center' weight='bold' className='add-crypto-currency__title'>\n            {heading}\n        </Text>\n        <Text as='h3' size='xxs' color='prominent' align='center' className='add-crypto-currency__sub-title'>\n            {subheading}\n        </Text>\n    </React.Fragment>\n);\n\nconst FIAT_CURRENCY_TYPE = 'fiat';\nconst CRYPTO_CURRENCY_TYPE = 'crypto';\n\nconst AddCryptoCurrency = observer(\n    ({\n        form_error,\n        is_add_fiat,\n        onClickBack,\n        onSubmit,\n        should_show_crypto_only,\n        should_show_fiat_only,\n        value,\n        hasNoAvailableCrypto,\n    }) => {\n        const { isDesktop } = useDevice();\n        const { client, modules, ui } = useStore();\n        const { available_crypto_currencies, upgradeable_currencies: legal_allowed_currencies, has_fiat } = client;\n        const { should_show_cancel } = ui;\n        const { cashier } = modules;\n\n        const deposit_target = cashier.general_store.deposit_target;\n\n        const getReorderedFiatCurrencies = () =>\n            reorderCurrencies(legal_allowed_currencies.filter(currency => currency.type === FIAT_CURRENCY_TYPE));\n        const getReorderedCryptoCurrencies = () => {\n            const currencies =\n                deposit_target === routes.cashier_onramp\n                    ? CurrencyProvider.currenciesOnRampAvailability(legal_allowed_currencies)\n                    : legal_allowed_currencies.filter(currency => currency.type === CRYPTO_CURRENCY_TYPE);\n\n            return reorderCurrencies(currencies, CRYPTO_CURRENCY_TYPE);\n        };\n        const canAddFiat = () => !has_fiat && !should_show_crypto_only;\n        const canAddCrypto = currency => {\n            // check if the cryptocurrency has not been created\n            return available_crypto_currencies.map(e => e.value).indexOf(currency.value) === -1;\n        };\n\n        return (\n            <Formik\n                initialValues={{\n                    currency: value.currency,\n                }}\n                onSubmit={onSubmit}\n            >\n                {({ handleSubmit, values, errors, touched, isSubmitting }) => (\n                    <form onSubmit={handleSubmit}>\n                        {!canAddFiat() && <Headers heading={messages()[0]} subheading={messages()[1]} />}\n                        {canAddFiat() && (\n                            <Headers heading={is_add_fiat ? messages()[4] : messages()[2]} subheading={messages()[3]} />\n                        )}\n                        {canAddFiat() && (\n                            <ThemedScrollbars>\n                                <CurrencyRadioButtonGroup\n                                    id='fiat_currency'\n                                    is_fiat\n                                    className='currency-selector__radio-group currency-selector__radio-group--with-margin'\n                                    value={values.currency}\n                                    error={errors.currency}\n                                    touched={touched.currency}\n                                    is_title_enabled={canAddFiat()}\n                                    item_count={getReorderedFiatCurrencies().length}\n                                >\n                                    {getReorderedFiatCurrencies().map(currency => (\n                                        <Field\n                                            key={currency.value}\n                                            component={CurrencyRadioButton}\n                                            name='currency'\n                                            id={currency.value}\n                                            label={currency.name}\n                                        />\n                                    ))}\n                                </CurrencyRadioButtonGroup>\n                            </ThemedScrollbars>\n                        )}\n                        {canAddFiat() && (\n                            <Text\n                                as='p'\n                                color='prominent'\n                                size='xxs'\n                                align='center'\n                                className='currency-selector__deposit-warn'\n                            >\n                                <Localize i18n_default_text='You’ll not be able to change currency once you have made a deposit.' />\n                            </Text>\n                        )}\n                        {hasNoAvailableCrypto() && (\n                            <div className='account-wizard--disabled-message'>\n                                <Text\n                                    as='p'\n                                    align='center'\n                                    size='xxs'\n                                    className='account-wizard--disabled-message-description'\n                                >\n                                    {localize(\n                                        'You already have an account for each of the cryptocurrencies available on {{deriv}}.',\n                                        {\n                                            deriv: website_name,\n                                        }\n                                    )}\n                                </Text>\n                            </div>\n                        )}\n                        {!should_show_fiat_only &&\n                            (available_crypto_currencies.length !== 0 ? (\n                                <>\n                                    <ThemedScrollbars height={isMobile() ? window.innerHeight - 240 : '460px'}>\n                                        <CurrencyRadioButtonGroup\n                                            id='crypto_currency'\n                                            className='currency-selector__radio-group currency-selector__radio-group--with-margin'\n                                            label={localize('Cryptocurrencies')}\n                                            value={values.currency}\n                                            error={errors.currency}\n                                            touched={touched.currency}\n                                            is_title_enabled={canAddFiat()}\n                                            item_count={getReorderedCryptoCurrencies().length}\n                                        >\n                                            {getReorderedCryptoCurrencies().map(currency => (\n                                                <Field\n                                                    key={currency.value}\n                                                    component={CurrencyRadioButton}\n                                                    name='currency'\n                                                    id={currency.value}\n                                                    label={currency.name}\n                                                    selected={canAddCrypto(currency)}\n                                                />\n                                            ))}\n                                        </CurrencyRadioButtonGroup>\n                                    </ThemedScrollbars>\n                                    {deposit_target === routes.cashier_onramp && (\n                                        <AddCurrencyNote\n                                            message={localize('Some currencies may not be supported by fiat onramp.')}\n                                        />\n                                    )}\n                                </>\n                            ) : (\n                                <ThemedScrollbars>\n                                    <CurrencyRadioButtonGroup\n                                        id='crypto_currency'\n                                        className='currency-selector__radio-group currency-selector__radio-group--with-margin'\n                                        label={localize('Cryptocurrencies')}\n                                        is_title_enabled={canAddFiat()}\n                                        item_count={getReorderedCryptoCurrencies().length}\n                                    >\n                                        {getReorderedCryptoCurrencies().map(currency => (\n                                            <Field\n                                                key={currency.value}\n                                                component={CurrencyRadioButton}\n                                                name='currency'\n                                                id={currency.value}\n                                                label={currency.name}\n                                                selected\n                                            />\n                                        ))}\n                                    </CurrencyRadioButtonGroup>\n                                </ThemedScrollbars>\n                            ))}\n                        <FormSubmitButton\n                            className='currency-selector__button'\n                            is_disabled={isSubmitting || !values.currency}\n                            label={localize('Add account')}\n                            is_absolute={isDesktop}\n                            form_error={form_error}\n                            has_cancel={should_show_cancel}\n                            cancel_label={localize('Back')}\n                            cancel_icon={<Icon icon='IcArrowLeftBold' />}\n                            onCancel={() => onClickBack()}\n                        />\n                    </form>\n                )}\n            </Formik>\n        );\n    }\n);\n\nAddCryptoCurrency.propTypes = {\n    hasNoAvailableCrypto: PropTypes.func,\n    form_error: PropTypes.string,\n    onSubmit: PropTypes.func,\n    should_show_crypto_only: PropTypes.bool,\n    should_show_fiat_only: PropTypes.bool,\n    value: PropTypes.shape({\n        crypto: PropTypes.string,\n        fiat: PropTypes.string,\n        currency: PropTypes.string,\n    }),\n    onClickBack: PropTypes.func,\n    is_add_fiat: PropTypes.bool,\n};\n\nexport default AddCryptoCurrency;\n","import { Field, Formik } from 'formik';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { usePaymentAgentList } from '@deriv/hooks';\nimport { FormSubmitButton, Icon, Loading, Text, ThemedScrollbars } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { isMobile, reorderCurrencies, routes } from '@deriv/shared';\nimport { CurrencyRadioButtonGroup, CurrencyRadioButton } from '@deriv/account';\nimport AddCryptoCurrency from './add-crypto-currency.jsx';\nimport AddCurrencyNote from './add-currency-note.jsx';\nimport CurrencyProvider from './choose-currency';\nimport { observer, useStore } from '@deriv/stores';\nimport './currency-selector.scss';\n\nconst CRYPTO_CURRENCY_TYPE = 'crypto';\nconst FIAT_CURRENCY_TYPE = 'fiat';\n\nconst AddCurrency = observer(({ onSubmit, hasNoAvailableCrypto, is_add_crypto, is_add_fiat }) => {\n    const { client, modules, ui } = useStore();\n    const { available_crypto_currencies, has_fiat, upgradeable_currencies: legal_allowed_currencies } = client;\n    const { cashier } = modules;\n    const setShouldShowAllAvailableCurrencies = cashier.general_store.setShouldShowAllAvailableCurrencies;\n    const deposit_target = cashier.general_store.deposit_target;\n    const { openRealAccountSignup } = ui;\n\n    const [form_error] = React.useState('');\n    const [form_value] = React.useState({ crypto: '', fiat: '' });\n    const { data: all_payment_agent_list, isLoading: is_loading } = usePaymentAgentList();\n\n    const getReorderedCurrencies = React.useMemo(() => {\n        const allowed_currencies_payment_agent_availability = CurrencyProvider.currenciesPaymentAgentAvailability(\n            legal_allowed_currencies,\n            all_payment_agent_list\n        );\n\n        const crypto = reorderCurrencies(\n            allowed_currencies_payment_agent_availability?.filter(\n                currency =>\n                    currency.type === CRYPTO_CURRENCY_TYPE &&\n                    available_crypto_currencies.some(x => x.value === currency.value)\n            ),\n            CRYPTO_CURRENCY_TYPE\n        );\n\n        const fiat = reorderCurrencies(\n            allowed_currencies_payment_agent_availability?.filter(\n                currency =>\n                    currency.type === FIAT_CURRENCY_TYPE &&\n                    !available_crypto_currencies.some(x => x.value === currency.value)\n            )\n        );\n\n        return {\n            crypto,\n            fiat,\n        };\n    }, [all_payment_agent_list, available_crypto_currencies, legal_allowed_currencies]);\n\n    const onClickBack = () => {\n        openRealAccountSignup('choose');\n        if (deposit_target === routes.cashier_pa) {\n            setShouldShowAllAvailableCurrencies(true);\n        }\n    };\n\n    const AddFiat = () => {\n        return (\n            <div>\n                <Text as='h1' color='prominent' align='center' weight='bold' className='add-currency__title'>\n                    {localize('Fiat currencies')}\n                </Text>\n                {!!has_fiat && (\n                    <Text as='p' color='prominent' align='center' size='xxs' className='add-currency__sub-title'>\n                        {localize('You are limited to one fiat account only.')}\n                    </Text>\n                )}\n                {is_loading ? (\n                    <Loading is_fullscreen={false} />\n                ) : (\n                    <CurrencyRadioButtonGroup\n                        id='crypto_currency'\n                        className='currency-selector__radio-group currency-selector__radio-group--with-margin'\n                        item_count={getReorderedCurrencies.fiat.length}\n                    >\n                        {getReorderedCurrencies.fiat.map(currency => (\n                            <Field\n                                key={currency.value}\n                                component={CurrencyRadioButton}\n                                name='currency'\n                                id={currency.value}\n                                label={currency.name}\n                                icon={currency.icon}\n                                second_line_label={currency.second_line_label}\n                                onClick={currency.onClick}\n                                selected={has_fiat}\n                            />\n                        ))}\n                    </CurrencyRadioButtonGroup>\n                )}\n            </div>\n        );\n    };\n\n    const AddCrypto = () => {\n        return (\n            <div>\n                <Text as='h1' color='prominent' align='center' weight='bold' className='add-currency__title'>\n                    {localize('Cryptocurrencies')}\n                </Text>\n                <Text as='p' color='prominent' align='center' size='xxs' className='add-currency__sub-title'>\n                    {localize('You can open an account for each cryptocurrency.')}\n                </Text>\n                {is_loading ? (\n                    <Loading is_fullscreen={false} />\n                ) : (\n                    <CurrencyRadioButtonGroup\n                        id='crypto_currency'\n                        className='currency-selector__radio-group currency-selector__radio-group--with-margin'\n                        item_count={getReorderedCurrencies.crypto.length}\n                    >\n                        {getReorderedCurrencies.crypto.map(currency => (\n                            <Field\n                                key={currency.value}\n                                component={CurrencyRadioButton}\n                                name='currency'\n                                id={currency.value}\n                                label={currency.name}\n                                icon={currency.icon}\n                                second_line_label={currency.second_line_label}\n                                onClick={currency.onClick}\n                                selected={deposit_target === routes.cashier_pa ? !currency.has_payment_agent : false}\n                            />\n                        ))}\n                    </CurrencyRadioButtonGroup>\n                )}\n            </div>\n        );\n    };\n\n    if (is_add_crypto)\n        return (\n            <ThemedScrollbars autohide={false}>\n                <div\n                    className={classNames('add-crypto-currency cashier-deposit', {\n                        'account-wizard--disabled': hasNoAvailableCrypto(),\n                    })}\n                >\n                    <AddCryptoCurrency\n                        className='account-wizard__body'\n                        onSubmit={onSubmit}\n                        onClickBack={onClickBack}\n                        value={form_value}\n                        form_error={form_error}\n                        should_show_crypto_only\n                        hasNoAvailableCrypto={hasNoAvailableCrypto}\n                    />\n                </div>\n            </ThemedScrollbars>\n        );\n\n    if (is_add_fiat) {\n        return (\n            <ThemedScrollbars autohide={false}>\n                <div className='change-currency'>\n                    <AddCryptoCurrency\n                        className='account-wizard__body'\n                        onSubmit={onSubmit}\n                        value={form_value}\n                        form_error={form_error}\n                        should_show_fiat_only\n                        hasNoAvailableCrypto={hasNoAvailableCrypto}\n                        is_add_fiat\n                    />\n                </div>\n            </ThemedScrollbars>\n        );\n    }\n\n    return (\n        <Formik\n            initialValues={{\n                currency: form_value.currency,\n            }}\n            onSubmit={onSubmit}\n        >\n            {({ handleSubmit, values, isSubmitting }) => (\n                <form onSubmit={handleSubmit}>\n                    <ThemedScrollbars height={isMobile() ? window.innerHeight - 190 : '460px'}>\n                        <div>\n                            <Text\n                                as='p'\n                                color='prominent'\n                                weight='bold'\n                                align='center'\n                                className='add-currency__wizard-header'\n                            >\n                                {localize('Choose your currency')}\n                            </Text>\n\n                            <AddFiat />\n                            <div className='add-currency__underline' />\n                            <AddCrypto />\n                        </div>\n                    </ThemedScrollbars>\n                    <AddCurrencyNote\n                        message={localize('Some currencies may not be supported by payment agents in your country.')}\n                    />\n                    <FormSubmitButton\n                        className='currency-selector__button'\n                        is_disabled={isSubmitting || !values.currency}\n                        label={localize('Add account')}\n                        is_absolute\n                        form_error={form_error}\n                        has_cancel\n                        cancel_label={localize('Back')}\n                        cancel_icon={<Icon icon='IcArrowLeftBold' />}\n                        onCancel={() => onClickBack()}\n                    />\n                </form>\n            )}\n        </Formik>\n    );\n});\n\nAddCurrency.propTypes = {\n    onSubmit: PropTypes.func,\n    is_add_crypto: PropTypes.bool,\n    is_add_fiat: PropTypes.bool,\n    hasNoAvailableCrypto: PropTypes.func,\n};\n\nexport default AddCurrency;\n","import { Field, Formik } from 'formik';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { FormSubmitButton, Text } from '@deriv/components';\nimport { isMobile, reorderCurrencies } from '@deriv/shared';\nimport { observer, useStore } from '@deriv/stores';\nimport { localize, Localize } from '@deriv/translations';\nimport { CurrencyRadioButtonGroup, CurrencyRadioButton } from '@deriv/account';\nimport './currency-selector.scss';\nimport { Chat } from '@deriv/utils';\n\nconst FIAT_CURRENCY_TYPE = 'fiat';\n\nconst ChangeAccountCurrency = observer(\n    ({ value, onSubmit, form_error, can_change_fiat_currency, current_currency_type }) => {\n        const { client, ui } = useStore();\n        const {\n            upgradeable_currencies: legal_allowed_currencies,\n            currency: client_currency,\n            current_fiat_currency,\n        } = client;\n        const { closeRealAccountSignup } = ui;\n        const getReorderedCurrencies = () =>\n            reorderCurrencies(legal_allowed_currencies.filter(currency => currency.type === FIAT_CURRENCY_TYPE));\n\n        const is_fiat = current_currency_type === 'fiat';\n        const fiat_message = (\n            <Localize\n                i18n_default_text='If you want to change your account currency, please contact us via <0>live chat</0>.'\n                components={[\n                    <span\n                        key={0}\n                        className='link link--orange'\n                        onClick={() => {\n                            closeRealAccountSignup();\n                            Chat.open();\n                        }}\n                    />,\n                ]}\n            />\n        );\n\n        const non_fiat_mesage = (\n            <Localize\n                i18n_default_text='Please switch to your {{fiat_currency}} account to change currencies.'\n                values={{\n                    fiat_currency: current_fiat_currency?.toUpperCase?.(),\n                }}\n            />\n        );\n\n        const disabled_message = is_fiat ? fiat_message : non_fiat_mesage;\n\n        return (\n            <Formik\n                initialValues={{\n                    fiat: value.fiat,\n                }}\n                onSubmit={onSubmit}\n            >\n                {({ handleSubmit, values, errors, touched, isSubmitting }) => (\n                    <form\n                        onSubmit={e => {\n                            e.preventDefault();\n                            handleSubmit();\n                        }}\n                    >\n                        <Text as='h1' color='prominent' weight='bold' align='center' className='change-currency__title'>\n                            <Localize i18n_default_text='Change your currency' />\n                        </Text>\n                        <Text as='h3' size='xxs' align='center' className='change-currency__sub-title'>\n                            <Localize i18n_default_text='Choose the currency you would like to trade with.' />\n                        </Text>\n                        {!can_change_fiat_currency && (\n                            <div className='account-wizard--disabled-message'>\n                                <Text\n                                    as='p'\n                                    align='center'\n                                    size='xxs'\n                                    className='account-wizard--disabled-message-description'\n                                >\n                                    {disabled_message}\n                                </Text>\n                            </div>\n                        )}\n                        <CurrencyRadioButtonGroup\n                            id='fiat'\n                            label={localize('Cryptocurrencies')}\n                            className='currency-selector__radio-group currency-selector__radio-group--with-margin'\n                            value={values.fiat}\n                            error={errors.fiat}\n                            touched={touched.fiat}\n                            is_title_enabled={false}\n                            item_count={getReorderedCurrencies().length}\n                        >\n                            {getReorderedCurrencies().map(currency => (\n                                <Field\n                                    key={currency.value}\n                                    component={CurrencyRadioButton}\n                                    name='fiat'\n                                    id={currency.value}\n                                    label={currency.name}\n                                    selected={currency.value === client_currency}\n                                />\n                            ))}\n                        </CurrencyRadioButtonGroup>\n                        <FormSubmitButton\n                            className='change-currency__button'\n                            is_disabled={isSubmitting || !values.fiat}\n                            label={localize('Change currency')}\n                            is_absolute={!isMobile()}\n                            form_error={form_error}\n                        />\n                    </form>\n                )}\n            </Formik>\n        );\n    }\n);\n\nChangeAccountCurrency.propTypes = {\n    onSubmit: PropTypes.func,\n    closeModal: PropTypes.func,\n    value: PropTypes.shape({\n        crypto: PropTypes.string,\n        fiat: PropTypes.string,\n    }),\n    form_error: PropTypes.string,\n    can_change_fiat_currency: PropTypes.bool,\n    current_currency_type: PropTypes.string,\n    current_fiat_currency: PropTypes.string,\n};\n\nexport default ChangeAccountCurrency;\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { Tabs, ThemedScrollbars } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { CURRENCY_TYPE, isDesktop, isMobile } from '@deriv/shared';\nimport { WS } from 'Services';\nimport AddCryptoCurrency from './add-crypto-currency.jsx';\nimport AddCurrency from './add-currency.jsx';\nimport ChangeAccountCurrency from './change-account-currency.jsx';\nimport LoadingModal from './real-account-signup-loader.jsx';\nimport { observer, useStore } from '@deriv/stores';\nimport 'Sass/add-or-manage.scss';\nimport 'Sass/change-account.scss';\n\nconst AddOrManageAccounts = observer(props => {\n    const {\n        deposit_target,\n        is_add_crypto,\n        is_add_currency,\n        is_add_fiat,\n        is_loading,\n        onError,\n        onSuccessSetAccountCurrency,\n        setLoading,\n        onClose,\n    } = props;\n\n    const { client, modules, ui, traders_hub } = useStore();\n    const {\n        available_crypto_currencies,\n        can_change_fiat_currency,\n        current_currency_type,\n        has_fiat,\n        setAccountCurrency: setCurrency,\n        createCryptoAccount,\n        is_low_risk,\n        loginid,\n    } = client;\n    const { cashier } = modules;\n    const { show_eu_related_content } = traders_hub;\n    const { manage_real_account_tab_index, setShouldShowCancel, resetRealAccountSignupTarget } = ui;\n    const setIsDeposit = cashier.general_store.setIsDeposit;\n    const initial_active_index =\n        manage_real_account_tab_index ?? (has_fiat && available_crypto_currencies?.length === 0) ? 1 : 0;\n\n    const [active_index, setActiveIndex] = React.useState(initial_active_index);\n    const [form_error] = React.useState('');\n    const [form_value] = React.useState({ crypto: '', fiat: '' });\n\n    React.useEffect(() => {\n        const fetchMt5LoginList = async () => {\n            setLoading(true);\n            await WS.mt5LoginList();\n            setLoading(false);\n        };\n        fetchMt5LoginList();\n        return () => setShouldShowCancel(false);\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    const setActiveTabIndex = index => {\n        setActiveIndex(index);\n    };\n\n    const setCurrencyOrAddCryptoAccount = currency_object => {\n        setLoading(true);\n        Object.entries(currency_object).map(([key, value]) => {\n            if (key === CURRENCY_TYPE.FIAT) {\n                setCurrency(value)\n                    .then(response => {\n                        onSuccessSetAccountCurrency(\n                            response.passthrough.previous_currency,\n                            response.echo_req.set_account_currency,\n                            deposit_target\n                        );\n                    })\n                    .catch(error => {\n                        onError(error);\n                    })\n                    .finally(() => setLoading(false));\n            } else {\n                // Add Crypto Account\n                createCryptoAccount(value)\n                    .then(() => {\n                        onSuccessSetAccountCurrency('', value, deposit_target);\n                        resetRealAccountSignupTarget();\n                        setIsDeposit(true);\n                    })\n                    .catch(error => {\n                        onError(error);\n                    })\n                    .finally(() => setLoading(false));\n            }\n        });\n    };\n\n    const hasNoAvailableCrypto = () => {\n        return available_crypto_currencies.length === 0 && has_fiat;\n    };\n\n    if (is_loading) return <LoadingModal />;\n\n    const fiat_section = has_fiat && (\n        <div\n            className={classNames('change-currency', {\n                'account-wizard--disabled': !can_change_fiat_currency,\n            })}\n        >\n            <ChangeAccountCurrency\n                className='account-wizard__body'\n                onSubmit={setCurrencyOrAddCryptoAccount}\n                value={form_value}\n                form_error={form_error}\n                can_change_fiat_currency={can_change_fiat_currency}\n                current_currency_type={current_currency_type}\n                closeModal={onClose}\n            />\n        </div>\n    );\n\n    if (is_add_currency || is_add_crypto || is_add_fiat) {\n        return (\n            <AddCurrency\n                onSubmit={setCurrencyOrAddCryptoAccount}\n                value={form_value}\n                form_error={form_error}\n                should_show_crypto_only\n                hasNoAvailableCrypto={hasNoAvailableCrypto}\n                is_add_crypto={is_add_crypto}\n                is_add_fiat={is_add_fiat}\n                is_add_currency={is_add_currency}\n            />\n        );\n    }\n\n    const is_mf_active = loginid?.startsWith('MF');\n\n    return (\n        <ThemedScrollbars is_bypassed={isMobile()} autohide={false}>\n            {(show_eu_related_content && !is_low_risk && has_fiat) || is_mf_active ? (\n                fiat_section\n            ) : (\n                <Tabs\n                    active_index={active_index}\n                    className='account-wizard add-or-manage tabs--desktop'\n                    onTabItemClick={setActiveTabIndex}\n                    top\n                    header_fit_content={isDesktop()}\n                >\n                    <div label={localize('Cryptocurrencies')}>\n                        <div\n                            className={classNames('add-crypto-currency', {\n                                'account-wizard--disabled': hasNoAvailableCrypto(),\n                            })}\n                        >\n                            <AddCryptoCurrency\n                                className='account-wizard__body'\n                                onSubmit={setCurrencyOrAddCryptoAccount}\n                                value={form_value}\n                                form_error={form_error}\n                                should_show_crypto_only\n                                hasNoAvailableCrypto={hasNoAvailableCrypto}\n                            />\n                        </div>\n                    </div>\n                    <div label={localize('Fiat currencies')}>\n                        {has_fiat ? (\n                            fiat_section\n                        ) : (\n                            <AddCryptoCurrency\n                                className='account-wizard__body'\n                                onSubmit={setCurrencyOrAddCryptoAccount}\n                                value={form_value}\n                                form_error={form_error}\n                                should_show_fiat_only={true}\n                                hasNoAvailableCrypto={hasNoAvailableCrypto}\n                            />\n                        )}\n                    </div>\n                </Tabs>\n            )}\n        </ThemedScrollbars>\n    );\n});\n\nAddOrManageAccounts.propTypes = {\n    onClose: PropTypes.func,\n    onError: PropTypes.func,\n    onSuccessSetAccountCurrency: PropTypes.func,\n    is_loading: PropTypes.bool,\n    is_add_crypto: PropTypes.bool,\n    setLoading: PropTypes.func,\n    is_add_fiat: PropTypes.bool,\n    is_add_currency: PropTypes.bool,\n    deposit_target: PropTypes.string,\n};\n\nexport default AddOrManageAccounts;\n","import { Field, Formik } from 'formik';\nimport React from 'react';\nimport { FormSubmitButton, Loading, Text, ThemedScrollbars } from '@deriv/components';\nimport { usePaymentAgentList } from '@deriv/hooks';\nimport { localize } from '@deriv/translations';\nimport { reorderCurrencies, routes } from '@deriv/shared';\nimport { CurrencyRadioButtonGroup, CurrencyRadioButton } from '@deriv/account';\nimport CurrencyProvider from './choose-currency';\nimport { observer, useStore } from '@deriv/stores';\nimport './currency-selector.scss';\n\nconst CRYPTO_CURRENCY_TYPE = 'crypto';\n\nconst ChooseCurrency = observer(() => {\n    const { client, modules, ui } = useStore();\n    const {\n        account_list,\n        available_crypto_currencies,\n        currency: currency_title,\n        has_fiat,\n        upgradeable_currencies: legal_allowed_currencies,\n        switchAccount,\n    } = client;\n    const { cashier } = modules;\n    const { closeRealAccountSignup, continueRouteAfterChooseCrypto, openRealAccountSignup, setShouldShowCancel } = ui;\n    const deposit_target = cashier.general_store.deposit_target;\n    const should_show_all_available_currencies = cashier.general_store.should_show_all_available_currencies;\n    const setShouldShowAllAvailableCurrencies = cashier.general_store.setShouldShowAllAvailableCurrencies;\n    const [form_error] = React.useState('');\n    const [form_value] = React.useState({ crypto: '' });\n\n    const { data: all_payment_agent_list, isLoading: is_loading } = usePaymentAgentList();\n\n    React.useEffect(() => {\n        return () => setShouldShowAllAvailableCurrencies(false);\n    }, [setShouldShowAllAvailableCurrencies]);\n\n    const memoized_reordered_crypto_currencies = React.useMemo(() => {\n        const hasAllCryptos = () => {\n            return (\n                legal_allowed_currencies?.filter(\n                    currency =>\n                        currency.type === CRYPTO_CURRENCY_TYPE && !account_list.some(x => x.title === currency.value)\n                ).length === 0\n            );\n        };\n\n        const addNewCryptoAccount = () => {\n            openRealAccountSignup(deposit_target === routes.cashier_pa ? 'add_currency' : 'add_crypto');\n            setShouldShowCancel(true);\n        };\n        const allowed_currencies_payment_agent_availability = CurrencyProvider.currenciesPaymentAgentAvailability(\n            legal_allowed_currencies,\n            all_payment_agent_list,\n            account_list\n        );\n\n        const allowed_currencies_onramp_availability =\n            CurrencyProvider.currenciesOnRampAvailability(legal_allowed_currencies);\n\n        const getReorderCryptoCurrencies = () => {\n            let currencies_to_filter;\n\n            if (deposit_target === routes.cashier_onramp) {\n                currencies_to_filter = allowed_currencies_onramp_availability;\n            } else if (should_show_all_available_currencies) {\n                currencies_to_filter = allowed_currencies_payment_agent_availability;\n            } else {\n                currencies_to_filter = allowed_currencies_payment_agent_availability?.filter(\n                    currency =>\n                        currency.type === CRYPTO_CURRENCY_TYPE &&\n                        !available_crypto_currencies.some(x => x.value === currency.value)\n                );\n            }\n\n            const filtered_currencies = currencies_to_filter?.filter(currency =>\n                account_list.some(x => x.title === currency.value)\n            );\n\n            return reorderCurrencies(filtered_currencies, CRYPTO_CURRENCY_TYPE);\n        };\n\n        const shouldShowAddButton = () => {\n            switch (deposit_target) {\n                case routes.cashier_pa:\n                    return !has_fiat || !hasAllCryptos();\n                case routes.cashier_onramp: {\n                    const can_add_onramp_supported_crypto_account =\n                        legal_allowed_currencies.filter(\n                            currency =>\n                                currency.type === CRYPTO_CURRENCY_TYPE &&\n                                currency.platform.ramp.length > 0 &&\n                                !account_list.some(x => x.title === currency.value)\n                        ).length > 0;\n                    return can_add_onramp_supported_crypto_account;\n                }\n                default:\n                    return !hasAllCryptos();\n            }\n        };\n\n        const reordered_crypto_currencies = getReorderCryptoCurrencies();\n\n        if (shouldShowAddButton()) {\n            reordered_crypto_currencies.push({\n                value: 'plus',\n                name: deposit_target === routes.cashier_pa ? localize('Add a new') : localize('Add new'),\n                second_line_label:\n                    deposit_target === routes.cashier_pa ? localize('account') : localize('crypto account'),\n                icon: 'IcAddAccount',\n                onClick: () => addNewCryptoAccount(),\n                has_payment_agent: true,\n            });\n        }\n\n        return reordered_crypto_currencies;\n    }, [\n        account_list,\n        all_payment_agent_list,\n        available_crypto_currencies,\n        deposit_target,\n        has_fiat,\n        legal_allowed_currencies,\n        should_show_all_available_currencies,\n        openRealAccountSignup,\n        setShouldShowCancel,\n    ]);\n\n    const doSwitch = async value => {\n        const target_account = account_list.filter(account => account.title === value);\n        const loginid = target_account.map(x => x.loginid)[0];\n        if (loginid) await switchAccount(loginid);\n    };\n\n    const onSubmit = async obj => {\n        Object.entries(obj).map(([title, value]) => {\n            if (title) {\n                closeRealAccountSignup();\n                if (value !== currency_title) {\n                    doSwitch(value);\n                }\n                continueRouteAfterChooseCrypto();\n            }\n        });\n    };\n\n    return (\n        <Formik\n            initialValues={{\n                currency: form_value.currency,\n            }}\n            onSubmit={values => {\n                onSubmit(values);\n            }}\n        >\n            {({ handleSubmit, values, isSubmitting }) => (\n                <form onSubmit={handleSubmit}>\n                    <Text as='h1' color='prominent' align='center' weight='bold' className='add-crypto-currency__title'>\n                        {deposit_target === routes.cashier_pa\n                            ? localize('Choose an account or add a new one')\n                            : localize('Choose one of your accounts or add a new cryptocurrency account')}\n                    </Text>\n                    <ThemedScrollbars>\n                        {is_loading ? (\n                            <Loading is_fullscreen={false} className='currency-list__loading-wrapper' />\n                        ) : (\n                            <CurrencyRadioButtonGroup\n                                id='crypto_currency'\n                                className='currency-selector__radio-group currency-selector__radio-group--with-margin'\n                                item_count={memoized_reordered_crypto_currencies.length}\n                            >\n                                {memoized_reordered_crypto_currencies.map(currency => (\n                                    <Field\n                                        key={currency.value}\n                                        component={CurrencyRadioButton}\n                                        name='currency'\n                                        id={currency.value}\n                                        label={currency.name}\n                                        icon={currency.icon}\n                                        second_line_label={currency.second_line_label}\n                                        onClick={currency.onClick}\n                                        selected={\n                                            currency.is_disabled || deposit_target === routes.cashier_pa\n                                                ? !currency.has_payment_agent\n                                                : false\n                                        }\n                                    />\n                                ))}\n                            </CurrencyRadioButtonGroup>\n                        )}\n                    </ThemedScrollbars>\n                    <FormSubmitButton\n                        className='currency-selector__button'\n                        is_disabled={isSubmitting || !values.currency}\n                        label={localize('Continue')}\n                        is_absolute\n                        form_error={form_error}\n                    />\n                </form>\n            )}\n        </Formik>\n    );\n});\n\nexport default ChooseCurrency;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { useDevice } from '@deriv-com/ui';\nimport { Button, Div100vhContainer, Icon, Text } from '@deriv/components';\nimport { routes } from '@deriv/shared';\nimport { localize, Localize } from '@deriv/translations';\n\nconst FinishedAddCurrency = ({\n    current,\n    closeRealAccountSignup,\n    deposit_target,\n    redirectToLegacyPlatform,\n    deposit_real_account_signup_target,\n    history,\n    onSubmit,\n    setIsDeposit,\n}) => {\n    const { isDesktop } = useDevice();\n    const IconNextCurrency = () => <Icon icon={`IcCurrency-${current.toLowerCase()}`} height={120} width={90} />;\n    const IconWon = ({ className }) => <Icon className={className} icon='IcCheckmarkCircle' color='green' />;\n\n    const closeModalThenOpenCashier = () => {\n        closeRealAccountSignup();\n        history.push(deposit_target);\n        if (deposit_target === routes.cashier_deposit) {\n            setIsDeposit(true);\n        }\n        redirectToLegacyPlatform();\n    };\n\n    const onCancel = () => {\n        closeRealAccountSignup();\n        setIsDeposit(false);\n        redirectToLegacyPlatform();\n    };\n\n    return (\n        <React.Fragment>\n            {isDesktop && (\n                <div onClick={onCancel} className='finished-add-currency__close'>\n                    <Icon icon='IcCross' />\n                </div>\n            )}\n            <Div100vhContainer className='finished-add-currency__dialog' is_disabled={isDesktop} height_offset='40px'>\n                <div\n                    className={classNames('status-dialog__header', {\n                        'status-dialog__header--center': !isDesktop,\n                    })}\n                >\n                    <IconNextCurrency />\n                    <IconWon className='bottom-right-overlay' />\n                </div>\n                <div className={classNames('status-dialog__body', { 'status-dialog__body--no-grow': !isDesktop })}>\n                    <Text as='h2' align='center' className='status-dialog__message-header' weight='bold'>\n                        <Localize i18n_default_text='Your account is ready' />\n                    </Text>\n                    <Text as='p' align='center'>\n                        <Localize i18n_default_text='Fund your account to start trading.' />\n                    </Text>\n                </div>\n                <div className='finished-add-currency__footer'>\n                    <Button onClick={onCancel} text={localize('Maybe later')} secondary />\n                    <Button\n                        onClick={\n                            ['add_crypto', 'add_fiat', 'add_currency'].includes(deposit_real_account_signup_target)\n                                ? closeModalThenOpenCashier\n                                : onSubmit\n                        }\n                        text={localize('Deposit now')}\n                        primary\n                    />\n                </div>\n            </Div100vhContainer>\n        </React.Fragment>\n    );\n};\n\nexport default React.memo(FinishedAddCurrency);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Button, Div100vhContainer, Icon, Text } from '@deriv/components';\nimport { getCurrencyDisplayCode, isDesktop, isMobile, routes } from '@deriv/shared';\nimport { localize, Localize } from '@deriv/translations';\n\nconst SuccessMessage = ({ prev, current }) =>\n    prev ? (\n        <Localize\n            i18n_default_text={\n                '<0>You have successfully changed your currency to {{currency}}.</0><0>Make a deposit now to start trading.</0>'\n            }\n            values={{\n                currency: getCurrencyDisplayCode(current),\n            }}\n            components={[\n                <Text\n                    as='p'\n                    align='center'\n                    className='status-dialog__message-text'\n                    color='general'\n                    size='xs'\n                    key={current}\n                />,\n            ]}\n        />\n    ) : (\n        <Localize\n            i18n_default_text={\n                '<0>You have added a {{currency}} account.</0><0> Make a deposit now to start trading.</0>'\n            }\n            values={{\n                currency: getCurrencyDisplayCode(current),\n            }}\n            components={[\n                <Text\n                    as='p'\n                    align='center'\n                    className='status-dialog__message-text'\n                    color='general'\n                    size='xs'\n                    key={current}\n                />,\n            ]}\n        />\n    );\n\nconst FinishedSetCurrency = ({\n    current,\n    closeRealAccountSignup,\n    deposit_target,\n    deposit_real_account_signup_target,\n    history,\n    onCancel,\n    onSubmit,\n    prev,\n    setIsDeposit,\n}) => {\n    const IconPrevCurrency = () =>\n        prev ? <Icon icon={`IcCurrency-${prev.toLowerCase()}`} height={120} width={90} /> : null;\n    const IconNextCurrency = () => <Icon icon={`IcCurrency-${current.toLowerCase()}`} height={120} width={90} />;\n    const IconArrow = () => (prev ? <Icon icon='IcArrowPointerRight' color='red' width={50} height={20} /> : null);\n\n    const IconWon = ({ className }) => <Icon className={className} icon='IcCheckmarkCircle' color='green' />;\n\n    const closeModalThenOpenCashier = () => {\n        closeRealAccountSignup();\n        history.push(deposit_target);\n        if (deposit_target === routes.cashier_deposit) {\n            setIsDeposit(true);\n        }\n    };\n\n    const closeModal = () => {\n        onCancel();\n        setIsDeposit(false);\n    };\n\n    return (\n        <Div100vhContainer className='status-dialog' is_disabled={isDesktop()} height_offset='40px'>\n            <div\n                className={classNames('status-dialog__header', {\n                    'status-dialog__header--center': isMobile(),\n                    'status-dialog__header--set-currency': prev,\n                })}\n            >\n                <IconPrevCurrency />\n                <IconArrow />\n                <IconNextCurrency />\n                <IconWon className='bottom-right-overlay' />\n            </div>\n            <div className={classNames('status-dialog__body', { 'status-dialog__body--no-grow': isMobile() })}>\n                <Text as='h2' align='center' className='status-dialog__message-header' weight='bold'>\n                    <Localize i18n_default_text='Success!' />\n                </Text>\n                <SuccessMessage prev={prev} current={current} />\n            </div>\n            <div className='status-dialog__footer'>\n                <Button onClick={closeModal} text={localize('Maybe later')} secondary />\n                <Button\n                    onClick={\n                        ['add_crypto', 'add_fiat', 'add_currency'].includes(deposit_real_account_signup_target)\n                            ? closeModalThenOpenCashier\n                            : onSubmit\n                    }\n                    text={localize('Deposit now')}\n                    primary\n                />\n            </div>\n        </Div100vhContainer>\n    );\n};\n\nexport default React.memo(FinishedSetCurrency);\n","import classNames from 'classnames';\nimport React from 'react';\nimport { localize } from '@deriv/translations';\nimport { currencySelectorConfig } from '@deriv/account';\nimport { website_name, generateValidationFunction } from '@deriv/shared';\nimport { Text } from '@deriv/components';\nimport CurrencySelector from '@deriv/account/src/Components/currency-selector';\nimport LoadingModal from './real-account-signup-loader.jsx';\nimport 'Sass/set-currency.scss';\nimport 'Sass/change-account.scss';\nimport { observer, useStore } from '@deriv/stores';\n\nconst SetCurrency = observer(({ setLoading, onSuccessSetAccountCurrency, onError, is_loading, ...props }) => {\n    const { client } = useStore();\n    const { available_crypto_currencies, has_fiat, landing_company_shortcode, setAccountCurrency } = client;\n    const form_error = React.useState('');\n    const form_value = React.useState({ currency: '' });\n\n    const setCurrency = (obj, setSubmitting) => {\n        setLoading(true);\n        const { currency } = obj;\n        if (currency) {\n            setAccountCurrency(currency)\n                .then(response => {\n                    setSubmitting(false);\n                    onSuccessSetAccountCurrency('', response.echo_req.set_account_currency);\n                })\n                .catch(error_message => {\n                    onError(error_message);\n                })\n                .finally(() => setLoading(false));\n        }\n    };\n\n    const updateValue = (index, value, setSubmitting) => {\n        setCurrency(value, setSubmitting);\n    };\n\n    const noCryptoAvailable = () => {\n        return available_crypto_currencies.length === 0 && has_fiat && props.currency;\n    };\n\n    if (is_loading) return <LoadingModal />;\n    return (\n        <div\n            className={classNames('set-currency-modal', {\n                'set-currency-modal--disabled': noCryptoAvailable(),\n            })}\n        >\n            {noCryptoAvailable() && (\n                <div className='set-currency-modal--disabled-message'>\n                    <p>\n                        {localize(\n                            'You already have an account for each of the cryptocurrencies available on {{deriv}}.',\n                            {\n                                deriv: website_name,\n                            }\n                        )}\n                    </p>\n                </div>\n            )}\n            <div className='set-currency-modal__heading-container'>\n                <Text\n                    as='p'\n                    size='xs'\n                    line_height='s'\n                    align='center'\n                    className='set-currency-modal__heading-container__main-heading'\n                >\n                    {localize(\n                        'You have an account that do not have currency assigned. Please choose a currency to trade with this account.'\n                    )}\n                </Text>\n                <Text\n                    as='p'\n                    weight='bold'\n                    align='center'\n                    className='set-currency-modal__heading-container__sub-heading'\n                >\n                    {localize('Select your preferred currency')}\n                </Text>\n            </div>\n            <CurrencySelector\n                className='account-wizard__body'\n                onSubmit={updateValue}\n                value={form_value}\n                form_error={form_error}\n                set_currency\n                validate={generateValidationFunction(landing_company_shortcode, currencySelectorConfig)}\n                {...props}\n            />\n        </div>\n    );\n});\n\nexport default SetCurrency;\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport classNames from 'classnames';\nimport { isMobile, getSignupFormFields } from '@deriv/shared';\nimport { Button, Icon, StaticUrl, Text } from '@deriv/components';\nimport { localize, Localize } from '@deriv/translations';\nimport { Chat } from '@deriv/utils';\n\nconst Heading = ({ code }) => {\n    switch (code) {\n        case 'DuplicateAccount':\n            return (\n                <Text as='h1' align='center' weight='bold'>\n                    <Localize i18n_default_text='Account already exists' />\n                </Text>\n            );\n        case 'InvalidAccount':\n            return (\n                <Text as='h2' size={isMobile() ? 'xs' : 's'} align='center' weight='bold' line_height='xxl'>\n                    <Localize i18n_default_text='You can’t add another real account' />\n                </Text>\n            );\n        case 'InputValidationFailed':\n        case 'PoBoxInAddress':\n        case 'InvalidPhone':\n            return (\n                <Text as='h1' align='center' weight='bold' line_height='xxl'>\n                    <Localize i18n_default_text='Invalid inputs' />\n                </Text>\n            );\n\n        default:\n            return (\n                <Text as='h1' align='center' weight='bold'>\n                    <Localize i18n_default_text='Something’s not right' />\n                </Text>\n            );\n    }\n};\n\nconst Message = ({ code, message, details }) => {\n    if (code === 'PoBoxInAddress') {\n        details.error_details = { address_line_1: message };\n    } else if (code === 'InvalidPhone') {\n        details.error_details = { phone: message };\n    }\n    switch (code) {\n        case 'DuplicateAccount':\n            return (\n                <p>\n                    <Localize\n                        i18n_default_text='Your details match an existing account. If you need help, contact us via <0>live chat</0>.'\n                        components={[<span className='chat-inline' key={0} onClick={Chat.open} />]}\n                    />\n                </p>\n            );\n        case 'InvalidAccount':\n            return (\n                <Text size={isMobile() ? 'xxs' : 'xs'} align='center'>\n                    {message}\n                </Text>\n            );\n        case 'InputValidationFailed':\n        case 'PoBoxInAddress':\n        case 'InvalidPhone':\n            return (\n                <div className='input_validation_failed'>\n                    <Text align='center' weight='normal' line_height='xxl'>\n                        <Localize i18n_default_text='We don’t accept the following inputs for:' />\n                    </Text>\n                    {Object.keys(details?.error_details).map(item => (\n                        <div key={item} className='invalid_fields_input'>\n                            <Text size='xs' weight='bold'>\n                                {getSignupFormFields()[item]}\n                            </Text>\n                            <Text size='xs' weight='bold'>\n                                {' : '}\n                            </Text>\n                            <Text size='xs'>{details[item]}</Text>\n                        </div>\n                    ))}\n                </div>\n            );\n\n        default:\n            return <p>{message}</p>;\n    }\n};\n\nconst TryAgain = ({ text, onConfirm, ...rest }) => (\n    <Button primary onClick={onConfirm} large {...rest}>\n        {text}\n    </Button>\n);\n\nconst ErrorCTA = ({ code, onConfirm }) => {\n    switch (code) {\n        case 'DuplicateCurrency':\n        case 'CurrencyTypeNotAllowed':\n            return <TryAgain text={localize('Try a different currency')} onConfirm={onConfirm} />;\n        case 'DuplicateAccount':\n            return <TryAgain text={localize('Go to live chat')} onConfirm={() => Chat.open()} />;\n        case 'InputValidationFailed':\n        case 'PoBoxInAddress':\n        case 'InvalidPhone':\n            return <TryAgain text={localize('Let’s try again')} onConfirm={onConfirm} />;\n        case 'InvalidAccount':\n            return <TryAgain text={localize('OK')} onConfirm={onConfirm} />;\n\n        default:\n            return (\n                <StaticUrl\n                    href={`help-centre/${code === 'InvalidAccount' ? 'account#who-can-open-an-account' : ''}`}\n                    type='button'\n                    className='dc-btn dc-btn--primary'\n                >\n                    <Text weight='bold' color='white' size='xxs'>\n                        <Localize i18n_default_text='OK' />\n                    </Text>\n                </StaticUrl>\n            );\n    }\n};\n\nconst SignupErrorContent = ({ message, code, onConfirm, className, error_field = {} }) => {\n    const is_invalid_field_error = ['InputValidationFailed', 'PoBoxInAddress', 'InvalidPhone'].includes(code);\n    const getIconSize = () => {\n        if (is_invalid_field_error) return '64';\n        else if (code === 'InvalidAccount') return '96';\n        return '115';\n    };\n    return (\n        <div\n            className={classNames('account-wizard--error', {\n                [`account-wizard--error__${className}`]: className,\n            })}\n        >\n            <Icon icon={is_invalid_field_error ? 'IcInvalidError' : 'IcAccountError'} size={getIconSize()} />\n            <Heading code={code} />\n            <Message code={code} message={message} details={error_field} />\n            <div className='account-wizard--error__cta'>\n                <ErrorCTA code={code} onConfirm={onConfirm} />\n            </div>\n        </div>\n    );\n};\n\nSignupErrorContent.propTypes = {\n    code: PropTypes.string,\n    error_field: PropTypes.object,\n    message: PropTypes.string,\n    onConfirm: PropTypes.func,\n    className: PropTypes.string,\n};\n\nexport default SignupErrorContent;\n","import React from 'react';\nimport { Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\n\nexport const DialogHeading = () => (\n    <Text as='h2' align='center' className='status-dialog__message-header' weight='bold'>\n        <Localize i18n_default_text='Your account is ready' />\n    </Text>\n);\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Text } from '@deriv/components';\nimport { Localize } from '@deriv/translations';\nimport { EXPERIAN } from './constants';\n\n/**\n *\n * @param {String} landing_company_shortcode\n * @param {EXPERIAN} status\n */\nexport const DialogMessage = ({ is_fully_authenticated, landing_company_shortcode, status = EXPERIAN.SUCCESS }) => {\n    let message = '';\n    if (landing_company_shortcode === 'maltainvest') {\n        if (is_fully_authenticated) {\n            message = [\n                <Localize key={0} i18n_default_text='You have added a Deriv Financial account.' />,\n                <Localize key={1} i18n_default_text='Make a deposit now to start trading.' />,\n            ];\n        } else {\n            message = (\n                <Localize i18n_default_text='We need proof of your identity and address before you can start trading.' />\n            );\n        }\n    } else {\n        switch (status) {\n            case EXPERIAN.WARN:\n                message = <Localize i18n_default_text='To get trading, please confirm where you live.' />;\n                break;\n            case EXPERIAN.DANGER:\n                message = (\n                    <Localize i18n_default_text='To get trading, please confirm who you are, and where you live.' />\n                );\n                break;\n            case EXPERIAN.PENDING:\n                message = (\n                    <Localize i18n_default_text=\"You'll be able to get trading as soon as verification is complete.\" />\n                );\n                break;\n            default:\n                message = <Localize i18n_default_text='Fund your account to start trading.' />;\n        }\n    }\n\n    return Array.isArray(message) ? (\n        <>\n            {message.map((text, index) => (\n                <Text\n                    key={index}\n                    as='p'\n                    align='center'\n                    className='status-dialog__message-text'\n                    color='general'\n                    size='xs'\n                >\n                    {text}\n                </Text>\n            ))}\n        </>\n    ) : (\n        <Text as='p' align='center' className='status-dialog__message-text' color='general' size='xs'>\n            {message}\n        </Text>\n    );\n};\n\nDialogMessage.propTypes = {\n    is_fully_authenticated: PropTypes.bool,\n    landing_company_shortcode: PropTypes.string,\n    status: PropTypes.number,\n};\n","import PropTypes from 'prop-types';\nimport React from 'react';\nimport { Button } from '@deriv/components';\nimport { localize } from '@deriv/translations';\nimport { EXPERIAN } from './constants';\n\nconst getActionButton = ({\n    landing_company_shortcode,\n    is_fully_authenticated,\n    closeModalAndOpenCashier,\n    closeModalAndOpenPOI,\n}) => {\n    switch (landing_company_shortcode) {\n        case 'maltainvest':\n            if (is_fully_authenticated) {\n                return {\n                    label: localize('Deposit'),\n                    action: closeModalAndOpenCashier,\n                };\n            }\n            return {\n                label: localize('Submit proof'),\n                action: closeModalAndOpenPOI,\n            };\n        case 'svg':\n        default:\n            return {\n                label: localize('Deposit'),\n                action: closeModalAndOpenCashier,\n            };\n    }\n};\nconst DialogPrimaryButton = ({\n    status,\n    landing_company_shortcode,\n    closeModal,\n    closeModalAndOpenCashier,\n    closeModalAndOpenPOI,\n    closeModalAndOpenPOA,\n    is_fully_authenticated,\n}) => {\n    // Check if the button is necessary\n    // Fetch proper action from store based on status + landing_company_shortcode\n    const { label, action } = getActionButton({\n        status,\n        landing_company_shortcode,\n        is_fully_authenticated,\n        closeModal,\n        closeModalAndOpenCashier,\n        closeModalAndOpenPOI,\n        closeModalAndOpenPOA,\n    });\n\n    return <Button primary text={label} onClick={action} />;\n};\nconst DialogDismissButton = ({ closeModal, is_bypassed }) => {\n    if (is_bypassed) return null;\n\n    return <Button secondary text={localize('Maybe later')} onClick={closeModal} />;\n};\n\nexport const DialogButtons = ({\n    status,\n    landing_company_shortcode,\n    is_fully_authenticated,\n    closeModal,\n    closeModalAndOpenCashier,\n    closeModalAndOpenPOA,\n    closeModalAndOpenPOI,\n}) => {\n    return (\n        <div className='status-dialog__footer'>\n            <DialogDismissButton closeModal={closeModal} is_bypassed={status === EXPERIAN.PENDING} />\n            <DialogPrimaryButton\n                status={status}\n                landing_company_shortcode={landing_company_shortcode}\n                closeModal={closeModal}\n                closeModalAndOpenCashier={closeModalAndOpenCashier}\n                closeModalAndOpenPOI={closeModalAndOpenPOI}\n                closeModalAndOpenPOA={closeModalAndOpenPOA}\n                is_fully_authenticated={is_fully_authenticated}\n            />\n        </div>\n    );\n};\n\nDialogButtons.propTypes = {\n    status: PropTypes.number,\n    landing_company_shortcode: PropTypes.string,\n    is_fully_authenticated: PropTypes.bool,\n    closeModal: PropTypes.func,\n    closeModalAndOpenCashier: PropTypes.func,\n    closeModalAndOpenPOA: PropTypes.func,\n    closeModalAndOpenPOI: PropTypes.func,\n};\n","import classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { useDevice } from '@deriv-com/ui';\nimport { Div100vhContainer, Icon } from '@deriv/components';\nimport { routes } from '@deriv/shared';\nimport { EXPERIAN, getExperianResult } from './helpers/constants';\nimport { DialogHeading } from './helpers/dialog-heading.jsx';\nimport { DialogMessage } from './helpers/dialog-message.jsx';\nimport { DialogButtons } from './helpers/dialog-buttons.jsx';\nimport { observer, useStore } from '@deriv/stores';\n\nconst MainIcon = ({ currency }) => <Icon icon={`IcCurrency-${currency.toLowerCase()}`} size={120} />;\nconst Checkmark = ({ className }) => <Icon className={className} icon='IcCheckmarkCircle' color='green' size={24} />;\nconst Warning = ({ className }) => <Icon className={className} icon='IcAlertDanger' size={24} />;\nconst Danger = ({ className }) => <Icon className={className} icon='IcCrossCircle' size={24} color='red' />;\nconst CloseIcon = ({ closeModal }) => (\n    <div onClick={closeModal} className='status-dialog__close'>\n        <Icon icon='IcCross' />\n    </div>\n);\n\nconst StatusDialogContainer = observer(({ closeModal, currency, history, icon_size }) => {\n    const { isDesktop } = useDevice();\n    const { client } = useStore();\n    const { landing_company_shortcode, is_fully_authenticated } = client;\n    const closeModalAndOpenCashier = () => {\n        closeModal();\n        history.push(routes.cashier_deposit);\n    };\n\n    const closeModalAndOpenPOI = () => {\n        closeModal();\n        history.push(routes.proof_of_identity);\n    };\n\n    const closeModalAndOpenPOA = () => {\n        closeModal();\n        history.push(routes.proof_of_address);\n    };\n\n    /**\n     * Get the status for the current account\n     *\n     * @readonly\n     * @return {EXPERIAN} status\n     */\n    const getStatus = () =>\n        getExperianResult({\n            landing_company_shortcode,\n        });\n\n    return (\n        <Div100vhContainer className='status-dialog' is_disabled={isDesktop} height_offset='40px'>\n            {isDesktop && <CloseIcon closeModal={closeModal} />}\n            <div\n                className={classNames('status-dialog__header', {\n                    'status-dialog__header--large': icon_size === 'large',\n                    'status-dialog__header--xlarge': icon_size === 'xlarge',\n                })}\n            >\n                <MainIcon currency={currency} />\n                {getStatus() === EXPERIAN.SUCCESS && <Checkmark className='bottom-right-overlay' />}\n                {getStatus() === EXPERIAN.WARN && <Warning className='bottom-right-overlay' />}\n                {getStatus() === EXPERIAN.DANGER && <Danger className='bottom-right-overlay' />}\n            </div>\n            <div\n                className={classNames('status-dialog__body', {\n                    'status-dialog__body--no-grow': !isDesktop,\n                })}\n            >\n                <DialogHeading />\n                <DialogMessage\n                    is_fully_authenticated={is_fully_authenticated}\n                    landing_company_shortcode={landing_company_shortcode}\n                    status={getStatus()}\n                />\n            </div>\n            <DialogButtons\n                closeModal={closeModal}\n                closeModalAndOpenPOI={closeModalAndOpenPOI}\n                closeModalAndOpenPOA={closeModalAndOpenPOA}\n                closeModalAndOpenCashier={closeModalAndOpenCashier}\n                is_fully_authenticated={is_fully_authenticated}\n                landing_company_shortcode={landing_company_shortcode}\n                status={getStatus()}\n            />\n        </Div100vhContainer>\n    );\n});\n\nStatusDialogContainer.defaultProps = {\n    icon_size: 'large',\n};\n\nStatusDialogContainer.propTypes = {\n    closeModal: PropTypes.func,\n    currency: PropTypes.string,\n    history: PropTypes.object,\n    icon: PropTypes.object,\n    icon_size: PropTypes.string,\n};\n\nexport default withRouter(StatusDialogContainer);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withRouter } from 'react-router-dom';\nimport { useDevice } from '@deriv-com/ui';\nimport { localize, Localize } from '@deriv/translations';\nimport { Div100vhContainer, Icon, Button, Text } from '@deriv/components';\nimport { observer, useStore } from '@deriv/stores';\nimport { EXPERIAN, getExperianResult } from './helpers/constants';\nimport './new-status-dialog-container.scss';\n\nconst StatusIcon = ({ icon, color }) => (\n    <Icon className='status-container__body-status-icon' icon={icon} color={color} size={32} />\n);\n\nconst NewStatusDialogContainer = observer(({ closeModal, currency }) => {\n    const { isDesktop } = useDevice();\n    const { client, ui } = useStore();\n    const { landing_company_shortcode } = client;\n    const { setShouldShowOneTimeDepositModal } = ui;\n\n    const onOpenDepositModal = () => {\n        closeModal();\n        setShouldShowOneTimeDepositModal(true);\n    };\n\n    /**\n     * Get the status for the current account\n     *\n     * @readonly\n     * @return {EXPERIAN} status\n     */\n    const getStatus = () =>\n        getExperianResult({\n            landing_company_shortcode,\n        });\n\n    return (\n        <Div100vhContainer className='status-container' is_disabled={isDesktop} height_offset='40px'>\n            {isDesktop && (\n                <div onClick={closeModal} className='status-container__header'>\n                    <Icon icon='IcCross' />\n                </div>\n            )}\n\n            <div className='status-container__body'>\n                <div className='status-container__body-icon'>\n                    <Icon icon={`IcCurrency-${currency.toLowerCase()}`} size={96} />\n                    {getStatus() === EXPERIAN.SUCCESS && <StatusIcon icon='IcCheckmarkCircle' color='green' />}\n                    {getStatus() === EXPERIAN.WARN && <StatusIcon icon='IcAlertDanger' />}\n                    {getStatus() === EXPERIAN.DANGER && <StatusIcon icon='IcCrossCircle' color='red' />}\n                </div>\n\n                <Text\n                    className='status-container__body-text'\n                    as='h2'\n                    align='center'\n                    weight='bold'\n                    size='s'\n                    line_height='m'\n                >\n                    <Localize i18n_default_text='Deposit now to start trading' />\n                </Text>\n\n                <Text as='p' align='center' size='xs' line_height='sm'>\n                    <Localize i18n_default_text='Your {{ currency }} account is ready.' values={{ currency }} />\n                </Text>\n            </div>\n\n            <div className='status-container__footer'>\n                {getStatus() !== EXPERIAN.PENDING && (\n                    <Button secondary text={localize('Maybe later')} wide={!isDesktop} onClick={closeModal} />\n                )}\n                <Button\n                    className='status-container__button'\n                    primary\n                    text={localize('Deposit')}\n                    onClick={onOpenDepositModal}\n                    wide={!isDesktop}\n                />\n            </div>\n        </Div100vhContainer>\n    );\n});\n\nNewStatusDialogContainer.propTypes = {\n    closeModal: PropTypes.func,\n    currency: PropTypes.string,\n    closeModalAndOpenDeposit: PropTypes.func,\n};\n\nexport default withRouter(NewStatusDialogContainer);\n","/* eslint-disable react/display-name */\nimport React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport classNames from 'classnames';\nimport { useDevice } from '@deriv-com/ui';\nimport { RiskToleranceWarningModal, TestWarningModal } from '@deriv/account';\nimport { Button, MobileDialog, Modal, Text, UILoader } from '@deriv/components';\nimport { WS, moduleLoader, routes } from '@deriv/shared';\nimport { Localize, localize } from '@deriv/translations';\nimport { observer, useStore } from '@deriv/stores';\nimport AddCurrency from './add-currency.jsx';\nimport AddOrManageAccounts from './add-or-manage-accounts.jsx';\nimport ChooseCurrency from './choose-currency.jsx';\nimport FinishedAddCurrency from './finished-add-currency.jsx';\nimport FinishedSetCurrency from './finished-set-currency.jsx';\nimport SetCurrency from './set-currency.jsx';\nimport SignupErrorContent from './signup-error-content.jsx';\nimport StatusDialogContainer from './status-dialog-container.jsx';\nimport NewStatusDialogContainer from './new-status-dialog-container.jsx';\nimport { Analytics } from '@deriv-com/analytics';\nimport 'Sass/account-wizard.scss';\n\nconst AccountWizard = React.lazy(() =>\n    moduleLoader(() => import(/* webpackChunkName: \"account-wizard-modal\" */ './account-wizard.jsx'))\n);\n\nconst modal_pages_indices = {\n    account_wizard: 0,\n    add_or_manage_account: 1,\n    finished_set_currency: 2,\n    status_dialog: 3,\n    new_status_dialog: 11,\n    set_currency: 4,\n    signup_error: 5,\n    choose_crypto_currency: 6,\n    add_currency: 7,\n    finished_add_currency: 8,\n    restricted_country_signup_error: 9,\n    invalid_input_error: 10,\n};\nlet active_modal_index_no = 0;\n\nconst WizardHeading = ({ currency, real_account_signup_target }) => {\n    const maltainvest_signup = real_account_signup_target === 'maltainvest';\n    const deposit_cash_signup = real_account_signup_target === 'deposit_cash';\n\n    if ((!maltainvest_signup && !currency) || active_modal_index_no === modal_pages_indices.set_currency) {\n        return <Localize i18n_default_text='Set a currency for your real account' />;\n    }\n\n    if (deposit_cash_signup) {\n        return <Localize i18n_default_text='Add a Deriv Gaming account' />;\n    }\n\n    switch (real_account_signup_target) {\n        case 'maltainvest':\n            return <Localize i18n_default_text='Setup your account' />;\n        default:\n            return <Localize i18n_default_text='Add a Deriv account' />;\n    }\n};\n\nconst RealAccountSignup = observer(({ history, state_index, is_trading_experience_incomplete }) => {\n    const { isDesktop } = useDevice();\n    const { ui, client, traders_hub, modules } = useStore();\n    const {\n        available_crypto_currencies,\n        currency,\n        fetchAccountSettings,\n        has_fiat,\n        has_active_real_account: has_real_account,\n        is_from_restricted_country,\n        realAccountSignup,\n        redirectToLegacyPlatform,\n    } = client;\n    const {\n        closeRealAccountSignup,\n        deposit_real_account_signup_target,\n        is_real_acc_signup_on,\n        real_account_signup_target,\n        setIsTradingAssessmentForNewUserEnabled,\n        setIsClosingCreateRealAccountModal,\n        setRealAccountSignupParams: setParams,\n        setShouldShowAppropriatenessWarningModal,\n        setShouldShowRiskWarningModal,\n        should_show_appropriateness_warning_modal,\n        should_show_risk_warning_modal,\n        setShouldShowOneTimeDepositModal,\n        toggleAccountSuccessModal,\n        real_account_signup: state_value,\n        is_trading_assessment_for_new_user_enabled,\n    } = ui;\n    const { show_eu_related_content } = traders_hub;\n    const { deposit_target, setDepositTarget } = modules.cashier.general_store;\n    const setIsDeposit = modules.cashier.general_store.setIsDeposit;\n    const should_show_all_available_currencies = modules.cashier.general_store.should_show_all_available_currencies;\n    const [current_action, setCurrentAction] = React.useState(null);\n    const [is_loading, setIsLoading] = React.useState(false);\n    const [error, setError] = React.useState(null);\n    const [is_risk_warning_visible, setIsRiskWarningVisible] = React.useState(false);\n    const [real_account_form_data, setRealAccountFormData] = React.useState({});\n    const [risk_warning_title, setRiskWarningTitle] = React.useState('');\n    const [modal_content] = React.useState([\n        {\n            action: 'signup',\n            body: local_props => (\n                <React.Suspense fallback={<UILoader />}>\n                    <AccountWizard\n                        setIsRiskWarningVisible={setIsRiskWarningVisible}\n                        onFinishSuccess={showStatusDialog}\n                        onNewFinishSuccess={showNewStatusDialog}\n                        onOpenDepositModal={closeModalthenOpenDepositModal}\n                        onOpenWelcomeModal={closeModalthenOpenWelcomeModal}\n                        is_loading={local_props.is_loading}\n                        setLoading={setLoading}\n                        onError={showErrorModal}\n                        onClose={closeModal}\n                        realAccountSignup={realAccountSignup}\n                        setRealAccountFormData={setRealAccountFormData}\n                    />\n                </React.Suspense>\n            ),\n            title: WizardHeading,\n        },\n        {\n            action: 'multi',\n            body: local_props => (\n                <AddOrManageAccounts\n                    onSuccessSetAccountCurrency={showSetCurrencySuccess}\n                    is_loading={local_props.is_loading}\n                    setLoading={setLoading}\n                    onError={showErrorModal}\n                    is_add_crypto={local_props.real_account_signup_target === 'add_crypto'}\n                    is_add_fiat={local_props.real_account_signup_target === 'add_fiat'}\n                    is_add_currency={local_props.real_account_signup_target === 'add_currency'}\n                    deposit_target={local_props.deposit_target}\n                    onClose={closeModal}\n                />\n            ),\n            title: local_props => {\n                if (local_props.real_account_signup_target === 'add_crypto') {\n                    return localize('Create a cryptocurrency account');\n                } else if (local_props.real_account_signup_target === 'add_fiat') {\n                    return localize('Add a Deriv real account');\n                } else if (local_props.real_account_signup_target === 'add_currency') {\n                    return localize('Create a new account');\n                } else if (local_props.has_fiat && local_props.available_crypto_currencies?.length === 0) {\n                    return localize('Manage account');\n                }\n                return localize('Add or manage account');\n            },\n        },\n        {\n            body: local_props => (\n                <FinishedSetCurrency\n                    prev={local_props.state_value.previous_currency}\n                    current={local_props.state_value.current_currency}\n                    onCancel={closeSetCurrencySuccessModal}\n                    onSubmit={closeModalThenOpenCashier}\n                    deposit_real_account_signup_target={local_props.deposit_real_account_signup_target}\n                    deposit_target={local_props.deposit_target}\n                    closeRealAccountSignup={closeRealAccountSignup}\n                    setIsDeposit={setIsDeposit}\n                    history={history}\n                />\n            ),\n            title: local_props =>\n                local_props.has_fiat && local_props.available_crypto_currencies?.length === 0\n                    ? localize('Manage account')\n                    : localize('Add or manage account'),\n        },\n        {\n            body: local_props => (\n                <StatusDialogContainer\n                    currency={local_props.state_value.currency}\n                    closeModal={closeSetCurrencySuccessModal}\n                />\n            ),\n        },\n        {\n            body: local_props => (\n                <SetCurrency\n                    is_loading={local_props.is_loading}\n                    setLoading={setLoading}\n                    onError={showErrorModal}\n                    onClose={closeModal}\n                    onSuccessSetAccountCurrency={showSetCurrencySuccess}\n                />\n            ),\n            title: WizardHeading,\n        },\n        {\n            body: local_props => (\n                <SignupErrorContent\n                    message={\n                        local_props.state_value.error_message || local_props.state_value.error_code?.message_to_client\n                    }\n                    code={local_props.state_value.error_code}\n                    onConfirm={() => onErrorConfirm(local_props.state_value.error_code)}\n                />\n            ),\n            title: local_props => {\n                if (local_props?.real_account_signup_target === 'add_crypto') {\n                    return localize('Create a cryptocurrency account');\n                } else if (local_props?.real_account_signup_target === 'add_fiat') {\n                    return localize('Add a Deriv real account');\n                } else if (local_props?.real_account_signup_target === 'add_currency') {\n                    return localize('Create a new account');\n                } else if (local_props?.has_fiat && local_props?.available_crypto_currencies?.length === 0) {\n                    return localize('Manage account');\n                } else if (signup_error) {\n                    return null;\n                }\n                return localize('Add or manage account');\n            },\n        },\n        {\n            body: () => <ChooseCurrency className='account-wizard__body' onError={showErrorModal} />,\n            title: local_props =>\n                local_props.should_show_all_available_currencies\n                    ? localize('Choose an account')\n                    : localize('Choose a cryptocurrency account'),\n        },\n        {\n            body: () => <AddCurrency className='account-wizard__body' onError={showErrorModal} />,\n            title: () => localize('Create a new account'),\n        },\n        {\n            body: local_props => (\n                <FinishedAddCurrency\n                    redirectToLegacyPlatform={redirectToLegacyPlatform}\n                    prev={local_props.state_value.previous_currency}\n                    current={local_props.state_value.current_currency}\n                    onSubmit={closeModalThenOpenCashier}\n                    deposit_real_account_signup_target={local_props.deposit_real_account_signup_target}\n                    deposit_target={local_props.deposit_target}\n                    closeRealAccountSignup={closeRealAccountSignup}\n                    setIsDeposit={setIsDeposit}\n                    history={history}\n                />\n            ),\n        },\n        {\n            body: local_props => (\n                <SignupErrorContent\n                    message={\n                        local_props.state_value.error_message || local_props.state_value.error_code?.message_to_client\n                    }\n                    code={local_props.state_value.error_code}\n                    onConfirm={closeRealAccountSignup}\n                    className='restricted-country-error'\n                />\n            ),\n        },\n        {\n            body: local_props => (\n                <SignupErrorContent\n                    message={\n                        local_props.state_value.error_message || local_props.state_value.error_code?.message_to_client\n                    }\n                    code={local_props.state_value.error_code}\n                    onConfirm={onErrorConfirm}\n                    error_field={local_props.state_value}\n                    className='invalid-input-error'\n                />\n            ),\n        },\n        {\n            body: local_props => (\n                <NewStatusDialogContainer\n                    currency={local_props.state_value.currency}\n                    closeModal={closeSetCurrencySuccessModal}\n                />\n            ),\n        },\n    ]);\n\n    const [assessment_decline, setAssessmentDecline] = React.useState(false);\n\n    const trackEvent = React.useCallback(\n        payload => {\n            if (real_account_signup_target === 'maltainvest') return;\n\n            Analytics.trackEvent('ce_real_account_signup_form', {\n                form_source: document.referrer,\n                form_name: 'real_account_signup_form',\n                landing_company: real_account_signup_target,\n                ...payload,\n            });\n        },\n        [real_account_signup_target]\n    );\n\n    React.useEffect(() => {\n        if (is_real_acc_signup_on && real_account_signup_target === 'svg') {\n            trackEvent({ action: 'open' });\n        }\n    }, [is_real_acc_signup_on, real_account_signup_target, trackEvent]);\n\n    const getModalHeight = () => {\n        if (is_from_restricted_country) return '304px';\n        else if ([invalid_input_error, status_dialog, new_status_dialog, signup_error].includes(getActiveModalIndex()))\n            return 'auto';\n        if (!currency || getActiveModalIndex() === modal_pages_indices.set_currency) return '688px'; // Set currency modal\n        if (has_real_account && currency) {\n            if (show_eu_related_content && getActiveModalIndex() === modal_pages_indices.add_or_manage_account) {\n                // Manage account\n                return '420px'; // Since crypto is disabled for EU clients, lower the height of modal\n            }\n            if (\n                [modal_pages_indices.finished_set_currency, modal_pages_indices.finished_add_currency].includes(\n                    getActiveModalIndex()\n                )\n            ) {\n                return 'auto';\n            }\n        }\n        return '740px'; // Account wizard modal\n    };\n    const getModalWidth = () => {\n        if (\n            is_from_restricted_country ||\n            [modal_pages_indices.invalid_input_error, modal_pages_indices.signup_error].includes(getActiveModalIndex())\n        )\n            return '440px';\n        return !has_close_icon ? 'auto' : '955px';\n    };\n\n    const closeModalthenOpenDepositModal = () => {\n        closeRealAccountSignup();\n        if (!client.is_mf_account) {\n            setShouldShowOneTimeDepositModal(true);\n        } else {\n            toggleAccountSuccessModal();\n        }\n    };\n\n    const showStatusDialog = curr => {\n        setParams({\n            active_modal_index: modal_pages_indices.status_dialog,\n            currency: curr,\n        });\n    };\n\n    const showNewStatusDialog = curr => {\n        setParams({\n            active_modal_index: modal_pages_indices.new_status_dialog,\n            currency: curr,\n        });\n    };\n\n    const closeModalthenOpenWelcomeModal = curr => {\n        closeRealAccountSignup();\n        setParams({\n            currency: curr,\n        });\n    };\n\n    const closeModalThenOpenCashier = () => {\n        closeRealAccountSignup();\n        history.push(routes.cashier_deposit);\n    };\n\n    const showSetCurrencySuccess = (previous_currency, current_currency, target) => {\n        setParams({\n            previous_currency,\n            current_currency,\n            active_modal_index: target\n                ? modal_pages_indices.finished_add_currency\n                : modal_pages_indices.finished_set_currency,\n        });\n    };\n\n    const setLoading = is_loading_val => {\n        setIsLoading(is_loading_val);\n    };\n\n    const cacheFormValues = payload => {\n        localStorage.setItem(\n            'real_account_signup_wizard',\n            JSON.stringify(\n                payload.map(item => {\n                    if (typeof item.form_value === 'object') {\n                        return item.form_value;\n                    }\n                    return false;\n                })\n            )\n        );\n    };\n\n    const showErrorModal = (err, payload) => {\n        if (payload) {\n            cacheFormValues(payload);\n        }\n\n        setCurrentAction(modal_content[getActiveModalIndex()]?.action);\n        setError(err);\n\n        trackEvent({\n            action: 'other_error',\n            real_signup_error_message: err,\n        });\n    };\n\n    React.useEffect(() => {\n        setRiskWarningTitle(localize('Risk Tolerance Warning'));\n        return () => setIsTradingAssessmentForNewUserEnabled(is_trading_experience_incomplete);\n    }, []);\n\n    // setCurrentAction callback useEffect to set error details\n    React.useEffect(() => {\n        if (!error) return;\n        setParams({\n            active_modal_index: ['InputValidationFailed', 'PoBoxInAddress', 'InvalidPhone'].includes(error.code)\n                ? modal_pages_indices.invalid_input_error\n                : modal_pages_indices.signup_error,\n            error_message: error.message,\n            error_code: error.code,\n            ...(error.code === 'InputValidationFailed' && { error_details: error.details }),\n        });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [error]);\n\n    React.useEffect(() => {\n        if (!is_from_restricted_country) return;\n        setParams({\n            active_modal_index: modal_pages_indices.restricted_country_signup_error,\n            error_message: localize('Adding more real accounts has been restricted for your country.'),\n            error_code: 'InvalidAccount',\n        });\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [is_from_restricted_country, is_real_acc_signup_on]);\n\n    const closeSetCurrencySuccessModal = e => {\n        // Do not close modal on external link and popover click event\n        if (\n            e?.target.getAttribute('rel') === 'noopener noreferrer' ||\n            e?.target.closest('.redirect-notice') ||\n            e?.target.closest('.dc-popover__bubble')\n        ) {\n            return;\n        }\n        if (\n            getActiveModalIndex() !== modal_pages_indices.status_dialog ||\n            getActiveModalIndex() !== modal_pages_indices.new_status_dialog\n        ) {\n            sessionStorage.removeItem('post_real_account_signup');\n            localStorage.removeItem('real_account_signup_wizard');\n        }\n        closeRealAccountSignup();\n    };\n\n    const closeModal = e => {\n        // Do not close modal on external link and popover click event\n        if (\n            !e ||\n            e?.target.getAttribute('rel') === 'noopener noreferrer' ||\n            e?.target.closest('.redirect-notice') ||\n            e?.target.closest('.dc-popover__bubble')\n        ) {\n            return;\n        }\n        if (\n            getActiveModalIndex() !== modal_pages_indices.status_dialog ||\n            getActiveModalIndex() !== modal_pages_indices.new_status_dialog\n        ) {\n            sessionStorage.removeItem('post_real_account_signup');\n            localStorage.removeItem('real_account_signup_wizard');\n        }\n\n        if (deposit_target === routes.cashier_onramp) setDepositTarget('');\n\n        if (modal_content[getActiveModalIndex()].action === 'signup') {\n            setIsClosingCreateRealAccountModal(true);\n\n            return;\n        }\n        closeRealAccountSignup();\n        redirectToLegacyPlatform();\n    };\n\n    const onErrorConfirm = err_code => {\n        const addOrManageAccountErrorType = ['CurrencyTypeNotAllowed', 'DuplicateCurrency'];\n        setLoading(true);\n        setParams({\n            active_modal_index:\n                current_action === 'multi' || addOrManageAccountErrorType.includes(err_code)\n                    ? modal_pages_indices.add_or_manage_account\n                    : modal_pages_indices.account_wizard,\n        });\n    };\n\n    const getIsManageTarget = () => {\n        return real_account_signup_target === 'manage';\n    };\n\n    const getActiveModalIndex = () => {\n        if (real_account_signup_target === 'choose') {\n            active_modal_index_no = modal_pages_indices.choose_crypto_currency;\n            return active_modal_index_no;\n        }\n        if (['add_crypto', 'add_fiat', 'add_currency'].includes(real_account_signup_target)) {\n            active_modal_index_no = modal_pages_indices.add_or_manage_account;\n            return active_modal_index_no;\n        }\n        if (state_value.active_modal_index === -1) {\n            if (has_real_account && currency && getIsManageTarget()) {\n                active_modal_index_no = modal_pages_indices.add_or_manage_account;\n            } else {\n                active_modal_index_no =\n                    real_account_signup_target === 'set_currency'\n                        ? modal_pages_indices.set_currency\n                        : modal_pages_indices.account_wizard;\n            }\n        } else {\n            active_modal_index_no = state_value.active_modal_index;\n        }\n        return active_modal_index_no;\n    };\n\n    // set title and body of the modal\n    const { title: Title, body: ModalContent } = modal_content[getActiveModalIndex()];\n    const {\n        account_wizard,\n        add_or_manage_account,\n        finished_set_currency,\n        status_dialog,\n        new_status_dialog,\n        set_currency,\n        signup_error,\n        restricted_country_signup_error,\n        invalid_input_error,\n    } = modal_pages_indices;\n\n    const has_close_icon = [account_wizard, add_or_manage_account, set_currency, signup_error].includes(\n        getActiveModalIndex()\n    );\n\n    const handleOnAccept = async () => {\n        setLoading(true);\n        try {\n            const response = await realAccountSignup({ ...real_account_form_data, accept_risk: 1 });\n            WS.authorized.getAccountStatus().then(status => {\n                const { get_account_status } = status;\n                setShouldShowAppropriatenessWarningModal(false);\n\n                if (\n                    real_account_signup_target === 'maltainvest' &&\n                    !get_account_status?.status?.includes('cashier_locked')\n                ) {\n                    closeModalthenOpenDepositModal();\n                } else {\n                    showStatusDialog(response?.new_account_maltainvest?.currency.toLowerCase());\n                    showNewStatusDialog(response?.new_account_maltainvest?.currency.toLowerCase());\n                }\n            });\n        } catch (sign_up_error) {\n            // TODO: Handle Error\n        } finally {\n            fetchAccountSettings();\n            setLoading(false);\n        }\n    };\n\n    const handleOnDecline = async () => {\n        setLoading(true);\n        setAssessmentDecline(true);\n        try {\n            await realAccountSignup({ ...real_account_form_data, accept_risk: 0 });\n        } catch (sign_up_error) {\n            setRiskWarningTitle(localize('24-hour Cool Down Warning'));\n            if (sign_up_error.code === 'AppropriatenessTestFailed') {\n                setShouldShowAppropriatenessWarningModal(false);\n                setShouldShowRiskWarningModal(true);\n            }\n            // TODO: Handle Error case\n        } finally {\n            fetchAccountSettings();\n            setLoading(false);\n        }\n    };\n\n    const handleRiskAcceptance = () => {\n        closeRealAccountSignup();\n        setShouldShowRiskWarningModal(false);\n        setAssessmentDecline(false);\n    };\n\n    if (assessment_decline) {\n        return (\n            <RiskToleranceWarningModal\n                show_risk_modal={assessment_decline}\n                title={risk_warning_title}\n                handleAcceptRisk={handleRiskAcceptance}\n                body_content={\n                    <Localize\n                        i18n_default_text='CFDs and other financial instruments come with a high risk of losing money rapidly due to leverage. You should consider whether you understand how CFDs and other financial instruments work and whether you can afford to take the risk of losing your money. <0/><0/>\n                        As you have declined our previous warning, you would need to wait 24 hours before you can proceed further.'\n                        components={[<br key={0} />]}\n                    />\n                }\n            />\n        );\n    } else if (is_trading_assessment_for_new_user_enabled && should_show_risk_warning_modal) {\n        return (\n            <RiskToleranceWarningModal\n                show_risk_modal={should_show_risk_warning_modal}\n                title={risk_warning_title}\n                handleAcceptRisk={handleRiskAcceptance}\n                body_content={\n                    <Localize\n                        i18n_default_text='CFDs and other financial instruments come with a high risk of losing money rapidly due to leverage. You should consider whether you understand how CFDs and other financial instruments work and whether you can afford to take the high risk of losing your money. <0/><0/> To continue, kindly note that you would need to wait 24 hours before you can proceed further.'\n                        components={[<br key={0} />]}\n                    />\n                }\n            />\n        );\n    } else if (should_show_appropriateness_warning_modal) {\n        return (\n            <TestWarningModal\n                show_risk_modal={should_show_appropriateness_warning_modal}\n                body_content={\n                    <Text as='p' size='xs'>\n                        <Localize\n                            i18n_default_text='In providing our services to you, we are required to ask you for some information to assess if a given product or service is appropriate for you and whether you have the experience and knowledge to understand the risks involved.<0/><0/>'\n                            components={[<br key={0} />]}\n                        />\n                        <Localize\n                            i18n_default_text='On the basis of the information provided in relation to your knowledge and experience, we consider that the investments available via this website are not appropriate for you.<0/><0/>'\n                            components={[<br key={0} />]}\n                        />\n                        <Localize i18n_default_text='By clicking ‘Accept’ and proceeding with the account opening, you should note that you may be exposing yourself to risks. These risks, which may be significant, include the risk of losing the entire sum invested, and you may not have the knowledge and experience to properly assess or mitigate them.' />\n                    </Text>\n                }\n                footer_content={\n                    <React.Fragment>\n                        <Button type='button' large text={localize('Decline')} secondary onClick={handleOnDecline} />\n                        <Button\n                            type='button'\n                            large\n                            text={localize('Accept')}\n                            primary\n                            onClick={handleOnAccept}\n                            is_loading={is_loading}\n                        />\n                    </React.Fragment>\n                }\n            />\n        );\n    }\n\n    return (\n        <React.Fragment>\n            {is_real_acc_signup_on && (\n                <React.Fragment>\n                    {isDesktop ? (\n                        <Modal\n                            id='real_account_signup_modal'\n                            className={classNames('real-account-signup-modal', {\n                                'dc-modal__container_real-account-signup-modal--error': [\n                                    signup_error,\n                                    restricted_country_signup_error,\n                                    invalid_input_error,\n                                ].includes(getActiveModalIndex()),\n                                'dc-modal__container_real-account-signup-modal--success': [\n                                    finished_set_currency,\n                                    status_dialog,\n                                ].includes(getActiveModalIndex()),\n                            })}\n                            is_open={is_real_acc_signup_on}\n                            is_risk_warning_visible={is_risk_warning_visible}\n                            has_close_icon={real_account_signup_target !== 'samoa'}\n                            is_title_centered={real_account_signup_target === 'samoa'}\n                            renderTitle={() => {\n                                if (Title && ![finished_set_currency, status_dialog].includes(getActiveModalIndex())) {\n                                    return (\n                                        <Title\n                                            available_crypto_currencies={available_crypto_currencies}\n                                            currency={currency}\n                                            has_fiat={has_fiat}\n                                            is_eu={show_eu_related_content}\n                                            real_account_signup_target={real_account_signup_target}\n                                            should_show_all_available_currencies={should_show_all_available_currencies}\n                                        />\n                                    );\n                                }\n\n                                return null;\n                            }}\n                            toggleModal={closeModal}\n                            height={getModalHeight()}\n                            width={getModalWidth()}\n                            elements_to_ignore={[document.querySelector('.modal-root')]}\n                        >\n                            <ModalContent\n                                state_value={state_value}\n                                passthrough={state_index}\n                                is_loading={is_loading}\n                                real_account_signup_target={real_account_signup_target}\n                                deposit_real_account_signup_target={deposit_real_account_signup_target}\n                                deposit_target={deposit_target}\n                            />\n                        </Modal>\n                    ) : (\n                        <MobileDialog\n                            portal_element_id='modal_root'\n                            wrapper_classname='account-signup-mobile-dialog'\n                            visible={is_real_acc_signup_on}\n                            onClose={closeModal}\n                            has_full_height={getActiveModalIndex() === modal_pages_indices.signup_error}\n                            renderTitle={() => {\n                                if (Title) {\n                                    return (\n                                        <Title\n                                            currency={currency}\n                                            real_account_signup_target={real_account_signup_target}\n                                            should_show_all_available_currencies={should_show_all_available_currencies}\n                                        />\n                                    );\n                                }\n\n                                return null;\n                            }}\n                        >\n                            <ModalContent\n                                state_value={state_value}\n                                passthrough={state_index}\n                                is_loading={is_loading}\n                                real_account_signup_target={real_account_signup_target}\n                                deposit_real_account_signup_target={deposit_real_account_signup_target}\n                                deposit_target={deposit_target}\n                            />\n                        </MobileDialog>\n                    )}\n                </React.Fragment>\n            )}\n        </React.Fragment>\n    );\n});\n\nexport default withRouter(RealAccountSignup);\n","import RealAccountSignup from './real-account-signup.jsx';\n\nexport default RealAccountSignup;\n","import React from 'react';\nimport { Loading } from '@deriv/components';\n\nconst LoadingModal = props => (\n    <div className='account-signup-loader'>\n        <Loading {...props} is_fullscreen={false} />\n    </div>\n);\n\nexport default LoadingModal;\n","import React from 'react';\nimport { Button, Modal } from '@deriv/components';\nimport { useHasSetCurrency } from '@deriv/hooks';\nimport { localize } from '@deriv/translations';\nimport { observer, useStore } from '@deriv/stores';\nimport 'Sass/set-currency-modal.scss';\n\nconst SetAccountCurrencyModal = observer(() => {\n    const { client, ui } = useStore();\n    const { is_virtual } = client;\n    const {\n        is_set_currency_modal_visible: is_visible,\n        openRealAccountSignup: setCurrency,\n        toggleSetCurrencyModal: toggleModal,\n    } = ui;\n    const has_set_currency = useHasSetCurrency();\n\n    return (\n        <Modal\n            id='dt_set_account_currency_modal'\n            has_close_icon={false}\n            is_open={is_visible}\n            small\n            toggleModal={toggleModal}\n            title={\n                !has_set_currency\n                    ? localize('No currency assigned to your account')\n                    : localize('You have an account that needs action')\n            }\n        >\n            <Modal.Body>\n                {localize('Please set a currency for your existing real account before creating another account.')}\n            </Modal.Body>\n            <Modal.Footer>\n                {!is_virtual ? (\n                    <>\n                        <Button has_effect text={localize('Cancel')} onClick={toggleModal} secondary />\n                        <Button\n                            has_effect\n                            text={localize('Set currency')}\n                            onClick={() => {\n                                toggleModal();\n                                // timeout is to ensure no jumpy animation when modals are overlapping enter/exit transitions\n                                setTimeout(() => {\n                                    setCurrency('set_currency');\n                                }, 250);\n                            }}\n                            primary\n                        />\n                    </>\n                ) : (\n                    <Button has_effect text={localize('OK')} onClick={toggleModal} primary />\n                )}\n            </Modal.Footer>\n        </Modal>\n    );\n});\n\nexport default SetAccountCurrencyModal;\n","import SetAccountCurrencyModal from './set-currency-modal.jsx';\n\nexport default SetAccountCurrencyModal;\n","import React from 'react';\n\n/**\n * Listens on emitted events to show notification on available updates.\n *  - IgnorePWAUpdate event will prevent notification\n *  - ListenPWAUpdate event is usefull to re-assign notify on update behavior\n * @param onUpdate\n * @return {null}\n * @constructor\n */\nconst NewVersionNotification = ({ onUpdate }) => {\n    React.useEffect(() => {\n        const removeUpdateListener = () => {\n            document.removeEventListener('UpdateAvailable', onUpdate);\n        };\n\n        const addUpdateListener = () => {\n            document.addEventListener('UpdateAvailable', onUpdate);\n        };\n\n        document.addEventListener('UpdateAvailable', onUpdate);\n        document.addEventListener('IgnorePWAUpdate', removeUpdateListener);\n        document.addEventListener('ListenPWAUpdate', addUpdateListener);\n\n        return () => {\n            document.removeEventListener('IgnorePWAUpdate', removeUpdateListener);\n            document.removeEventListener('ListenPWAUpdate', addUpdateListener);\n            document.removeEventListener('UpdateAvailable', onUpdate);\n        };\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return null;\n};\n\nexport default NewVersionNotification;\n","import { routes } from '@deriv/shared';\nimport { useStore } from '@deriv/stores';\n\nimport useIsHubRedirectionEnabled from './useIsHubRedirectionEnabled';\n\n// Define allowed redirect destinations as a type-safe enum\nexport type RedirectDestination = 'home' | 'account-limits';\n\nexport const useAccountSettingsRedirect = (redirect_to: RedirectDestination = 'home') => {\n    const { client } = useStore();\n    const { has_wallet } = client;\n    const { isHubRedirectionEnabled } = useIsHubRedirectionEnabled();\n    const search_params = new URLSearchParams(window.location.search);\n    const account_type = search_params.get('account');\n\n    let redirect_url, mobile_redirect_url;\n\n    // Determine if we should use the new hub endpoints\n    const should_use_hub = has_wallet && isHubRedirectionEnabled;\n\n    if (should_use_hub) {\n        const base_url =\n            process.env.NODE_ENV === 'production' ? 'https://hub.deriv.com' : 'https://staging-hub.deriv.com';\n\n        redirect_url = `${base_url}/accounts/redirect?action=redirect_to&redirect_to=${redirect_to}&account=${account_type}`;\n        mobile_redirect_url = `${base_url}/accounts/redirect?action=redirect_to&redirect_to=${redirect_to}&account=${account_type}`;\n    } else {\n        // Map redirect_to values to specific routes when not using hub redirection\n        switch (redirect_to) {\n            case 'account-limits':\n                redirect_url = routes.account_limits;\n                break;\n            case 'home':\n            default:\n                redirect_url = routes.personal_details;\n                break;\n        }\n        mobile_redirect_url = routes.account;\n    }\n\n    return { redirect_url, mobile_redirect_url };\n};\n\nexport default useAccountSettingsRedirect;\n","import { useStore } from '@deriv/stores';\nimport useHasMaltaInvestAccount from './useHasMaltaInvestAccount';\n\nconst useAccountTransferVisible = () => {\n    const { client } = useStore();\n    const { landing_company_shortcode, residence } = client;\n    const has_malta_invest_account = useHasMaltaInvestAccount();\n    const is_account_transfer_visible =\n        residence !== 'im' && (landing_company_shortcode !== 'malta' || has_malta_invest_account);\n\n    return is_account_transfer_visible;\n};\n\nexport default useAccountTransferVisible;\n","import { useMemo } from 'react';\n\nimport { useFetch } from '@deriv/api';\nimport { useStore } from '@deriv/stores';\n\n/** A custom hook that authorize the user with the given token. If no token is given, it will use the current token. */\nconst useAuthorize = (token?: string) => {\n    const { client } = useStore();\n    const { accounts, loginid = '' } = client;\n    const current_token = accounts[loginid || '']?.token;\n\n    const { data, ...rest } = useFetch('authorize', {\n        payload: { authorize: token ?? current_token },\n        options: { enabled: Boolean(token ?? current_token), refetchOnWindowFocus: false },\n    });\n\n    // Add additional information to the authorize response.\n    const modified_authorize = useMemo(() => ({ ...data?.authorize }), [data?.authorize]);\n\n    return {\n        /** The authorize response. */\n        data: modified_authorize,\n        ...rest,\n    };\n};\n\nexport default useAuthorize;\n","import { useStore } from '@deriv/stores';\n\nconst useHasActiveRealAccount = () => {\n    const { client } = useStore();\n    const { active_accounts } = client;\n\n    const has_active_real_account = active_accounts.some(account => account.is_virtual === 0);\n\n    return has_active_real_account;\n};\n\nexport default useHasActiveRealAccount;\n","import { useStore } from '@deriv/stores';\n\nconst useHasMaltaInvestAccount = () => {\n    const { client } = useStore();\n    const { active_accounts } = client;\n    const has_malta_invest_account = active_accounts.some(\n        account => account.landing_company_shortcode === 'maltainvest'\n    );\n\n    return has_malta_invest_account;\n};\n\nexport default useHasMaltaInvestAccount;\n","import { useStore } from '@deriv/stores';\nimport useHasActiveRealAccount from './useHasActiveRealAccount';\n\nconst useHasSetCurrency = () => {\n    const { client } = useStore();\n    const { account_list } = client;\n    const has_active_real_account = useHasActiveRealAccount();\n\n    const has_real_account = account_list\n        .filter(account => !account.is_virtual)\n        .some(account => account.title !== 'Real' && account.title !== 'Investment');\n\n    const has_set_currency = has_real_account || !has_active_real_account;\n\n    return has_set_currency;\n};\n\nexport default useHasSetCurrency;\n","import { useStore } from '@deriv/stores';\n\nconst useHasSvgAccount = () => {\n    const { client } = useStore();\n    const { active_accounts } = client;\n    const has_svg_account = active_accounts.some(account => account.landing_company_shortcode === 'svg');\n\n    return has_svg_account;\n};\n\nexport default useHasSvgAccount;\n","import { useEffect, useState } from 'react';\n\nconst useIsLiveChatWidgetAvailable = () => {\n    const [is_livechat_available, setIsLivechatAvailable] = useState(false);\n\n    useEffect(() => {\n        window.LiveChatWidget?.on('ready', data => {\n            if (data.state.availability === 'online') setIsLivechatAvailable(true);\n        });\n    }, []);\n\n    return {\n        is_livechat_available,\n    };\n};\n\nexport default useIsLiveChatWidgetAvailable;\n","import { useStore } from '@deriv/stores';\nimport useHasMaltaInvestAccount from './useHasMaltaInvestAccount';\nimport useHasSvgAccount from './useHasSvgAccount';\n\nconst useIsRealAccountNeededForCashier = () => {\n    const { traders_hub } = useStore();\n    const { is_eu_user, is_real } = traders_hub;\n\n    const has_svg_account = useHasSvgAccount();\n    const has_maltainvest_account = useHasMaltaInvestAccount();\n\n    const no_real_mf_account = has_svg_account && !has_maltainvest_account && is_eu_user;\n\n    const no_real_cr_account = !has_svg_account && has_maltainvest_account && !is_eu_user;\n\n    const is_real_account_needed = no_real_mf_account || no_real_cr_account;\n\n    const is_real_account_needed_for_cashier = is_real_account_needed && is_real;\n\n    return is_real_account_needed_for_cashier;\n};\n\nexport default useIsRealAccountNeededForCashier;\n","import { useStore } from '@deriv/stores';\n\nconst useOnrampVisible = () => {\n    const { client } = useStore();\n    const { website_status, currency, is_virtual } = client;\n\n    const is_onramp_visible =\n        !is_virtual &&\n        !!website_status?.currencies_config?.[currency] &&\n        //@ts-expect-error need to update `@deriv/api-types` library to the latest version\n        website_status?.currencies_config?.[currency].platform.ramp.length > 0;\n\n    return is_onramp_visible;\n};\n\nexport default useOnrampVisible;\n","import { useEffect, useState } from 'react';\nimport { useStore } from '@deriv/stores';\n\ntype TNotification = {\n    order_id: string;\n    is_seen: boolean;\n    is_active: boolean;\n};\n\ntype TClientData = {\n    is_cached: boolean;\n    notifications: TNotification[];\n};\n\ntype TP2PSettings = Record<string, TClientData>;\n\nconst useP2PNotificationCount = () => {\n    const [p2p_settings, setP2PSettings] = useState<TP2PSettings>(\n        JSON.parse(localStorage.getItem('p2p_settings') || '{}')\n    );\n    const { client } = useStore();\n    const { loginid } = client;\n    const notifications = loginid ? p2p_settings[loginid]?.notifications : null;\n\n    useEffect(() => {\n        const onStorageChanged = () => {\n            const data = localStorage.getItem('p2p_settings');\n\n            if (data) {\n                setP2PSettings(JSON.parse(data));\n            }\n        };\n\n        window.addEventListener('storage', onStorageChanged);\n\n        return () => {\n            window.removeEventListener('storage', onStorageChanged);\n        };\n    }, []);\n\n    const p2p_notification_count = notifications?.filter(notification => !notification.is_seen).length || 0;\n\n    return p2p_notification_count;\n};\n\nexport default useP2PNotificationCount;\n","import { useContext } from 'react';\nimport { P2PSettingsContext } from '@deriv/stores';\n\n/**\n * A custom hook to get the p2p_settings information from `p2p_settings` endpoint\n */\nconst useP2PSettings = () => {\n    const context = useContext(P2PSettingsContext);\n\n    if (!context) {\n        throw new Error('useP2PSettingsContext must be used within a P2PSettingsProvider');\n    }\n\n    return context;\n};\n\nexport default useP2PSettings;\n","import { useFetch } from '@deriv/api';\nimport { useStore } from '@deriv/stores';\n\nconst usePaymentAgentList = (currency?: string) => {\n    const { client } = useStore();\n    const { residence } = client;\n\n    const { data, ...rest } = useFetch('paymentagent_list', {\n        payload: { paymentagent_list: residence, currency },\n        options: { enabled: Boolean(residence) },\n    });\n\n    return {\n        data: data?.paymentagent_list?.list,\n        ...rest,\n    };\n};\n\nexport default usePaymentAgentList;\n","import { useFetch } from '@deriv/api';\nimport { WS } from '@deriv/shared';\nimport { useStore } from '@deriv/stores';\nimport { useEffect, useState } from 'react';\n\nconst usePaymentAgentTransferVisible = () => {\n    const { client } = useStore();\n    const { is_authorize, is_logged_in } = client;\n    const [is_websocket_authorized, setIsWebSocketAuthorized] = useState(false);\n\n    useEffect(() => {\n        const checkAuthorize = async () => {\n            try {\n                const check_websocket_authorized = await WS.wait('authorize');\n                if (check_websocket_authorized) setIsWebSocketAuthorized(is_authorize && is_logged_in);\n            } catch (error) {\n                console.error('Error while authorizing:', error); // eslint-disable-line\n            }\n        };\n\n        checkAuthorize();\n    }, [is_authorize, is_logged_in]);\n\n    const { data, ...rest } = useFetch('get_settings', {\n        options: { enabled: Boolean(is_websocket_authorized), refetchOnWindowFocus: false },\n    });\n    const is_payment_agent_transfer_visible = Boolean(data?.get_settings?.is_authenticated_payment_agent);\n\n    return {\n        data: is_payment_agent_transfer_visible,\n        ...rest,\n    };\n};\n\nexport default usePaymentAgentTransferVisible;\n","import { useMemo } from 'react';\nimport useStoreWalletAccountsList from './useStoreWalletAccountsList';\n\ntype TLinkedAccount = {\n    loginid?: string;\n    platform?: Exclude<'ctrader' | 'derivez' | 'dtrade' | 'dxtrade' | 'mt5', 'dwallet'>;\n};\n\ntype TReturnObjectType = {\n    [key in Exclude<TLinkedAccount['platform'], undefined>]: TLinkedAccount[];\n};\n\n/** A custom hook to get the list of linked accounts of all wallets */\nconst useStoreLinkedWalletsAccounts = () => {\n    const { data: wallets_list } = useStoreWalletAccountsList();\n\n    // define object with accounts\n    const linked_trading_accounts = useMemo(() => {\n        const linked_accounts: TReturnObjectType = {\n            ctrader: [],\n            derivez: [],\n            dtrade: [],\n            dxtrade: [],\n            mt5: [],\n        };\n\n        wallets_list?.forEach(account => {\n            const linked = account.linked_to as TLinkedAccount[];\n\n            linked?.forEach(linked_to_account => {\n                if (linked_to_account?.platform && linked_to_account?.loginid)\n                    linked_accounts[linked_to_account.platform].push(linked_to_account);\n            });\n        });\n\n        return linked_accounts;\n    }, [wallets_list]);\n\n    /** List of wallets for current user. */\n    return linked_trading_accounts;\n};\n\nexport default useStoreLinkedWalletsAccounts;\n","import { useMemo } from 'react';\nimport { useStore } from '@deriv/stores';\n\nconst currency_to_icon_mapper: Record<string, Record<'light' | 'dark', string>> = {\n    Demo: {\n        dark: 'IcWalletDerivDemoDark',\n        light: 'IcWalletDerivDemoLight',\n    },\n    USD: {\n        dark: 'IcWalletCurrencyUsd',\n        light: 'IcWalletCurrencyUsd',\n    },\n    EUR: {\n        dark: 'IcWalletCurrencyEur',\n        light: 'IcWalletCurrencyEur',\n    },\n    AUD: {\n        dark: 'IcWalletCurrencyAud',\n        light: 'IcWalletCurrencyAud',\n    },\n    GBP: {\n        dark: 'IcWalletCurrencyGbp',\n        light: 'IcWalletCurrencyGbp',\n    },\n    BTC: {\n        dark: 'IcWalletBitcoinDark',\n        light: 'IcWalletBitcoinLight',\n    },\n    ETH: {\n        dark: 'IcWalletEthereumDark',\n        light: 'IcWalletEthereumLight',\n    },\n    USDT: {\n        dark: 'IcWalletTetherDark',\n        light: 'IcWalletTetherLight',\n    },\n    eUSDT: {\n        dark: 'IcWalletTetherDark',\n        light: 'IcWalletTetherLight',\n    },\n    tUSDT: {\n        dark: 'IcWalletTetherDark',\n        light: 'IcWalletTetherLight',\n    },\n    UST: {\n        dark: 'IcWalletTetherDark',\n        light: 'IcWalletTetherLight',\n    },\n    LTC: {\n        dark: 'IcWalletLiteCoinDark',\n        light: 'IcWalletLiteCoinLight',\n    },\n    USDC: {\n        dark: 'IcWalletUsdCoinDark',\n        light: 'IcWalletUsdCoinLight',\n    },\n    XRP: {\n        dark: 'IcWalletXrpDark',\n        light: 'IcWalletXrpLight',\n    },\n};\n\n/** A custom hook to get the list of wallets for the current user. */\nconst useStoreWalletAccountsList = () => {\n    const { client } = useStore();\n    const { accounts, is_crypto } = client;\n\n    // Add additional information to each wallet.\n    const wallets = useMemo(() => {\n        return Object.keys(accounts)\n            ?.filter(id => accounts?.[id].account_category === 'wallet')\n            ?.map(id => {\n                const wallet = accounts?.[id];\n\n                const loginid = id;\n                const currency = wallet.currency;\n                const is_disabled = Boolean(wallet.is_disabled);\n                const is_virtual = Boolean(wallet.is_virtual);\n\n                const fiat_or_crypto = is_crypto(currency) ? 'crypto' : 'fiat';\n                const icon_type = is_virtual ? 'demo' : fiat_or_crypto;\n                const landing_company_name = wallet.landing_company_name?.replace('maltainvest', 'malta');\n                const is_malta_wallet = landing_company_name === 'malta';\n                const dtrade_loginid = wallet?.linked_to?.find(account => account?.platform === 'dtrade')?.loginid;\n                const dtrade_balance = accounts?.[dtrade_loginid ?? '']?.balance;\n                const is_dtrader_account_disabled = Boolean(accounts?.[dtrade_loginid ?? '']?.is_disabled);\n\n                const wallet_currency_type = is_virtual ? 'Demo' : currency || '';\n                const icons = currency_to_icon_mapper[wallet_currency_type];\n\n                const gradients = {\n                    /** The gradient class name for the wallet header background. */\n                    header: {\n                        dark: `wallet-header__${wallet_currency_type.toLowerCase()}-bg--dark`,\n                        light: `wallet-header__${wallet_currency_type.toLowerCase()}-bg`,\n                    },\n                    /** The gradient class name for the wallet card background. */\n                    card: {\n                        dark: `wallet-card__${wallet_currency_type.toLowerCase()}-bg--dark`,\n                        light: `wallet-card__${wallet_currency_type.toLowerCase()}-bg`,\n                    },\n                };\n\n                return {\n                    ...wallet,\n                    dtrade_loginid,\n                    dtrade_balance,\n                    icons,\n                    icon_type,\n                    is_disabled,\n                    is_virtual,\n                    is_malta_wallet,\n                    landing_company_name,\n                    loginid,\n                    gradients,\n                    is_dtrader_account_disabled,\n                } as const;\n            });\n    }, [accounts, is_crypto]);\n\n    // Sort wallet accounts alphabetically by fiat, crypto, then virtual.\n    const sorted_wallets = useMemo(() => {\n        if (!wallets) return;\n\n        return [...wallets].sort((a, b) => {\n            if (a.is_virtual !== b.is_virtual) {\n                return a.is_virtual ? 1 : -1;\n            } else if (is_crypto(a.currency) !== is_crypto(b.currency)) {\n                return is_crypto(a.currency) ? 1 : -1;\n            }\n\n            return (a.currency || 'USD').localeCompare(b.currency || 'USD');\n        });\n    }, [is_crypto, wallets]);\n\n    return {\n        /** List of wallets for current user. */\n        data: sorted_wallets,\n        /** Indicating whether the user has a wallet */\n        has_wallet: sorted_wallets && sorted_wallets.length > 0,\n    };\n};\n\nexport default useStoreWalletAccountsList;\n"],"names":["e","self","module","exports","r","Object","getOwnPropertySymbols","t","prototype","hasOwnProperty","n","propertyIsEnumerable","assign","String","getOwnPropertyNames","fromCharCode","map","join","split","forEach","keys","o","c","s","i","TypeError","a","arguments","length","l","call","u","Symbol","for","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactCurrentOwner","key","ref","__self","__source","defaultProps","$$typeof","type","props","_owner","current","jsx","jsxs","react","d","defineProperty","enumerable","get","Array","isArray","default","children","label","className","is_title_enabled","is_fiat","item_count","description","__esModule","j","f","m","p","_","v","id","test","Localize","i18n_default_text","components","Popover","alignment","disable_message_icon","icon","is_bubble_hover_enabled","message","zIndex","field","name","value","onChange","onBlur","second_line_label","onClick","Fragment","checked","disabled","selected","htmlFor","Icon","toLowerCase","getCurrencyDisplayCode","currency","supported_in","default_value","rules","localize","real_account_signup_target","header","active_title","title","body","form_value","getDefaultFields","validate","generateValidationFunction","passthrough","Y","globalThis","window","g","Function","useLayoutEffect","useEffect","defaultValue","initializeWithValue","matchMedia","matches","useState","addListener","addEventListener","removeListener","removeEventListener","isDesktop","isMobile","isTablet","isTabletPortrait","isMobileOrTabletLandscape","show_risk_modal","handleAcceptRisk","button_text","body_content","has_sub_header","useTranslations","Modal","width","height","is_open","toggleModal","has_close_icon","Body","size","Text","as","align","line_height","Footer","Button","large","text","primary","MobileDialog","visible","portal_element_id","weight","_ref","popover_message","_jsx","_objectWithoutProperties","_excluded","_jsxs","React","_objectSpread","clsx","USTPopover","Hr","observer","getCurrentStep","goToNextStep","goToStep","onSubmit","onSave","onCancel","goToPreviousStep","set_currency","has_cancel","has_wallet_account","client","ui","useStore","has_active_real_account","has_real_account","upgradeable_currencies","legal_allowed_currencies","available_crypto_currencies","has_fiat","accounts","has_currency","Boolean","real_account_signup","resetRealAccountSignupParams","useDevice","crypto","filter","selected_currency","CURRENCY_TYPE","CRYPTO","fiat","FIAT","is_bypass_step","setIsBypassStep","should_disable_fiat","values","item","landing_company_shortcode","error_code","error_details","route_to_address_details","getAddressDetailsFields","includes","Formik","initialValues","actions","setSubmitting","current_step","errors","splitValidationResultTypes","_ref2","handleSubmit","AutoHeightWrapper","default_height","_ref3","_reorderCurrencies","_reorderCurrencies2","setRef","Div100vhContainer","height_offset","is_disabled","ThemedScrollbars","RadioButtonGroup","reorderCurrencies","avbl_currency","Field","component","RadioButton","_available_crypto_cur","crypto_data","has_separator","is_bypassed","FormSubmitButton","is_center","is_absolute","cancel_label","handleCancel","warnings","AccountsInfoLoader","is_desktop","is_logged_in","is_traders_hub_routes","speed","ContentLoader","backgroundColor","foregroundColor","LoggedInPreloader","LoggedOutPreloader","x","y","rx","ry","_Fragment","cx","cy","propTypes","PropTypes","PlatformSwitcherLoader","is_mobile","element_spacing","logo_size","name_x","name_y","container_width","container_margin","is_dtrader_v2","disabled_message","isBot","MenuItems","link_to","handleClickCashier","BinaryLink","to","active_class","ReportTab","routes","reports","CashierTab","has_any_real_account","is_virtual","toggleReadyToDepositModal","toggleNeedRealAccountForCashierModal","p2p_notification_count","useP2PNotificationCount","real_account_needed_for_cashier","useIsRealAccountNeededForCashier","history","useHistory","toggle_modal_routes","location","pathname","traders_hub","bot","cashier_redirect","Counter","count","cashier","startPerformanceEventTimer","push","cashier_deposit","i18n","useTranslation","useLocation","has_wallet","language","AccountInfo","AccountSettingsToggle","redirect_url","useAccountSettingsRedirect","accountSettings","href","isTabletOs","classNameBubble","should_disable_pointer_events","NotificationsToggle","is_visible","toggleDialog","ToggleNotifications","tooltip_message","showPopover","CurrencyButton","openRealAccountSignup","has_effect","DepositButton","onClickDeposit","LoggedOutView","LoginButton","SignupButton","AccountActionsComponent","_ref4","acc_switcher_disabled_message","account_type","balance","disableApp","enableApp","is_acc_switcher_on","is_acc_switcher_disabled","is_eu","is_notifications_visible","notifications_count","toggleAccountsDialog","toggleNotifications","isDepositButtonVisible","isCurrencyButtonVisible","formattedBalance","formatMoney","undefined","fallback","is_dialog_on","displayName","AccountActions","is_deriv_com","hostname","host","has_wallet_cookie","Cookies","isTmbEnabled","useTMB","async","_window$LiveChatWidge","isStaging","is_tmb_enabled","requestOidcAuthentication","redirectCallbackUri","origin","postLoginRedirectUri","catch","err","console","error","LiveChatWidget","redirectToLogin","getLanguage","tertiary","data_testid","is_active","is_hidden","onClickLink","suffix_icon","setMobileLanguageMenuOpen","is_trade_text","deriv_static_url","getStaticUrl","traders_hub_path","is_languages_link_on_responsive","languages","is_external_link","isExternalLink","is_cashier_link","cashier_withdrawal","cashier_acc_transfer","classNames","trade","PlatformBox","platform","appendAccountParamToUrl","PlatformDropdownContent","app_routing_history","exact","isActive","getActivePlatform","startsWith","preventDefault","PlatformDropdown","closeDrawer","platform_config","setTogglePlatformType","isHubRedirectionEnabled","useIsHubRedirectionEnabled","TradersHubRedirect","localStorage","setItem","platforms","tradershub_os","url","useOnClickOutside","event","target","closest","platform_dropdown","ReactDOM","document","getElementById","PlatformSwitcher","toggleDrawer","current_language","is_landing_company_loaded","is_logging_in","setIsOpen","is_close_drawer_fired_ref","getPlatformInformation","CSSTransition","mountOnEnter","appear","in","enterDone","timeout","unmountOnExit","withRouter","redirectToSignUp","is_livechat_available","useIsLiveChatWidgetAvailable","fcAvailable","useIsFreshchatAvailable","icAvailable","useIsIntercomAvailable","setInterval","liveChatClickHandler","Chat","open","onKeyDown","URLConstants","whatsApp","rel","NetworkStatus","common","network_status","status","network_status_element","class","tooltip","toggleLanguageSettingsModal","currentLang","allowed_languages","getAllowedLanguages","UNSUPPORTED_LANGUAGES","lang","isCurrentLanguage","LanguageLink","is_clickable","is_language_settings_modal_on","is_language_changing","toggle_settings_class","content","TranslationFlag","should_header_stick_body","LanguageSettings","ServerTime","server_time","gmt_time","toGMTFormat","local_time","toLocalFormat","is_mobile_language_menu_open","expandSubMenu","MobileDrawer","SubMenu","is_expanded","has_subheader","submenu_title","onToggle","submenu_toggle_class","ToggleMenuDrawer","modules","is_dark_mode_on","is_dark_mode","setDarkMode","toggleTheme","setIsForcedToExitPnv","account_status","is_authorize","logout","logoutClient","setIsLoggingOut","should_allow_authentication","should_allow_poinc_authentication","active_account_landing_company","is_proof_of_ownership_enabled","is_passkey_supported","is_p2p_available","payment_agent","is_payment_agent_visible","show_eu_related_content","is_account_transfer_visible","useAccountTransferVisible","mobile_redirect_url","isSuccess","useAuthorize","is_onramp_visible","useOnrampVisible","data","is_payment_agent_transfer_visible","usePaymentAgentTransferVisible","route","is_trading_hub_category","account","should_show_regulatory_information","is_traders_hub_route","is_wallet_route","wallets","wallets_compare_accounts","useRemoteConfig","cs_chat_livechat","cs_chat_whatsapp","transitionExit","setTransitionExit","primary_routes_config","setPrimaryRoutesConfig","is_submenu_expanded","subscribe","rest","isSubscribed","p2p_settings","useP2PSettings","clearTimeout","processRoutes","routes_config","getRoutesConfig","primary_routes","getFilteredRoutesConfig","setTimeout","handleLogout","phone_verification","Promise","resolve","oAuthLogout","useOauth2","passkeysMenuOpenActionEventTrack","Analytics","trackEvent","action","form_name","operating_system","getOSNameWithUAParser","all_routes_config","routes_to_filter","subroutes_config","flatMap","path","find","icon_class","toggle","MenuTitle","SubHeader","Item","MenuLink","handleTradershubRedirect","redirectUrl","url_query_string","search","account_currency","URLSearchParams","sessionStorage","getItem","route_config","idx","getRoutesWithSubMenu","is_authenticated","icon_component","getTitle","has_subroutes","some","subroutes","should_hide_passkeys_route","hideRoute","route_path","submenu_icon","submenu_suffix_icon","route_config_path","index","is_invisible","cashier_pa","cashier_pa_transfer","cashier_p2p","cashier_onramp","SubMenuSection","section_icon","section_title","subroute","subindex","passkeys","ToggleSwitch","handleToggle","is_enabled","has_border_bottom","WhatsApp","LiveChat","MobileLanguageMenu","EmptyNotification","color","clearNotifications","notifications","is_notifications_empty","notifications_array","toggleNotificationsModal","getNotificationItemIcon","toTitleCase","getButtonSettings","obj_key","isEmptyObject","primary_btn","cta_btn","secondary_btn","onActionTrackEvent","notification_key","filtered_notifications","only_toast_message","_getButtonSettings","_getButtonSettings2","_getButtonSettings3","_getButtonSettings4","_getButtonSettings8","_getButtonSettings5","_getButtonSettings6","_getButtonSettings7","buttonSettings","NotificationListWrapperForwardRef","styles","lineHeight","NotificationsList","NotificationsClearAllFooter","loginid","removeNotifications","removeNotificationMessage","removeNotificationMessageByKey","wrapper_ref","LocalStore","getObject","setObject","notification_num","should_show_again","_event$target","_wrapper_ref$current","notifications_toggle_btn","classList","contains","wrapper_classname","onClose","NotificationListWrapper","enter","exit","notifications_toggler_el","NotificationsDialog","setIsWalletsOnboardingTourGuideVisible","onboardingIcon","onClickHandler","_label$toUpperCase","is_demo","Badge","background_color","custom_color","toUpperCase","AccountSwitcherWalletItem","_gradients$card$theme","_icons$theme","closeAccountsDialog","show_badge","dtrade_loginid","dtrade_balance","gradients","icons","landing_company_name","icon_type","switchAccount","active_loginid","theme","app_icon","is_dtrade_active","onAccountSwitch","role","AppLinkedWithWalletIcon","gradient_class","card","wallet_icon","hide_watermark","WalletBadge","AccountSwitcherWalletList","is_dtrader_account_disabled","AccountSwitcherWallet","wallet_list","useStoreWalletAccountsList","dtrade_account_wallets","wallet","checkAllParentNodes","node","_node$classList","parent","parentNode","AccountSwitcherWalletMobile","isRtl","useIsRtl","footer","handleTradersHubRedirect","has_full_height","handleManageFundsRedirect","url_params","_window$location$path","wallets_transfer","toAccountLoginId","is_from_dtrader","DropdownArrow","BalanceLabel","display_code","MobileInfoIcon","DesktopInfoIcons","_icons$theme2","WalletIcon","has_bg","_ref5","_wallet_list$find","account_switcher_disabled_message","linked_wallets_accounts","useStoreLinkedWalletsAccounts","active_account","wallet_loginid","active_wallet","linked_dtrade_trading_account_loginid","_linked_wallets_accou","dtrade","linked_wallet","AccountInfoWrapper","ManageFundsButton","AccountActionsWallets","is_accounts_switcher_on","notificationsArray","isManageFundsButtonVisible","AccountInfoWallets","TradersHubOnboarding","getPlatformSettings","smarttrader","xmlns","fill","DerivShortLogo","StaticUrl","DerivBrandShortLogo","traders_hub_v2","EXPERIAN","SUCCESS","WARN","DANGER","PENDING","getAccountTitle","getExperianResult","ramp","currenciesPaymentAgentAvailability","all_payment_agent_list","account_list","result","has_payment_agent","agent","currencies","subheading","heading","FIAT_CURRENCY_TYPE","CRYPTO_CURRENCY_TYPE","AddCryptoCurrency","is_add_fiat","should_show_crypto_only","should_show_fiat_only","hasNoAvailableCrypto","should_show_cancel","getReorderedFiatCurrencies","canAddCrypto","isSubmitting","messages","canAddFiat","CurrencyRadioButtonGroup","touched","website_name","getReorderedCryptoCurrencies","CurrencyRadioButton","deposit_target","form_error","cancel_icon","string","onClickBack","func","bool","setShouldShowAllAvailableCurrencies","isLoading","is_loading","usePaymentAgentList","getReorderedCurrencies","allowed_currencies_payment_agent_availability","Loading","is_fullscreen","AddCrypto","is_add_crypto","autohide","AddFiat","current_currency_type","current_fiat_currency","closeRealAccountSignup","can_change_fiat_currency","non_fiat_mesage","fiat_currency","ChangeAccountCurrency","AddOrManageAccounts","is_add_currency","onError","onSuccessSetAccountCurrency","setLoading","setAccountCurrency","setCurrency","createCryptoAccount","is_low_risk","manage_real_account_tab_index","setShouldShowCancel","resetRealAccountSignupTarget","setIsDeposit","general_store","initial_active_index","active_index","setActiveIndex","WS","mt5LoginList","fetchMt5LoginList","setCurrencyOrAddCryptoAccount","currency_object","entries","then","response","previous_currency","echo_req","set_account_currency","finally","LoadingModal","fiat_section","closeModal","AddCurrency","is_mf_active","Tabs","onTabItemClick","top","header_fit_content","continueRouteAfterChooseCrypto","should_show_all_available_currencies","hasAllCryptos","addNewCryptoAccount","allowed_currencies_onramp_availability","currenciesOnRampAvailability","currencies_to_filter","filtered_currencies","_currencies_to_filter","can_add_onramp_supported_crypto_account","shouldShowAddButton","getReorderCryptoCurrencies","reordered_crypto_currencies","doSwitch","target_account","obj","currency_title","memoized_reordered_crypto_currencies","ChooseCurrency","FinishedAddCurrency","redirectToLegacyPlatform","deposit_real_account_signup_target","IconNextCurrency","IconWon","secondary","closeModalThenOpenCashier","SuccessMessage","prev","FinishedSetCurrency","IconPrevCurrency","IconArrow","noCryptoAvailable","error_message","updateValue","Heading","code","Message","details","address_line_1","phone","getSignupFormFields","TryAgain","onConfirm","ErrorCTA","SignupErrorContent","error_field","is_invalid_field_error","DialogHeading","DialogMessage","is_fully_authenticated","DialogPrimaryButton","closeModalAndOpenCashier","closeModalAndOpenPOI","closeModalAndOpenPOA","getActionButton","DialogDismissButton","DialogButtons","MainIcon","Checkmark","Warning","Danger","CloseIcon","StatusDialogContainer","_ref6","icon_size","getStatus","proof_of_identity","proof_of_address","StatusIcon","NewStatusDialogContainer","setShouldShowOneTimeDepositModal","wide","onOpenDepositModal","closeModalAndOpenDeposit","signup_error","choose_crypto_currency","add_currency","finished_add_currency","restricted_country_signup_error","invalid_input_error","active_modal_index_no","maltainvest_signup","state_index","fetchAccountSettings","is_from_restricted_country","realAccountSignup","is_real_acc_signup_on","setIsTradingAssessmentForNewUserEnabled","setIsClosingCreateRealAccountModal","setRealAccountSignupParams","setShouldShowAppropriatenessWarningModal","setShouldShowRiskWarningModal","should_show_appropriateness_warning_modal","should_show_risk_warning_modal","toggleAccountSuccessModal","state_value","is_trading_assessment_for_new_user_enabled","setDepositTarget","setError","real_account_form_data","risk_warning_title","setRiskWarningTitle","Suspense","AccountWizard","setIsRiskWarningVisible","onFinishSuccess","showStatusDialog","onNewFinishSuccess","showNewStatusDialog","onOpenWelcomeModal","closeModalthenOpenWelcomeModal","local_props","setRealAccountFormData","WizardHeading","_local_props$availabl","showErrorModal","_local_props$state_va","_local_props$availabl3","_local_props$state_va2","_local_props$state_va3","closeSetCurrencySuccessModal","form_source","payload","getModalHeight","setParams","active_modal_index","modal_pages_indices","curr","showSetCurrencySuccess","current_currency","is_loading_val","setIsLoading","JSON","real_signup_error_message","_modal_content$getAct","setCurrentAction","removeItem","onErrorConfirm","getIsManageTarget","getActiveModalIndex","modal_content","status_dialog","new_status_dialog","handleOnAccept","getAccountStatus","_get_account_status$s","closeModalthenOpenDepositModal","_response$new_account","handleOnDecline","setAssessmentDecline","assessment_decline","handleRiskAcceptance","is_risk_warning_visible","is_title_centered","renderTitle","finished_set_currency","is_set_currency_modal_visible","toggleSetCurrencyModal","has_set_currency","useHasSetCurrency","small","onUpdate","removeUpdateListener","addUpdateListener","redirect_to","base_url","account_limits","personal_details","residence","has_malta_invest_account","useHasMaltaInvestAccount","token","_accounts","current_token","_useFetch","useFetch","authorize","options","enabled","refetchOnWindowFocus","modified_authorize","useMemo","useHasActiveRealAccount","active_accounts","useHasSvgAccount","setIsLivechatAvailable","on","state","availability","is_eu_user","is_real","has_svg_account","has_maltainvest_account","_website_status$curre","_website_status$curre2","website_status","currencies_config","_p2p_settings$loginid","setP2PSettings","parse","onStorageChanged","notification","is_seen","context","useContext","P2PSettingsContext","Error","_data$paymentagent_li","paymentagent_list","list","_data$get_settings","is_websocket_authorized","setIsWebSocketAuthorized","wait","checkAuthorize","get_settings","is_authenticated_payment_agent","wallets_list","linked_accounts","ctrader","derivez","dxtrade","mt5","linked","linked_to","linked_to_account","currency_to_icon_mapper","Demo","dark","light","USD","EUR","AUD","GBP","BTC","ETH","USDT","eUSDT","tUSDT","UST","LTC","USDC","XRP","is_crypto","_Object$keys","account_category","_wallet$landing_compa","_wallet$linked_to","_accounts2","fiat_or_crypto","replace","is_malta_wallet","wallet_currency_type","sorted_wallets","sort","b","localeCompare"],"sourceRoot":""}